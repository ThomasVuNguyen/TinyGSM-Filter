[
  {
    "user": "Possible new questions and programs are: Anna wants to bake a cake for her friend's birthday. She needs to buy flour, sugar, eggs, butter, and chocolate. The prices are $1.5 per pound for flour, $0.8 per pound for sugar, $0.2 per egg, $2.5 per stick of butter, and $3 per bar of chocolate. She needs 3 pounds of flour, 2 pounds of sugar, 4 eggs, 2 sticks of butter, and 1 bar of chocolate. How much will she have to pay?",
    "assistant": "def simple_math_problem() -> float:\n    \"\"\"\n    Anna wants to bake a cake for her friend's birthday. She needs to buy flour, sugar, eggs, butter, and chocolate. The prices are $1.5 per pound for flour, $0.8 per pound for sugar, $0.2 per egg, $2.5 per stick of butter, and $3 per bar of chocolate. She needs 3 pounds of flour, 2 pounds of sugar, 4 eggs, 2 sticks of butter, and 1 bar of chocolate. How much will she have to pay?\n    \"\"\"\n    flour_price_per_pound = 1.5\n    sugar_price_per_pound = 0.8\n    egg_price_per_egg = 0.2\n    butter_price_per_stick = 2.5\n    chocolate_price_per_bar = 3\n\n    flour_needed_pounds = 3\n    sugar_needed_pounds = 2\n    eggs_needed = 4\n    butter_needed_sticks = 2\n    chocolate_needed_bars = 1\n\n    flour_cost = flour_price_per_pound * flour_needed_pounds\n    sugar_cost = sugar_price_per_pound * sugar_needed_pounds\n    eggs_cost = egg_price_per_egg * eggs_needed\n    butter_cost = butter_price_per_stick * butter_needed_sticks\n    chocolate_cost = chocolate_price_per_bar * chocolate_needed_bars\n\n    total_cost = flour_cost + sugar_cost + eggs_cost + butter_cost + chocolate_cost\n\n    result = total_cost\n\n    return result",
    "dataset": "ThomasTheMaker/TinyGSM-gpt4.1",
    "original_index": 150698
  },
  {
    "user": "A coffee shop sold 500 cups of coffee last month for $2.50 each. This month, they increased the price of their coffee to $2.75, and they only sold 400 cups. What is their percentage increase or decrease in revenue this month compared to last month?",
    "assistant": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A coffee shop sold 500 cups of coffee last month for $2.50 each. This month, they increased the price of their coffee to $2.75, and they only sold 400 cups. What is their percentage increase or decrease in revenue this month compared to last month?\n    \"\"\"\n    cups_last_month = 500\n    price_per_cup_last_month = 2.50\n    cups_this_month = 400\n    price_per_cup_this_month = 2.75\n\n    revenue_last_month = cups_last_month * price_per_cup_last_month\n    revenue_this_month = cups_this_month * price_per_cup_this_month\n\n    revenue_change = revenue_this_month - revenue_last_month\n    percentage_change = (revenue_change / revenue_last_month) * 100\n\n    result = percentage_change\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-gpt4.1",
    "original_index": 115647
  },
  {
    "user": "If 9 boxes each contain 4 kg of apples, how many total kg of apples do the boxes contain?",
    "assistant": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    If 9 boxes each contain 4 kg of apples, how many total kg of apples do the boxes contain?\n    \"\"\"\n    number_of_boxes = 9\n    apples_per_box_kg = 4\n    total_apples_kg = number_of_boxes * apples_per_box_kg\n    result = total_apples_kg\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-gpt4.1",
    "original_index": 11652
  },
  {
    "user": "Robert is picking apples for his family of 8. He can pick 6 apples at a time. How many times will he need to pick the apples to get enough for every family member?",
    "assistant": "def simple_math_problem() -> float:\n    \"\"\"\n    Robert is picking apples for his family of 8. He can pick 6 apples at a time. How many times will he need to pick the apples to get enough for every family member?\n    \"\"\"\n    family_members = 8\n    apples_per_pick = 6\n    # Calculate the number of times he needs to pick apples\n    # Since he needs enough apples for every member, we use ceiling division\n    times_to_pick = family_members / apples_per_pick\n    result = times_to_pick\n\n    return result",
    "dataset": "ThomasTheMaker/TinyGSM-gpt4.1",
    "original_index": 74339
  },
  {
    "user": "Question5: Jake bought 10 canadian flag for $6. How much he will pay for 12 canadian flags?",
    "assistant": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Jake bought 10 canadian flag for $6. How much he will pay for 12 canadian flags?\n    \"\"\"\n    num_flags_bought = 10\n    total_cost_for_flags = 6\n    num_flags_needed = 12\n\n    cost_per_flag = total_cost_for_flags / num_flags_bought\n    cost_for_12_flags = cost_per_flag * num_flags_needed\n    result = cost_for_12_flags\n\n    return result\n```\n",
    "dataset": "ThomasTheMaker/TinyGSM-gpt4.1",
    "original_index": 21473
  },
  {
    "user": "At a hospital, there are 240 nurses. 20% of them received a raise, while 15% were given a bonus for working overtime. How many nurses didn't receive any extra compensation?",
    "assistant": "def simple_math_problem() -> float:\n    \"\"\"\n    At a hospital, there are 240 nurses. 20% of them received a raise, while 15% were given a bonus for working overtime. How many nurses didn't receive any extra compensation?\n    \"\"\"\n    total_nurses = 240\n    percent_raise = 0.20\n    percent_bonus = 0.15\n\n    # Nurses who received a raise\n    nurses_raise = total_nurses * percent_raise\n\n    # Nurses who received a bonus\n    nurses_bonus = total_nurses * percent_bonus\n\n    # Nurses who received both raise and bonus\n    # Assuming no overlap unless stated.\n    # So, nurses who received any compensation = nurses_raise + nurses_bonus\n    nurses_with_compensation = nurses_raise + nurses_bonus\n\n    # But the correct logic is: if there may have been overlap, \n    # But the statement does not indicate overlap.\n    # So, we assume they are all different nurses.\n    nurses_no_compensation = total_nurses - nurses_with_compensation\n\n    result = nurses_no_compensation\n\n    return result",
    "dataset": "ThomasTheMaker/TinyGSM-gpt4.1",
    "original_index": 72688
  },
  {
    "user": "Susan has a jewelry store. She sells 5 necklaces to one customer and 28 necklaces to another customer each day. How many necklaces does she sell to these two customers in a week?",
    "assistant": "def simple_math_problem() -> float:\n    \"\"\"\n    Susan has a jewelry store. She sells 5 necklaces to one customer and 28 necklaces to another customer each day. How many necklaces does she sell to these two customers in a week?\n    \"\"\"\n    necklaces_sold_customer1_per_day = 5\n    necklaces_sold_customer2_per_day = 28\n    days_in_week = 7\n    total_necklaces_sold_per_day = necklaces_sold_customer1_per_day + necklaces_sold_customer2_per_day\n    total_necklaces_sold_in_week = total_necklaces_sold_per_day * days_in_week\n    result = total_necklaces_sold_in_week\n\n    return result",
    "dataset": "ThomasTheMaker/TinyGSM-gpt4.1",
    "original_index": 93420
  },
  {
    "user": "Student: In a class of 18 students, 10 students are boys and the rest are girls. What is the ratio of boys to girls?",
    "assistant": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    In a class of 18 students, 10 students are boys and the rest are girls. What is the ratio of boys to girls?\n    \"\"\"\n    total_students = 18\n    number_of_boys = 10\n    number_of_girls = total_students - number_of_boys  # Calculate the number of girls\n    ratio_boys_to_girls = number_of_boys / number_of_girls  # Find the ratio\n    \n    result = ratio_boys_to_girls\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-gpt4.1",
    "original_index": 108104
  },
  {
    "user": "There are 25 students in each class. If there are 3 classes per grade and 6 grades in total, how many students are in the school?",
    "assistant": "def simple_math_problem() -> float:\n    \"\"\"\n    There are 25 students in each class. If there are 3 classes per grade and 6 grades in total, how many students are in the school?\n    \"\"\"\n    students_per_class = 25\n    classes_per_grade = 3\n    number_of_grades = 6\n\n    students_per_grade = students_per_class * classes_per_grade\n    total_students = students_per_grade * number_of_grades\n\n    result = total_students\n\n    return result",
    "dataset": "ThomasTheMaker/TinyGSM-gpt4.1",
    "original_index": 38339
  },
  {
    "user": "Student: Greg is hosting a birthday party for his 15 friends. He is buying bottles of juices that cost $0.75 each. If Greg bought 29 bottles, how much did he spend?",
    "assistant": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Greg is hosting a birthday party for his 15 friends. He is buying bottles of juices that cost $0.75 each. If Greg bought 29 bottles, how much did he spend?\n    \"\"\"\n    numberOfFriends = 15\n    juiceBottlePrice = 0.75\n    bottlesBought = 29\n    totalSpent = juiceBottlePrice * bottlesBought\n    result = totalSpent\n\n    return result\n```\n",
    "dataset": "ThomasTheMaker/TinyGSM-gpt4.1",
    "original_index": 46772
  }
]