[
  {
    "index": 0,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Ryan had 60 books. He read 1/5 of them and sold 1/4 of the remaining books online. How many books did he have left?\n    \"\"\"\n    total_books = 60\n    books_read = total_books * (1/5)\n    remaining_books = total_books - books_read\n    books_sold = remaining_books * (1/4)\n    result = remaining_books - books_sold\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Ryan had 60 books. He read 1/5 of them and sold 1/4 of the remaining books online. How many books did he have left?\n    \"\"\"\n    total_books = 60\n    books_read = total_books * (1/5)\n    remaining_books = total_books - books_read\n    books_sold = remaining_books * (1/4)\n    result = remaining_books - books_sold\n\n    return result\n\nprint(simple_math_problem())",
    "result": 36.0
  },
  {
    "index": 1,
    "response": "```python\ndef simple_math_problem() -> tuple:\n    \"\"\"\n    The sum of two numbers is 42. If one-third of the second number is subtracted from twice the first number, the result is 17. What are the two numbers?\n    \"\"\"\n    # Let's denote the first number as x and the second number as y\n    # We have two equations:\n    # 1) x + y = 42\n    # 2) 2x - (1/3)y = 17\n    \n    # We can solve these equations using Python\n    from sympy import symbols, Eq, solve\n    \n    x, y = symbols('x y')\n    \n    # Define the equations\n    equation1 = Eq(x + y, 42)\n    equation2 = Eq(2*x - (1/3)*y, 17)\n    \n    # Solve the equations\n    solution = solve((equation1,equation2), (x, y))\n    \n    result = (solution[x], solution[y])\n    \n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> tuple:\n    \"\"\"\n    The sum of two numbers is 42. If one-third of the second number is subtracted from twice the first number, the result is 17. What are the two numbers?\n    \"\"\"\n    # Let's denote the first number as x and the second number as y\n    # We have two equations:\n    # 1) x + y = 42\n    # 2) 2x - (1/3)y = 17\n    \n    # We can solve these equations using Python\n    from sympy import symbols, Eq, solve\n    \n    x, y = symbols('x y')\n    \n    # Define the equations\n    equation1 = Eq(x + y, 42)\n    equation2 = Eq(2*x - (1/3)*y, 17)\n    \n    # Solve the equations\n    solution = solve((equation1,equation2), (x, y))\n    \n    result = (solution[x], solution[y])\n    \n    return result\n\nprint(simple_math_problem())",
    "result": "Error: Traceback (most recent call last):\n  File \"/tmp/tmp_7ntnw02.py\", line 26, in <module>\n    print(simple_math_problem())\n          ^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmp_7ntnw02.py\", line 11, in simple_math_problem\n    from sympy import symbols, Eq, solve\nModuleNotFoundError: No module named 'sympy'\n"
  },
  {
    "index": 2,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Sarah sold 100 jars of pickles for $5 each. Her expenses were $200 for ingredients and $50 for packaging. What is her total profit?\n    \"\"\"\n    jars_of_pickles_sold = 100\n    price_per_jar = 5\n    total_revenue = jars_of_pickles_sold * price_per_jar\n    ingredients_expense = 200\n    packaging_expense = 50\n    total_expenses = ingredients_expense + packaging_expense\n    result = total_revenue - total_expenses\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Sarah sold 100 jars of pickles for $5 each. Her expenses were $200 for ingredients and $50 for packaging. What is her total profit?\n    \"\"\"\n    jars_of_pickles_sold = 100\n    price_per_jar = 5\n    total_revenue = jars_of_pickles_sold * price_per_jar\n    ingredients_expense = 200\n    packaging_expense = 50\n    total_expenses = ingredients_expense + packaging_expense\n    result = total_revenue - total_expenses\n\n    return result\n\nprint(simple_math_problem())",
    "result": 250
  },
  {
    "index": 3,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    The town of Florence, Italy is starting a new tourism campaign in Rome, 354 miles away. A bus is making this round trip, and can reach a top speed of 75 miles per hour. The round trip requires 4 stops for a total of 45 minutes. How long will the round trip take in hours?\n    \"\"\"\n    distance_to_rome = 354  # miles\n    top_speed = 75  # miles per hour\n    total_stops_time = 45  # minutes\n    total_distance = distance_to_rome * 2  # round trip\n    driving_time = total_distance / top_speed  # hours\n    total_stops_time_hours = total_stops_time / 60  # convert minutes to hours\n    result = driving_time + total_stops_time_hours  # total round trip time\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    The town of Florence, Italy is starting a new tourism campaign in Rome, 354 miles away. A bus is making this round trip, and can reach a top speed of 75 miles per hour. The round trip requires 4 stops for a total of 45 minutes. How long will the round trip take in hours?\n    \"\"\"\n    distance_to_rome = 354  # miles\n    top_speed = 75  # miles per hour\n    total_stops_time = 45  # minutes\n    total_distance = distance_to_rome * 2  # round trip\n    driving_time = total_distance / top_speed  # hours\n    total_stops_time_hours = total_stops_time / 60  # convert minutes to hours\n    result = driving_time + total_stops_time_hours  # total round trip time\n\n    return result\n\nprint(simple_math_problem())",
    "result": 10.19
  },
  {
    "index": 4,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    After selling all the furniture in their house, Alex earned $3000 on Craiglist. If his sister Madison also sold her furniture and made 60% of what Alex earned, calculate the total amount of money made by Alex and Madison.\n    \"\"\"\n    alex_earnings = 3000\n    madison_earnings_percentage = 0.6\n    madison_earnings = alex_earnings * madison_earnings_percentage\n    total_earnings = alex_earnings + madison_earnings\n    result = total_earnings\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    After selling all the furniture in their house, Alex earned $3000 on Craiglist. If his sister Madison also sold her furniture and made 60% of what Alex earned, calculate the total amount of money made by Alex and Madison.\n    \"\"\"\n    alex_earnings = 3000\n    madison_earnings_percentage = 0.6\n    madison_earnings = alex_earnings * madison_earnings_percentage\n    total_earnings = alex_earnings + madison_earnings\n    result = total_earnings\n\n    return result\n\nprint(simple_math_problem())",
    "result": 4800.0
  },
  {
    "index": 5,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A family bought a few items from the grocery store. The first item cost $4.50, the second item cost double that, and the third item cost half as much as the second item. What was the total cost for these three items?\n    \"\"\"\n    cost_of_first_item = 4.50\n    cost_of_second_item = cost_of_first_item * 2\n    cost_of_third_item = cost_of_second_item / 2\n    total_cost = cost_of_first_item + cost_of_second_item + cost_of_third_item\n    result = total_cost\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A family bought a few items from the grocery store. The first item cost $4.50, the second item cost double that, and the third item cost half as much as the second item. What was the total cost for these three items?\n    \"\"\"\n    cost_of_first_item = 4.50\n    cost_of_second_item = cost_of_first_item * 2\n    cost_of_third_item = cost_of_second_item / 2\n    total_cost = cost_of_first_item + cost_of_second_item + cost_of_third_item\n    result = total_cost\n\n    return result\n\nprint(simple_math_problem())",
    "result": 18.0
  },
  {
    "index": 6,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    The restaurant receives 150 online orders and 90 phone orders per day. How many orders does the restaurant handle in nine months if all months have 30 days?\n    \"\"\"\n    online_orders_per_day = 150\n    phone_orders_per_day = 90\n    total_orders_per_day = online_orders_per_day + phone_orders_per_day\n    days_in_month = 30\n    months = 9\n    total_days = days_in_month * months\n    total_orders = total_orders_per_day * total_days\n    result = total_orders\n\n    return result\n\n# Test the function\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    The restaurant receives 150 online orders and 90 phone orders per day. How many orders does the restaurant handle in nine months if all months have 30 days?\n    \"\"\"\n    online_orders_per_day = 150\n    phone_orders_per_day = 90\n    total_orders_per_day = online_orders_per_day + phone_orders_per_day\n    days_in_month = 30\n    months = 9\n    total_days = days_in_month * months\n    total_orders = total_orders_per_day * total_days\n    result = total_orders\n\n    return result\n\n# Test the function\nprint(simple_math_problem())",
    "result": 64800
  },
  {
    "index": 7,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    Mary had 29 pencils. She gave away 10 pencils and received 6 pencils. How many pencils does Mary have now?\n    \"\"\"\n    initial_pencils = 29\n    pencils_given_away = 10\n    pencils_received = 6\n    pencils_left = initial_pencils - pencils_given_away + pencils_received\n    result = pencils_left\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    Mary had 29 pencils. She gave away 10 pencils and received 6 pencils. How many pencils does Mary have now?\n    \"\"\"\n    initial_pencils = 29\n    pencils_given_away = 10\n    pencils_received = 6\n    pencils_left = initial_pencils - pencils_given_away + pencils_received\n    result = pencils_left\n\n    return result\n\nprint(simple_math_problem())",
    "result": 25
  },
  {
    "index": 8,
    "response": "```python\ndef simple_math_problem() -> float:\n\"\"\"\nIn a class of 30 students, 20% are girls. How many boys are there in the class?\n\"\"\"\ntotal_students = 30\npercentage_girls = 20\nnumber_of_girls = (percentage_girls / 100) * total_students\nnumber_of_boys = total_students - number_of_girls\nresult = number_of_boys\n\nreturn result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    In a class of 30 students, 20% are girls. How many boys are there in the class?\n    \"\"\"\n    total_students = 30\n    percentage_girls = 20\n    number_of_girls = (percentage_girls / 100) * total_students\n    number_of_boys = total_students - number_of_girls\n    result = number_of_boys\n\n    return result\n\n    print(simple_math_problem())",
    "result": 24.0
  },
  {
    "index": 9,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Elaine spent 1/4 of her money on a trip to the movies. Later she spent 1/2 of what was left on dinner. If she has $135 in her purse, how much money did Elaine have to start with?\n    \"\"\"\n    money_left = 135  # Money Elaine has after spending on the trip and dinner\n    fraction_left_after_dinner = 1 / 2  # Fraction of money left after spending on dinner\n    money_before_dinner = money_left / fraction_left_after_dinner  # Money Elaine had before spending on dinner\n    fraction_left_after_trip = 3 / 4  # Fraction of money left after spending on the trip\n    initial_money = money_before_dinner / fraction_left_after_trip  # Initial money Elaine had\n    result = initial_money\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Elaine spent 1/4 of her money on a trip to the movies. Later she spent 1/2 of what was left on dinner. If she has $135 in her purse, how much money did Elaine have to start with?\n    \"\"\"\n    money_left = 135  # Money Elaine has after spending on the trip and dinner\n    fraction_left_after_dinner = 1 / 2  # Fraction of money left after spending on dinner\n    money_before_dinner = money_left / fraction_left_after_dinner  # Money Elaine had before spending on dinner\n    fraction_left_after_trip = 3 / 4  # Fraction of money left after spending on the trip\n    initial_money = money_before_dinner / fraction_left_after_trip  # Initial money Elaine had\n    result = initial_money\n\n    return result\n\nprint(simple_math_problem())",
    "result": 360.0
  },
  {
    "index": 10,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Each day, Mark drinks 2 glasses of water for every 1 glass of soda he drinks. If he drinks 10 glasses of soda in a week, how much water has he consumed in the same week?\n    \"\"\"\n    glasses_of_soda_per_week = 10\n    glasses_of_water_per_soda = 2\n    total_glasses_of_water_per_week = glasses_of_soda_per_week * glasses_of_water_per_soda\n    result = total_glasses_of_water_per_week\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Each day, Mark drinks 2 glasses of water for every 1 glass of soda he drinks. If he drinks 10 glasses of soda in a week, how much water has he consumed in the same week?\n    \"\"\"\n    glasses_of_soda_per_week = 10\n    glasses_of_water_per_soda = 2\n    total_glasses_of_water_per_week = glasses_of_soda_per_week * glasses_of_water_per_soda\n    result = total_glasses_of_water_per_week\n\n    return result\n\nprint(simple_math_problem())",
    "result": 20
  },
  {
    "index": 11,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Before a store opened, there were 12 employees inside. After opening, there were 24 employees inside. What is 30% of the number of employees who arrived after opening?\n    \"\"\"\n    initial_employees = 12\n    final_employees = 24\n    employees_arrived = final_employees - initial_employees\n    result = employees_arrived * 0.3\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Before a store opened, there were 12 employees inside. After opening, there were 24 employees inside. What is 30% of the number of employees who arrived after opening?\n    \"\"\"\n    initial_employees = 12\n    final_employees = 24\n    employees_arrived = final_employees - initial_employees\n    result = employees_arrived * 0.3\n\n    return result\n\nprint(simple_math_problem())",
    "result": 3.5999999999999996
  },
  {
    "index": 12,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    If a man had 50 balloons and gave away thirty percent of them, how many balloons did he have left?\n    \"\"\"\n    total_balloons = 50\n    percentage_given_away = 30 / 100  # Convert percentage to decimal\n    balloons_given_away = total_balloons * percentage_given_away\n    balloons_left = total_balloons - balloons_given_away\n    result = balloons_left\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    If a man had 50 balloons and gave away thirty percent of them, how many balloons did he have left?\n    \"\"\"\n    total_balloons = 50\n    percentage_given_away = 30 / 100  # Convert percentage to decimal\n    balloons_given_away = total_balloons * percentage_given_away\n    balloons_left = total_balloons - balloons_given_away\n    result = balloons_left\n\n    return result\n\nprint(simple_math_problem())",
    "result": 35.0
  },
  {
    "index": 13,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Jill runs a painting business. She charges $2 for every drop cloth and $3 for each gallon of paint. If Jill paints a wall with six drop cloths and 4 gallons of paint, how much does she charge?\n    \"\"\"\n    cost_per_drop_cloth = 2\n    cost_per_gallon_paint = 3\n    number_of_drop_cloths = 6\n    number_of_gallons_paint = 4\n    total_cost_drop_cloths = cost_per_drop_cloth * number_of_drop_cloths\n    total_cost_paint = cost_per_gallon_paint * number_of_gallons_paint\n    result = total_cost_drop_cloths + total_cost_paint\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Jill runs a painting business. She charges $2 for every drop cloth and $3 for each gallon of paint. If Jill paints a wall with six drop cloths and 4 gallons of paint, how much does she charge?\n    \"\"\"\n    cost_per_drop_cloth = 2\n    cost_per_gallon_paint = 3\n    number_of_drop_cloths = 6\n    number_of_gallons_paint = 4\n    total_cost_drop_cloths = cost_per_drop_cloth * number_of_drop_cloths\n    total_cost_paint = cost_per_gallon_paint * number_of_gallons_paint\n    result = total_cost_drop_cloths + total_cost_paint\n\n    return result\n\nprint(simple_math_problem())",
    "result": 24
  },
  {
    "index": 14,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A triangle has a base of 12 cm and a height of 9 cm. Another triangle has a base that is twice as long as the first one and a height that is half as long as the first one. What is the difference between the areas of the two triangles?\n    \"\"\"\n    # Define the base and height of the first triangle\n    base_triangle1 = 12  # in cm\n    height_triangle1 = 9  # in cm\n\n    # Calculate the area of the first triangle\n    area_triangle1 = 0.5 * base_triangle1 * height_triangle1\n\n    # Define the base and height of the second triangle\n    base_triangle2 = 2 * base_triangle1  # in cm\n    height_triangle2 = 0.5 * height_triangle1  # in cm\n\n    # Calculate the area of the second triangle\n    area_triangle2 = 0.5 * base_triangle2 * height_triangle2\n\n    # Calculate the difference between the areas of the two triangles\n    result = abs(area_triangle1 - area_triangle2)\n\n    return result\n\n# Execute the function to get the final answer\nfinal_answer = simple_math_problem()\nprint(\"The final answer is\", final_answer)\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A triangle has a base of 12 cm and a height of 9 cm. Another triangle has a base that is twice as long as the first one and a height that is half as long as the first one. What is the difference between the areas of the two triangles?\n    \"\"\"\n    # Define the base and height of the first triangle\n    base_triangle1 = 12  # in cm\n    height_triangle1 = 9  # in cm\n\n    # Calculate the area of the first triangle\n    area_triangle1 = 0.5 * base_triangle1 * height_triangle1\n\n    # Define the base and height of the second triangle\n    base_triangle2 = 2 * base_triangle1  # in cm\n    height_triangle2 = 0.5 * height_triangle1  # in cm\n\n    # Calculate the area of the second triangle\n    area_triangle2 = 0.5 * base_triangle2 * height_triangle2\n\n    # Calculate the difference between the areas of the two triangles\n    result = abs(area_triangle1 - area_triangle2)\n\n    return result\n\n# Execute the function to get the final answer\nfinal_answer = simple_math_problem()\nprint(\"The final answer is\", final_answer)",
    "result": 0.0
  },
  {
    "index": 15,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    A pool contains 120 marbles and they are separated into 3 colors. Green marbles are 4 times more than the yellow marbles, while red marbles make up 20% of the yellow marbles. How many red marbles are there?\n    \"\"\"\n    total_marbles = 120\n    # Let's denote the number of yellow marbles as y\n    # Green marbles are 4 times more than the yellow marbles, so green marbles = 4y\n    # Red marbles make up 20% of the yellow marbles, so red marbles = 0.2y\n    # The total number of marbles is the sum of yellow, green, and red marbles\n    # So, y + 4y + 0.2y = 120\n    # Combine like terms: 5.2y = 120\n    # Solve for y: y = 120 / 5.2\n    yellow_marbles = total_marbles / 5.2\n    # Now that we know the number of yellow marbles, we can find the number of red marbles\n    # Red marbles = 0.2y\n    red_marbles = 0.2 * yellow_marbles\n    result = int(red_marbles)  # Convert to integer since we can't have a fraction of a marble\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    A pool contains 120 marbles and they are separated into 3 colors. Green marbles are 4 times more than the yellow marbles, while red marbles make up 20% of the yellow marbles. How many red marbles are there?\n    \"\"\"\n    total_marbles = 120\n    # Let's denote the number of yellow marbles as y\n    # Green marbles are 4 times more than the yellow marbles, so green marbles = 4y\n    # Red marbles make up 20% of the yellow marbles, so red marbles = 0.2y\n    # The total number of marbles is the sum of yellow, green, and red marbles\n    # So, y + 4y + 0.2y = 120\n    # Combine like terms: 5.2y = 120\n    # Solve for y: y = 120 / 5.2\n    yellow_marbles = total_marbles / 5.2\n    # Now that we know the number of yellow marbles, we can find the number of red marbles\n    # Red marbles = 0.2y\n    red_marbles = 0.2 * yellow_marbles\n    result = int(red_marbles)  # Convert to integer since we can't have a fraction of a marble\n\n    return result\n\nprint(simple_math_problem())",
    "result": 4
  },
  {
    "index": 16,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Aliyah has 5 times as many dolls as Quincy has. If Aliyah has 35 dolls, how many dolls does Quincy have?\n    \"\"\"\n    aliya_dolls = 35\n    quincy_dolls_multiplier = 5\n    quincy_dolls = aliya_dolls / quincy_dolls_multiplier\n    result = quincy_dolls\n\n    return result\n\n# Test the function\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Aliyah has 5 times as many dolls as Quincy has. If Aliyah has 35 dolls, how many dolls does Quincy have?\n    \"\"\"\n    aliya_dolls = 35\n    quincy_dolls_multiplier = 5\n    quincy_dolls = aliya_dolls / quincy_dolls_multiplier\n    result = quincy_dolls\n\n    return result\n\n# Test the function\nprint(simple_math_problem())",
    "result": 7.0
  },
  {
    "index": 17,
    "response": "```python\ndef simple_math_problem() -> int:\n\"\"\"\nMark has 10 crayons. He gives 2 crayons to his younger sister and loses another 4 while he was playing. How many crayons does Mark have left?\n\"\"\"\ninitial_crayons = 10\ncrayons_given_to_sister = 2\ncrayons_lost_while_playing = 4\ntotal_crayons_lost = crayons_given_to_sister + crayons_lost_while_playing\ncrayons_left = initial_crayons - total_crayons_lost\nresult = crayons_left\n\nreturn result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    Mark has 10 crayons. He gives 2 crayons to his younger sister and loses another 4 while he was playing. How many crayons does Mark have left?\n    \"\"\"\n    initial_crayons = 10\n    crayons_given_to_sister = 2\n    crayons_lost_while_playing = 4\n    total_crayons_lost = crayons_given_to_sister + crayons_lost_while_playing\n    crayons_left = initial_crayons - total_crayons_lost\n    result = crayons_left\n\n    return result\n\n    print(simple_math_problem())",
    "result": 4
  },
  {
    "index": 18,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Helen can climb a mountain in 5 hours. Jane can climb the same mountain in 3 hours. In minutes, how much faster will Jane climb the mountain?\n    \"\"\"\n    helen_climb_time_hours = 5\n    jane_climb_time_hours = 3\n    helen_climb_time_minutes = helen_climb_time_hours * 60\n    jane_climb_time_minutes = jane_climb_time_hours * 60\n    time_difference_minutes = helen_climb_time_minutes - jane_climb_time_minutes\n    result = time_difference_minutes\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Helen can climb a mountain in 5 hours. Jane can climb the same mountain in 3 hours. In minutes, how much faster will Jane climb the mountain?\n    \"\"\"\n    helen_climb_time_hours = 5\n    jane_climb_time_hours = 3\n    helen_climb_time_minutes = helen_climb_time_hours * 60\n    jane_climb_time_minutes = jane_climb_time_hours * 60\n    time_difference_minutes = helen_climb_time_minutes - jane_climb_time_minutes\n    result = time_difference_minutes\n\n    return result\n\nprint(simple_math_problem())",
    "result": 120
  },
  {
    "index": 19,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    Eric had 9 marbles. He played a game with his friend and won 3 more marbles. Then he played another game and lost 2 marbles. After that, he bought 4 more marbles from the store. Finally, he gave 1 marble to his sister as a gift. How many marbles does Eric have now?\n    \"\"\"\n    initial_marbles = 9\n    marbles_won = 3\n    marbles_lost = 2\n    marbles_bought = 4\n    marbles_given_away = 1\n    \n    total_marbles_after_winning = initial_marbles + marbles_won\n    total_marbles_after_losing = total_marbles_after_winning - marbles_lost\n    total_marbles_after_buying = total_marbles_after_losing + marbles_bought\n    result = total_marbles_after_buying - marbles_given_away\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    Eric had 9 marbles. He played a game with his friend and won 3 more marbles. Then he played another game and lost 2 marbles. After that, he bought 4 more marbles from the store. Finally, he gave 1 marble to his sister as a gift. How many marbles does Eric have now?\n    \"\"\"\n    initial_marbles = 9\n    marbles_won = 3\n    marbles_lost = 2\n    marbles_bought = 4\n    marbles_given_away = 1\n    \n    total_marbles_after_winning = initial_marbles + marbles_won\n    total_marbles_after_losing = total_marbles_after_winning - marbles_lost\n    total_marbles_after_buying = total_marbles_after_losing + marbles_bought\n    result = total_marbles_after_buying - marbles_given_away\n\n    return result\n\nprint(simple_math_problem())",
    "result": 13
  },
  {
    "index": 20,
    "response": "```python\ndef simple_math_problem() -> str:\n    \"\"\"\n    A baseball team has 25 baseballs. If they want to give an equal number of baseballs to each player, how many baseballs can each player get and how many will be left over?\n    \"\"\"\n    totalBaseballs = 25\n    numberOfPlayers = 9  # Assuming a standard baseball team has 9 players\n    baseballsPerPlayer = totalBaseballs // numberOfPlayers\n    leftoverBaseballs = totalBaseballs % numberOfPlayers\n    result = f\"Each player can get {baseballsPerPlayer} baseballs and {leftoverBaseballs} will be left over.\"\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> str:\n    \"\"\"\n    A baseball team has 25 baseballs. If they want to give an equal number of baseballs to each player, how many baseballs can each player get and how many will be left over?\n    \"\"\"\n    totalBaseballs = 25\n    numberOfPlayers = 9  # Assuming a standard baseball team has 9 players\n    baseballsPerPlayer = totalBaseballs // numberOfPlayers\n    leftoverBaseballs = totalBaseballs % numberOfPlayers\n    result = f\"Each player can get {baseballsPerPlayer} baseballs and {leftoverBaseballs} will be left over.\"\n\n    return result\n\nprint(simple_math_problem())",
    "result": "Each player can get 2 baseballs and 7 will be left over."
  },
  {
    "index": 21,
    "response": "```python\nimport math\n\ndef simple_math_problem() -> float:\n    \"\"\"\n    A right triangle has a hypotenuse of length 20 and a leg of length 15. What is the length of the other leg?\n    \"\"\"\n    hypotenuse_length = 20\n    known_leg_length = 15\n    unknown_leg_length_squared = hypotenuse_length ** 2 - known_leg_length ** 2\n    unknown_leg_length = math.sqrt(unknown_leg_length_squared)\n    result = unknown_leg_length\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "import math\n\ndef simple_math_problem() -> float:\n    \"\"\"\n    A right triangle has a hypotenuse of length 20 and a leg of length 15. What is the length of the other leg?\n    \"\"\"\n    hypotenuse_length = 20\n    known_leg_length = 15\n    unknown_leg_length_squared = hypotenuse_length ** 2 - known_leg_length ** 2\n    unknown_leg_length = math.sqrt(unknown_leg_length_squared)\n    result = unknown_leg_length\n\n    return result\n\nprint(simple_math_problem())",
    "result": 13.228756555322953
  },
  {
    "index": 22,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A shopkeeper put a discount of 10% on an item. If the new price is $135, what was the original price?\n    \"\"\"\n    new_price = 135\n    discount_percentage = 0.1  # 10% as a decimal\n    original_price = new_price / (1 - discount_percentage)\n    result = original_price\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A shopkeeper put a discount of 10% on an item. If the new price is $135, what was the original price?\n    \"\"\"\n    new_price = 135\n    discount_percentage = 0.1  # 10% as a decimal\n    original_price = new_price / (1 - discount_percentage)\n    result = original_price\n\n    return result\n\nprint(simple_math_problem())",
    "result": 150.0
  },
  {
    "index": 23,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A shoebox fits 12 pairs of shoes. If I take out 3 pairs every week and replace them with 5 pairs every 10 days. How many pairs of shoes have I replaced in 40 weeks?\n    \"\"\"\n    total_weeks = 40\n    pairs_replaced_per_10_days = 5\n    days_in_10_days = 10\n    days_in_week = 7\n    total_days = total_weeks * days_in_week\n    total_10_day_periods = total_days / days_in_10_days\n    result = pairs_replaced_per_10_days * total_10_day_periods\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A shoebox fits 12 pairs of shoes. If I take out 3 pairs every week and replace them with 5 pairs every 10 days. How many pairs of shoes have I replaced in 40 weeks?\n    \"\"\"\n    total_weeks = 40\n    pairs_replaced_per_10_days = 5\n    days_in_10_days = 10\n    days_in_week = 7\n    total_days = total_weeks * days_in_week\n    total_10_day_periods = total_days / days_in_10_days\n    result = pairs_replaced_per_10_days * total_10_day_periods\n\n    return result\n\nprint(simple_math_problem())",
    "result": 140.0
  },
  {
    "index": 24,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Ethan is fixing his bike. It takes 45 minutes to fix the chain. The gears take 20% longer to fix than the chain. The brakes take a total of 1 hour to fix. How long does it take Ethan to fix the entire bike?\n    \"\"\"\n    chain_fix_time = 45  # in minutes\n    gears_fix_time_increase = 0.20  # 20% increase\n    gears_fix_time = chain_fix_time * (1 + gears_fix_time_increase)\n    brakes_fix_time = 60  # 1 hour in minutes\n    total_fix_time = chain_fix_time + gears_fix_time + brakes_fix_time\n    result = total_fix_time\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Ethan is fixing his bike. It takes 45 minutes to fix the chain. The gears take 20% longer to fix than the chain. The brakes take a total of 1 hour to fix. How long does it take Ethan to fix the entire bike?\n    \"\"\"\n    chain_fix_time = 45  # in minutes\n    gears_fix_time_increase = 0.20  # 20% increase\n    gears_fix_time = chain_fix_time * (1 + gears_fix_time_increase)\n    brakes_fix_time = 60  # 1 hour in minutes\n    total_fix_time = chain_fix_time + gears_fix_time + brakes_fix_time\n    result = total_fix_time\n\n    return result\n\nprint(simple_math_problem())",
    "result": 159.0
  },
  {
    "index": 25,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Amy is driving a car from Boston to New York, a distance of 220 miles. If it takes her 4 hours and the car uses 5 gallons of gas per hour, how much money will it cost her if the price of gas is $3.5 per gallon?\n    \"\"\"\n    total_distance = 220  # miles\n    total_time = 4  # hours\n    gas_consumption_per_hour = 5  # gallons per hour\n    price_of_gas_per_gallon = 3.5  # dollars per gallon\n    \n    total_gas_consumed = gas_consumption_per_hour * total_time\n    total_cost = total_gas_consumed * price_of_gas_per_gallon\n    \n    result = total_cost\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Amy is driving a car from Boston to New York, a distance of 220 miles. If it takes her 4 hours and the car uses 5 gallons of gas per hour, how much money will it cost her if the price of gas is $3.5 per gallon?\n    \"\"\"\n    total_distance = 220  # miles\n    total_time = 4  # hours\n    gas_consumption_per_hour = 5  # gallons per hour\n    price_of_gas_per_gallon = 3.5  # dollars per gallon\n    \n    total_gas_consumed = gas_consumption_per_hour * total_time\n    total_cost = total_gas_consumed * price_of_gas_per_gallon\n    \n    result = total_cost\n\n    return result\n\nprint(simple_math_problem())",
    "result": 70.0
  },
  {
    "index": 26,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Ella had 600 beads that were either pink, purple, blue, or white. She used one-sixth of the pink beads, one-fourth of the purple beads, one-third of the blue beads, and one-half of the white beads to make a necklace. How many beads did she use in total?\n    \"\"\"\n    total_beads = 600\n    # Since we don't know the exact distribution of beads, let's represent the number of beads of each color as variables\n    pink_beads = total_beads / 4  # Assuming equal distribution for simplicity\n    purple_beads = total_beads / 4\n    blue_beads = total_beads / 4\n    white_beads = total_beads / 4\n    \n    # Calculate the number of beads used for each color\n    pink_beads_used = pink_beads / 6\n    purple_beads_used = purple_beads / 4\n    blue_beads_used = blue_beads / 3\n    white_beads_used = white_beads / 2\n    \n    # Calculate the total number of beads used\n    result = pink_beads_used + purple_beads_used + blue_beads_used + white_beads_used\n    \n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Ella had 600 beads that were either pink, purple, blue, or white. She used one-sixth of the pink beads, one-fourth of the purple beads, one-third of the blue beads, and one-half of the white beads to make a necklace. How many beads did she use in total?\n    \"\"\"\n    total_beads = 600\n    # Since we don't know the exact distribution of beads, let's represent the number of beads of each color as variables\n    pink_beads = total_beads / 4  # Assuming equal distribution for simplicity\n    purple_beads = total_beads / 4\n    blue_beads = total_beads / 4\n    white_beads = total_beads / 4\n    \n    # Calculate the number of beads used for each color\n    pink_beads_used = pink_beads / 6\n    purple_beads_used = purple_beads / 4\n    blue_beads_used = blue_beads / 3\n    white_beads_used = white_beads / 2\n    \n    # Calculate the total number of beads used\n    result = pink_beads_used + purple_beads_used + blue_beads_used + white_beads_used\n    \n    return result\n\nprint(simple_math_problem())",
    "result": 187.5
  },
  {
    "index": 27,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    John bought 5 toys and paid $25 in total. If each toy costs the same amount, how much did he pay for each toy?\n    \"\"\"\n    total_toys = 5\n    total_cost = 25\n    cost_per_toy = total_cost / total_toys\n    result = cost_per_toy\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    John bought 5 toys and paid $25 in total. If each toy costs the same amount, how much did he pay for each toy?\n    \"\"\"\n    total_toys = 5\n    total_cost = 25\n    cost_per_toy = total_cost / total_toys\n    result = cost_per_toy\n\n    return result\n\nprint(simple_math_problem())",
    "result": 5.0
  },
  {
    "index": 28,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Student: Leo can ride his bike 8 kilometers, 4 times a week, 10 weeks each year. How many kilometers can he ride in 3 years?\n    \"\"\"\n    kilometers_per_ride = 8\n    rides_per_week = 4\n    weeks_per_year = 10\n    years = 3\n    \n    kilometers_per_week = kilometers_per_ride * rides_per_week\n    kilometers_per_year = kilometers_per_week * weeks_per_year\n    total_kilometers = kilometers_per_year * years\n    \n    result = total_kilometers\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Student: Leo can ride his bike 8 kilometers, 4 times a week, 10 weeks each year. How many kilometers can he ride in 3 years?\n    \"\"\"\n    kilometers_per_ride = 8\n    rides_per_week = 4\n    weeks_per_year = 10\n    years = 3\n    \n    kilometers_per_week = kilometers_per_ride * rides_per_week\n    kilometers_per_year = kilometers_per_week * weeks_per_year\n    total_kilometers = kilometers_per_year * years\n    \n    result = total_kilometers\n\n    return result\n\nprint(simple_math_problem())",
    "result": 960
  },
  {
    "index": 29,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A recipe calls for 2.5 cups of flour, but I only have a 1/3 cup measuring cup. How many times do I need to fill the measuring cup to get the required amount of flour?\n    \"\"\"\n    required_flour = 2.5  # cups\n    measuring_cup_capacity = 1/3  # cups\n    number_of_fillings = required_flour / measuring_cup_capacity\n    result = number_of_fillings\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A recipe calls for 2.5 cups of flour, but I only have a 1/3 cup measuring cup. How many times do I need to fill the measuring cup to get the required amount of flour?\n    \"\"\"\n    required_flour = 2.5  # cups\n    measuring_cup_capacity = 1/3  # cups\n    number_of_fillings = required_flour / measuring_cup_capacity\n    result = number_of_fillings\n\n    return result\n\nprint(simple_math_problem())",
    "result": 7.5
  },
  {
    "index": 30,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A faucet can fill a bathtub at a rate of 12 liters per minute. The bathtub has a volume of 180 liters and is empty. However, the bathtub has a leak that loses water at a rate of 3 liters per minute. How long will it take to fill the bathtub until it overflows in minutes?\n    \"\"\"\n    faucet_fill_rate = 12  # liters per minute\n    bathtub_volume = 180  # liters\n    leak_rate = 3  # liters per minute\n    net_fill_rate = faucet_fill_rate - leak_rate  # liters per minute\n    time_to_fill = bathtub_volume / net_fill_rate  # minutes\n    result = time_to_fill\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A faucet can fill a bathtub at a rate of 12 liters per minute. The bathtub has a volume of 180 liters and is empty. However, the bathtub has a leak that loses water at a rate of 3 liters per minute. How long will it take to fill the bathtub until it overflows in minutes?\n    \"\"\"\n    faucet_fill_rate = 12  # liters per minute\n    bathtub_volume = 180  # liters\n    leak_rate = 3  # liters per minute\n    net_fill_rate = faucet_fill_rate - leak_rate  # liters per minute\n    time_to_fill = bathtub_volume / net_fill_rate  # minutes\n    result = time_to_fill\n\n    return result\n\nprint(simple_math_problem())",
    "result": 20.0
  },
  {
    "index": 31,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    John is a pizza delivery driver. He charges $2 per mile plus $4 per pizza for delivery. If he delivers 3 pizzas that are 5 miles away each, how much money does he earn?\n    \"\"\"\n    miles_per_pizza = 5\n    pizzas_delivered = 3\n    charge_per_mile = 2\n    charge_per_pizza = 4\n    \n    total_miles = miles_per_pizza * pizzas_delivered\n    total_mileage_charge = total_miles * charge_per_mile\n    total_pizza_charge = pizzas_delivered * charge_per_pizza\n    \n    result = total_mileage_charge + total_pizza_charge\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    John is a pizza delivery driver. He charges $2 per mile plus $4 per pizza for delivery. If he delivers 3 pizzas that are 5 miles away each, how much money does he earn?\n    \"\"\"\n    miles_per_pizza = 5\n    pizzas_delivered = 3\n    charge_per_mile = 2\n    charge_per_pizza = 4\n    \n    total_miles = miles_per_pizza * pizzas_delivered\n    total_mileage_charge = total_miles * charge_per_mile\n    total_pizza_charge = pizzas_delivered * charge_per_pizza\n    \n    result = total_mileage_charge + total_pizza_charge\n\n    return result\n\nprint(simple_math_problem())",
    "result": 42
  },
  {
    "index": 32,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    How many 250 ml cups of juice can Sam make from 2 liters of concentrate and 4 liters of water, if he needs to mix one part concentrate with two parts water?\n    \"\"\"\n    concentrate_volume_liters = 2\n    water_volume_liters = 4\n    concentrate_to_water_ratio = 1/3  # one part concentrate to two parts water is 1:3\n    total_volume_liters = concentrate_volume_liters + water_volume_liters\n    # Check if the available concentrate and water can be mixed according to the ratio\n    if concentrate_volume_liters / (concentrate_volume_liters + water_volume_liters) == concentrate_to_water_ratio:\n        total_volume_milliliters = total_volume_liters * 1000  # convert liters to milliliters\n        cup_volume_milliliters = 250\n        result = total_volume_milliliters / cup_volume_milliliters\n    else:\n        # Calculate the maximum volume of juice that can be made with the given concentrate and water\n        max_concentrate_volume_liters = concentrate_volume_liters\n        max_water_volume_liters = max_concentrate_volume_liters * 2  # two parts water for one part concentrate\n        if max_water_volume_liters > water_volume_liters:\n            max_concentrate_volume_liters = water_volume_liters / 2  # adjust concentrate volume based on available water\n        total_volume_liters = max_concentrate_volume_liters + max_concentrate_volume_liters * 2\n        total_volume_milliliters = total_volume_liters * 1000  # convert liters to milliliters\n        cup_volume_milliliters = 250\n        result = total_volume_milliliters / cup_volume_milliliters\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    How many 250 ml cups of juice can Sam make from 2 liters of concentrate and 4 liters of water, if he needs to mix one part concentrate with two parts water?\n    \"\"\"\n    concentrate_volume_liters = 2\n    water_volume_liters = 4\n    concentrate_to_water_ratio = 1/3  # one part concentrate to two parts water is 1:3\n    total_volume_liters = concentrate_volume_liters + water_volume_liters\n    # Check if the available concentrate and water can be mixed according to the ratio\n    if concentrate_volume_liters / (concentrate_volume_liters + water_volume_liters) == concentrate_to_water_ratio:\n        total_volume_milliliters = total_volume_liters * 1000  # convert liters to milliliters\n        cup_volume_milliliters = 250\n        result = total_volume_milliliters / cup_volume_milliliters\n    else:\n        # Calculate the maximum volume of juice that can be made with the given concentrate and water\n        max_concentrate_volume_liters = concentrate_volume_liters\n        max_water_volume_liters = max_concentrate_volume_liters * 2  # two parts water for one part concentrate\n        if max_water_volume_liters > water_volume_liters:\n            max_concentrate_volume_liters = water_volume_liters / 2  # adjust concentrate volume based on available water\n        total_volume_liters = max_concentrate_volume_liters + max_concentrate_volume_liters * 2\n        total_volume_milliliters = total_volume_liters * 1000  # convert liters to milliliters\n        cup_volume_milliliters = 250\n        result = total_volume_milliliters / cup_volume_milliliters\n\n    return result\n\nprint(simple_math_problem())",
    "result": 24.0
  },
  {
    "index": 33,
    "response": "```python\ndef simple_math_problem() -> int:\n\"\"\"\nJohn has twice as many apples as Sarah. Sarah has 7 apples. How many apples do they have altogether?\n\"\"\"\nsarah_apples = 7\njohn_apples = 2 * sarah_apples\ntotal_apples = sarah_apples + john_apples\nresult = total_apples\n\nreturn result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    John has twice as many apples as Sarah. Sarah has 7 apples. How many apples do they have altogether?\n    \"\"\"\n    sarah_apples = 7\n    john_apples = 2 * sarah_apples\n    total_apples = sarah_apples + john_apples\n    result = total_apples\n\n    return result\n\n    print(simple_math_problem())",
    "result": 21
  },
  {
    "index": 34,
    "response": "```python\ndef simple_math_problem() -> float:\n\"\"\"\nA bag of oranges costs $8. If one orange costs 40 cents, how many oranges are there in the bag?\n\"\"\"\ncost_of_bag = 8  # in dollars\ncost_of_one_orange = 0.40  # in dollars\nnumber_of_oranges = cost_of_bag / cost_of_one_orange\nresult = number_of_oranges\n\nreturn result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A bag of oranges costs $8. If one orange costs 40 cents, how many oranges are there in the bag?\n    \"\"\"\n    cost_of_bag = 8  # in dollars\n    cost_of_one_orange = 0.40  # in dollars\n    number_of_oranges = cost_of_bag / cost_of_one_orange\n    result = number_of_oranges\n\n    return result\n\n    print(simple_math_problem())",
    "result": 20.0
  },
  {
    "index": 35,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    In a 5km race participation, there are a total of 200 athletes. If 1/5th of the athletes could not complete the race, how many athletes finished the race?\n    \"\"\"\n    total_athletes = 200\n    fraction_did_not_complete = 1/5\n    athletes_did_not_complete = total_athletes * fraction_did_not_complete\n    athletes_finished = total_athletes - athletes_did_not_complete\n    result = athletes_finished\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    In a 5km race participation, there are a total of 200 athletes. If 1/5th of the athletes could not complete the race, how many athletes finished the race?\n    \"\"\"\n    total_athletes = 200\n    fraction_did_not_complete = 1/5\n    athletes_did_not_complete = total_athletes * fraction_did_not_complete\n    athletes_finished = total_athletes - athletes_did_not_complete\n    result = athletes_finished\n\n    return result\n\nprint(simple_math_problem())",
    "result": 160.0
  },
  {
    "index": 36,
    "response": "```python\ndef simple_math_problem() -> None:\n    \"\"\"\n    Max wants to make a pizza. He needs to make dough for the crust, make the tomato sauce, and add toppings. If he needs 3 cups of flour to make dough, 1 cup of tomato sauce, and 1/2 cup of cheese and pepperoni for toppings, how much of each ingredient does he need to make one pizza?\n    \"\"\"\n    flour_needed = 3  # cups\n    tomato_sauce_needed = 1  # cup\n    cheese_and_pepperoni_needed = 0.5  # cups\n\n    print(f\"Flour needed: {flour_needed} cups\")\n    print(f\"Tomato sauce needed: {tomato_sauce_needed} cup\")\n    print(f\"Cheese and pepperoni needed: {cheese_and_pepperoni_needed} cups\")\n\n# Call the function\nsimple_math_problem()\n```",
    "code": "def simple_math_problem() -> None:\n    \"\"\"\n    Max wants to make a pizza. He needs to make dough for the crust, make the tomato sauce, and add toppings. If he needs 3 cups of flour to make dough, 1 cup of tomato sauce, and 1/2 cup of cheese and pepperoni for toppings, how much of each ingredient does he need to make one pizza?\n    \"\"\"\n    flour_needed = 3  # cups\n    tomato_sauce_needed = 1  # cup\n    cheese_and_pepperoni_needed = 0.5  # cups\n\n    print(f\"Flour needed: {flour_needed} cups\")\n    print(f\"Tomato sauce needed: {tomato_sauce_needed} cup\")\n    print(f\"Cheese and pepperoni needed: {cheese_and_pepperoni_needed} cups\")\n\n# Call the function\nsimple_math_problem()",
    "result": null
  },
  {
    "index": 37,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Lisa bought 20 pencils for 5 dollars. She gave away 6 pencils to her friends and sold the rest for 50 cents each. How much money did she make in total?\n    \"\"\"\n    pencilsTotal = 20\n    pencilsGivenAway = 6\n    pencilsSold = pencilsTotal - pencilsGivenAway\n    initialCost = 5\n    pricePerPencil = 0.5  # 50 cents in dollars\n    revenueFromPencils = pencilsSold * pricePerPencil\n    result = revenueFromPencils - initialCost\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Lisa bought 20 pencils for 5 dollars. She gave away 6 pencils to her friends and sold the rest for 50 cents each. How much money did she make in total?\n    \"\"\"\n    pencilsTotal = 20\n    pencilsGivenAway = 6\n    pencilsSold = pencilsTotal - pencilsGivenAway\n    initialCost = 5\n    pricePerPencil = 0.5  # 50 cents in dollars\n    revenueFromPencils = pencilsSold * pricePerPencil\n    result = revenueFromPencils - initialCost\n\n    return result\n\nprint(simple_math_problem())",
    "result": 2.0
  },
  {
    "index": 38,
    "response": "```python\ndef simple_math_problem() -> float:\n\"\"\"\nA class has 30 students. If 20% of the students are absent, how many students are present in the class?\n\"\"\"\ntotal_students = 30\nabsent_percentage = 20\nabsent_students = (absent_percentage / 100) * total_students\npresent_students = total_students - absent_students\nresult = present_students\n\nreturn result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A class has 30 students. If 20% of the students are absent, how many students are present in the class?\n    \"\"\"\n    total_students = 30\n    absent_percentage = 20\n    absent_students = (absent_percentage / 100) * total_students\n    present_students = total_students - absent_students\n    result = present_students\n\n    return result\n\n    print(simple_math_problem())",
    "result": 24.0
  },
  {
    "index": 39,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A rectangle has a length of 10 meters and a width of 5 meters. What is the perimeter of the rectangle?\n    \"\"\"\n    length_of_rectangle = 10\n    width_of_rectangle = 5\n    perimeter = 2 * (length_of_rectangle + width_of_rectangle)\n    result = perimeter\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A rectangle has a length of 10 meters and a width of 5 meters. What is the perimeter of the rectangle?\n    \"\"\"\n    length_of_rectangle = 10\n    width_of_rectangle = 5\n    perimeter = 2 * (length_of_rectangle + width_of_rectangle)\n    result = perimeter\n\n    return result\n\nprint(simple_math_problem())",
    "result": 30
  },
  {
    "index": 40,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Julia has $7000 for her business expenses. She spends $1500 on supplies and receives a payment of $2000 from a customer. Julia decides to spend $3000 on a new website. How much money does Julia have left for her business operations costs?\n    \"\"\"\n    initial_business_expenses = 7000\n    supplies_cost = 1500\n    customer_payment = 2000\n    new_website_cost = 3000\n    \n    # Calculate the money left after spending on supplies\n    money_after_supplies = initial_business_expenses - supplies_cost\n    \n    # Calculate the money after receiving the customer payment\n    money_after_customer_payment = money_after_supplies + customer_payment\n    \n    # Calculate the final money left after spending on the new website\n    result = money_after_customer_payment - new_website_cost\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Julia has $7000 for her business expenses. She spends $1500 on supplies and receives a payment of $2000 from a customer. Julia decides to spend $3000 on a new website. How much money does Julia have left for her business operations costs?\n    \"\"\"\n    initial_business_expenses = 7000\n    supplies_cost = 1500\n    customer_payment = 2000\n    new_website_cost = 3000\n    \n    # Calculate the money left after spending on supplies\n    money_after_supplies = initial_business_expenses - supplies_cost\n    \n    # Calculate the money after receiving the customer payment\n    money_after_customer_payment = money_after_supplies + customer_payment\n    \n    # Calculate the final money left after spending on the new website\n    result = money_after_customer_payment - new_website_cost\n\n    return result\n\nprint(simple_math_problem())",
    "result": 4500
  },
  {
    "index": 41,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Matthew has been assigned to move 7500 cans to the grocery store. The store will pay him a $500 fee, plus $0.50 for every can delivered safely. Matthew will have to pay the store $4 for every can that is lost or damaged. If he loses 20 cans and 40 cans are damaged, how much should Matthew be paid?\n    \"\"\"\n    total_cans = 7500\n    lost_cans = 20\n    damaged_cans = 40\n    total_unsafe_cans = lost_cans + damaged_cans\n    safe_cans = total_cans - total_unsafe_cans\n    fee = 500\n    payment_per_safe_can = 0.50\n    penalty_per_unsafe_can = 4\n    payment_for_safe_cans = safe_cans * payment_per_safe_can\n    penalty_for_unsafe_cans = total_unsafe_cans * penalty_per_unsafe_can\n    result = fee + payment_for_safe_cans - penalty_for_unsafe_cans\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Matthew has been assigned to move 7500 cans to the grocery store. The store will pay him a $500 fee, plus $0.50 for every can delivered safely. Matthew will have to pay the store $4 for every can that is lost or damaged. If he loses 20 cans and 40 cans are damaged, how much should Matthew be paid?\n    \"\"\"\n    total_cans = 7500\n    lost_cans = 20\n    damaged_cans = 40\n    total_unsafe_cans = lost_cans + damaged_cans\n    safe_cans = total_cans - total_unsafe_cans\n    fee = 500\n    payment_per_safe_can = 0.50\n    penalty_per_unsafe_can = 4\n    payment_for_safe_cans = safe_cans * payment_per_safe_can\n    penalty_for_unsafe_cans = total_unsafe_cans * penalty_per_unsafe_can\n    result = fee + payment_for_safe_cans - penalty_for_unsafe_cans\n\n    return result\n\nprint(simple_math_problem())",
    "result": 3980.0
  },
  {
    "index": 42,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    If Megan reads 5 pages in 10 minutes, how many pages can she read in 30 minutes?\n    \"\"\"\n    pages_read_in_10_minutes = 5\n    minutes_to_read = 30\n    minutes_base = 10\n    pages_read_per_minute = pages_read_in_10_minutes / minutes_base\n    result = pages_read_per_minute * minutes_to_read\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    If Megan reads 5 pages in 10 minutes, how many pages can she read in 30 minutes?\n    \"\"\"\n    pages_read_in_10_minutes = 5\n    minutes_to_read = 30\n    minutes_base = 10\n    pages_read_per_minute = pages_read_in_10_minutes / minutes_base\n    result = pages_read_per_minute * minutes_to_read\n\n    return result\n\nprint(simple_math_problem())",
    "result": 15.0
  },
  {
    "index": 43,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    On Monday morning, there were 20,000 runners in the New York City Marathon. Over the course of the race, at a constant rate of 1,200 runners/hour, a total of 8,400 runners dropped out. If the final number of runners who completed the marathon was 26,600, at what rate did new runners join the race?\n    \"\"\"\n    initial_runners = 20000\n    dropped_out_runners = 8400\n    final_runners = 26600\n    hours_run = dropped_out_runners / 1200\n    new_runners = final_runners - (initial_runners - dropped_out_runners)\n    result = new_runners / hours_run\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    On Monday morning, there were 20,000 runners in the New York City Marathon. Over the course of the race, at a constant rate of 1,200 runners/hour, a total of 8,400 runners dropped out. If the final number of runners who completed the marathon was 26,600, at what rate did new runners join the race?\n    \"\"\"\n    initial_runners = 20000\n    dropped_out_runners = 8400\n    final_runners = 26600\n    hours_run = dropped_out_runners / 1200\n    new_runners = final_runners - (initial_runners - dropped_out_runners)\n    result = new_runners / hours_run\n\n    return result\n\nprint(simple_math_problem())",
    "result": 2142.8571428571427
  },
  {
    "index": 44,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A hot air balloon flew across the country from west to east, starting from Pacific time and ending in Atlantic time. It flew for 6 hours in Pacific time, 5 hours in Mountain time, 4 hours in Central time, and 3 hours in Eastern time. Along the way, it stopped for 1 hour in each time zone to refuel and take pictures. How many hours did the hot air balloon fly in total, including the stops?\n    \"\"\"\n    hours_flown_in_pacific_time = 6\n    hours_flown_in_mountain_time = 5\n    hours_flown_in_central_time = 4\n    hours_flown_in_eastern_time = 3\n    stop_hours_in_each_time_zone = 1\n    number_of_time_zones = 4\n    \n    total_hours_flown = hours_flown_in_pacific_time + hours_flown_in_mountain_time + hours_flown_in_central_time + hours_flown_in_eastern_time\n    total_stop_hours = stop_hours_in_each_time_zone * number_of_time_zones\n    result = total_hours_flown + total_stop_hours\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A hot air balloon flew across the country from west to east, starting from Pacific time and ending in Atlantic time. It flew for 6 hours in Pacific time, 5 hours in Mountain time, 4 hours in Central time, and 3 hours in Eastern time. Along the way, it stopped for 1 hour in each time zone to refuel and take pictures. How many hours did the hot air balloon fly in total, including the stops?\n    \"\"\"\n    hours_flown_in_pacific_time = 6\n    hours_flown_in_mountain_time = 5\n    hours_flown_in_central_time = 4\n    hours_flown_in_eastern_time = 3\n    stop_hours_in_each_time_zone = 1\n    number_of_time_zones = 4\n    \n    total_hours_flown = hours_flown_in_pacific_time + hours_flown_in_mountain_time + hours_flown_in_central_time + hours_flown_in_eastern_time\n    total_stop_hours = stop_hours_in_each_time_zone * number_of_time_zones\n    result = total_hours_flown + total_stop_hours\n\n    return result\n\nprint(simple_math_problem())",
    "result": 22
  },
  {
    "index": 45,
    "response": "```python\ndef simple_math_problem() -> float:\n\"\"\"\nEmily and Daniel are playing a game. Daniel's score is 3 times Emily's score. If their total score is 80, what is Daniel's score?\n\"\"\"\nemily_score = 1  # Let's assume Emily's score as 'x'\ndaniel_score = 3 * emily_score  # Daniel's score is 3 times Emily's score\ntotal_score = emily_score + daniel_score  # Total score is the sum of Emily's and Daniel's scores\nemily_score = 80 / 4  # Since total score is 80, we can calculate Emily's score as 80 / (1 + 3)\ndaniel_score = 3 * emily_score  # Now we can calculate Daniel's score\nresult = daniel_score\n\nreturn result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Emily and Daniel are playing a game. Daniel's score is 3 times Emily's score. If their total score is 80, what is Daniel's score?\n    \"\"\"\n    emily_score = 1  # Let's assume Emily's score as 'x'\n    daniel_score = 3 * emily_score  # Daniel's score is 3 times Emily's score\n    total_score = emily_score + daniel_score  # Total score is the sum of Emily's and Daniel's scores\n    emily_score = 80 / 4  # Since total score is 80, we can calculate Emily's score as 80 / (1 + 3)\n    daniel_score = 3 * emily_score  # Now we can calculate Daniel's score\n    result = daniel_score\n\n    return result\n\n    print(simple_math_problem())",
    "result": 60.0
  },
  {
    "index": 46,
    "response": "```python\ndef simple_math_problem() -> int:\n\"\"\"\nEmma has 9 stickers and 3 cards in her collection. Each sticker has 4 stars on it. Each card has 2 stars on it. How many stars are in Emma's collection?\n\"\"\"\ntotal_stickers = 9\ntotal_cards = 3\nstars_per_sticker = 4\nstars_per_card = 2\n\ntotal_stars_from_stickers = total_stickers * stars_per_sticker\ntotal_stars_from_cards = total_cards * stars_per_card\nresult = total_stars_from_stickers + total_stars_from_cards\n\nreturn result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    Emma has 9 stickers and 3 cards in her collection. Each sticker has 4 stars on it. Each card has 2 stars on it. How many stars are in Emma's collection?\n    \"\"\"\n    total_stickers = 9\n    total_cards = 3\n    stars_per_sticker = 4\n    stars_per_card = 2\n\n    total_stars_from_stickers = total_stickers * stars_per_sticker\n    total_stars_from_cards = total_cards * stars_per_card\n    result = total_stars_from_stickers + total_stars_from_cards\n\n    return result\n\n    print(simple_math_problem())",
    "result": 42
  },
  {
    "index": 47,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A factory produced 6000 units of a product. One-tenth of them were faulty and were discarded. Two-fifths of the remaining units were exported, and the rest were sold locally. If 1800 units were sold locally, how many were exported?\n    \"\"\"\n    total_units_produced = 6000\n    faulty_units_discarded = total_units_produced / 10\n    remaining_units = total_units_produced - faulty_units_discarded\n    units_exported = (2/5) * remaining_units\n    units_sold_locally = remaining_units - units_exported\n    \n    # Given that 1800 units were sold locally, we can calculate the units exported as follows:\n    # units_sold_locally = 1800\n    # units_exported = remaining_units - units_sold_locally\n    \n    # However, since we already know the number of units sold locally, we can directly use it to calculate the units exported\n    # units_exported = (2/5) * (total_units_produced - faulty_units_discarded)\n    \n    # But to maintain the original problem's intent, let's use the given information to calculate the units exported\n    # We know that units_sold_locally = 1800 and units_sold_locally = remaining_units - units_exported\n    # So, units_exported = remaining_units - units_sold_locally\n    \n    # Since we know the total units produced, faulty units discarded, and units sold locally, \n    # we can calculate the units exported using the given information\n    result = (total_units_produced - faulty_units_discarded) - 1800\n    \n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A factory produced 6000 units of a product. One-tenth of them were faulty and were discarded. Two-fifths of the remaining units were exported, and the rest were sold locally. If 1800 units were sold locally, how many were exported?\n    \"\"\"\n    total_units_produced = 6000\n    faulty_units_discarded = total_units_produced / 10\n    remaining_units = total_units_produced - faulty_units_discarded\n    units_exported = (2/5) * remaining_units\n    units_sold_locally = remaining_units - units_exported\n    \n    # Given that 1800 units were sold locally, we can calculate the units exported as follows:\n    # units_sold_locally = 1800\n    # units_exported = remaining_units - units_sold_locally\n    \n    # However, since we already know the number of units sold locally, we can directly use it to calculate the units exported\n    # units_exported = (2/5) * (total_units_produced - faulty_units_discarded)\n    \n    # But to maintain the original problem's intent, let's use the given information to calculate the units exported\n    # We know that units_sold_locally = 1800 and units_sold_locally = remaining_units - units_exported\n    # So, units_exported = remaining_units - units_sold_locally\n    \n    # Since we know the total units produced, faulty units discarded, and units sold locally, \n    # we can calculate the units exported using the given information\n    result = (total_units_produced - faulty_units_discarded) - 1800\n    \n    return result\n\nprint(simple_math_problem())",
    "result": 3600.0
  },
  {
    "index": 48,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Mrs. Khan baked 60 cookies for a bake sale, but she forgot to label them. She knows that 40% of them are chocolate chip, 30% are oatmeal raisin, and the rest are peanut butter. She also knows that she used 2 cups of sugar for each type of cookie. How much sugar did she use in total for the cookies?\n    \"\"\"\n    total_cookies = 60\n    percentage_chocolate_chip = 0.4\n    percentage_oatmeal_raisin = 0.3\n    percentage_peanut_butter = 1 - (percentage_chocolate_chip + percentage_oatmeal_raisin)\n    sugar_per_type = 2\n\n    chocolate_chip_cookies = total_cookies * percentage_chocolate_chip\n    oatmeal_raisin_cookies = total_cookies * percentage_oatmeal_raisin\n    peanut_butter_cookies = total_cookies * percentage_peanut_butter\n\n    sugar_used_for_chocolate_chip = sugar_per_type\n    sugar_used_for_oatmeal_raisin = sugar_per_type\n    sugar_used_for_peanut_butter = sugar_per_type\n\n    total_sugar_used = sugar_used_for_chocolate_chip + sugar_used_for_oatmeal_raisin + sugar_used_for_peanut_butter\n    result = total_sugar_used\n\n    return result\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Mrs. Khan baked 60 cookies for a bake sale, but she forgot to label them. She knows that 40% of them are chocolate chip, 30% are oatmeal raisin, and the rest are peanut butter. She also knows that she used 2 cups of sugar for each type of cookie. How much sugar did she use in total for the cookies?\n    \"\"\"\n    total_cookies = 60\n    percentage_chocolate_chip = 0.4\n    percentage_oatmeal_raisin = 0.3\n    percentage_peanut_butter = 1 - (percentage_chocolate_chip + percentage_oatmeal_raisin)\n    sugar_per_type = 2\n\n    chocolate_chip_cookies = total_cookies * percentage_chocolate_chip\n    oatmeal_raisin_cookies = total_cookies * percentage_oatmeal_raisin\n    peanut_butter_cookies = total_cookies * percentage_peanut_butter\n\n    sugar_used_for_chocolate_chip = sugar_per_type\n    sugar_used_for_oatmeal_raisin = sugar_per_type\n    sugar_used_for_peanut_butter = sugar_per_type\n\n    total_sugar_used = sugar_used_for_chocolate_chip + sugar_used_for_oatmeal_raisin + sugar_used_for_peanut_butter\n    result = total_sugar_used\n\n    return result",
    "result": 6
  },
  {
    "index": 49,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    When a shipment of 300 televisions arrived, 20% of them were defective. If the rest of them were sold at $600, and the defective ones could only be sold at $200, calculate the total amount of money received from selling all the televisions.\n    \"\"\"\n    totalTelevisions = 300\n    defectivePercentage = 0.20\n    nonDefectivePrice = 600\n    defectivePrice = 200\n    \n    defectiveTelevisions = totalTelevisions * defectivePercentage\n    nonDefectiveTelevisions = totalTelevisions - defectiveTelevisions\n    \n    nonDefectiveRevenue = nonDefectiveTelevisions * nonDefectivePrice\n    defectiveRevenue = defectiveTelevisions * defectivePrice\n    \n    result = nonDefectiveRevenue + defectiveRevenue\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    When a shipment of 300 televisions arrived, 20% of them were defective. If the rest of them were sold at $600, and the defective ones could only be sold at $200, calculate the total amount of money received from selling all the televisions.\n    \"\"\"\n    totalTelevisions = 300\n    defectivePercentage = 0.20\n    nonDefectivePrice = 600\n    defectivePrice = 200\n    \n    defectiveTelevisions = totalTelevisions * defectivePercentage\n    nonDefectiveTelevisions = totalTelevisions - defectiveTelevisions\n    \n    nonDefectiveRevenue = nonDefectiveTelevisions * nonDefectivePrice\n    defectiveRevenue = defectiveTelevisions * defectivePrice\n    \n    result = nonDefectiveRevenue + defectiveRevenue\n\n    return result\n\nprint(simple_math_problem())",
    "result": 156000.0
  },
  {
    "index": 50,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Tom gets paid $17 an hour for the first 16hours he works each week, and $26 each hour of overtime after that. If Tom worked 64 hours one week, how much money did he make?\n    \"\"\"\n    regular_hours = 16\n    overtime_hours = 64 - regular_hours\n    regular_hourly_rate = 17\n    overtime_hourly_rate = 26\n    regular_pay = regular_hours * regular_hourly_rate\n    overtime_pay = overtime_hours * overtime_hourly_rate\n    result = regular_pay + overtime_pay\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Tom gets paid $17 an hour for the first 16hours he works each week, and $26 each hour of overtime after that. If Tom worked 64 hours one week, how much money did he make?\n    \"\"\"\n    regular_hours = 16\n    overtime_hours = 64 - regular_hours\n    regular_hourly_rate = 17\n    overtime_hourly_rate = 26\n    regular_pay = regular_hours * regular_hourly_rate\n    overtime_pay = overtime_hours * overtime_hourly_rate\n    result = regular_pay + overtime_pay\n\n    return result\n\nprint(simple_math_problem())",
    "result": 1520
  },
  {
    "index": 51,
    "response": "```python\ndef simple_math_problem() -> float:\n\"\"\"\nA colony of bacteria doubles its population every 12 hours. If the population starts with 5 bacteria, how many bacteria will there be after 3 days?\n\"\"\"\ninitial_bacteria = 5\ndoubling_period_hours = 12\ntotal_hours = 3 * 24  # 3 days in hours\ndoublings = total_hours / doubling_period_hours\nresult = initial_bacteria * (2 ** doublings)\n\nreturn result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A colony of bacteria doubles its population every 12 hours. If the population starts with 5 bacteria, how many bacteria will there be after 3 days?\n    \"\"\"\n    initial_bacteria = 5\n    doubling_period_hours = 12\n    total_hours = 3 * 24  # 3 days in hours\n    doublings = total_hours / doubling_period_hours\n    result = initial_bacteria * (2 ** doublings)\n\n    return result\n\n    print(simple_math_problem())",
    "result": 320.0
  },
  {
    "index": 52,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A group of 6 friends shared 3 pizzas, each pizza had 8 slices. If each person ate the same number of slices, how many slices did each person eat?\n    \"\"\"\n    total_pizzas = 3\n    slices_per_pizza = 8\n    total_slices = total_pizzas * slices_per_pizza\n    total_friends = 6\n    slices_per_friend = total_slices / total_friends\n    result = slices_per_friend\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A group of 6 friends shared 3 pizzas, each pizza had 8 slices. If each person ate the same number of slices, how many slices did each person eat?\n    \"\"\"\n    total_pizzas = 3\n    slices_per_pizza = 8\n    total_slices = total_pizzas * slices_per_pizza\n    total_friends = 6\n    slices_per_friend = total_slices / total_friends\n    result = slices_per_friend\n\n    return result\n\nprint(simple_math_problem())",
    "result": 4.0
  },
  {
    "index": 53,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A carpenter needs to cut 20 pieces of wood, each 6 meters long, from a 130-meter long piece of wood. How much of the wood will be left after he has finished cutting?\n    \"\"\"\n    total_length_of_wood = 130  # meters\n    number_of_pieces_to_cut = 20\n    length_of_each_piece = 6  # meters\n    total_length_cut = number_of_pieces_to_cut * length_of_each_piece\n    result = total_length_of_wood - total_length_cut\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A carpenter needs to cut 20 pieces of wood, each 6 meters long, from a 130-meter long piece of wood. How much of the wood will be left after he has finished cutting?\n    \"\"\"\n    total_length_of_wood = 130  # meters\n    number_of_pieces_to_cut = 20\n    length_of_each_piece = 6  # meters\n    total_length_cut = number_of_pieces_to_cut * length_of_each_piece\n    result = total_length_of_wood - total_length_cut\n\n    return result\n\nprint(simple_math_problem())",
    "result": 10
  },
  {
    "index": 54,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Student: Bill has 15 coins worth 10 rupees each, how much money does he have in total?\n    \"\"\"\n    number_of_coins = 15\n    value_per_coin = 10\n    total_value = number_of_coins * value_per_coin\n    result = total_value\n\n    return result\n\n# Example usage:\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Student: Bill has 15 coins worth 10 rupees each, how much money does he have in total?\n    \"\"\"\n    number_of_coins = 15\n    value_per_coin = 10\n    total_value = number_of_coins * value_per_coin\n    result = total_value\n\n    return result\n\n# Example usage:\nprint(simple_math_problem())",
    "result": 150
  },
  {
    "index": 55,
    "response": "```python\ndef simple_math_problem() -> float:\n\"\"\"\nA pizza has 8 slices. If 3 people want to eat the pizza and want to have equal number of slices, how many slices will each person get?\n\"\"\"\ntotal_slices = 8\nnumber_of_people = 3\nslices_per_person = total_slices / number_of_people\nresult = slices_per_person\n\nreturn result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A pizza has 8 slices. If 3 people want to eat the pizza and want to have equal number of slices, how many slices will each person get?\n    \"\"\"\n    total_slices = 8\n    number_of_people = 3\n    slices_per_person = total_slices / number_of_people\n    result = slices_per_person\n\n    return result\n\n    print(simple_math_problem())",
    "result": 2.6666666666666665
  },
  {
    "index": 56,
    "response": "```python\ndef simple_math_problem() -> tuple:\n    \"\"\"\n    A recipe for a cake calls for 2 cups of flour and 1 cup of sugar. If you want to make 4 cakes, how many cups of flour and sugar will you need?\n    \"\"\"\n    flour_per_cake = 2\n    sugar_per_cake = 1\n    number_of_cakes = 4\n    \n    total_flour_needed = flour_per_cake * number_of_cakes\n    total_sugar_needed = sugar_per_cake * number_of_cakes\n    \n    result = (total_flour_needed, total_sugar_needed)\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> tuple:\n    \"\"\"\n    A recipe for a cake calls for 2 cups of flour and 1 cup of sugar. If you want to make 4 cakes, how many cups of flour and sugar will you need?\n    \"\"\"\n    flour_per_cake = 2\n    sugar_per_cake = 1\n    number_of_cakes = 4\n    \n    total_flour_needed = flour_per_cake * number_of_cakes\n    total_sugar_needed = sugar_per_cake * number_of_cakes\n    \n    result = (total_flour_needed, total_sugar_needed)\n\n    return result\n\nprint(simple_math_problem())",
    "result": [
      8,
      4
    ]
  },
  {
    "index": 57,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A car travels at a constant speed of 60 miles per hour. It takes 3 hours to go from point A to point B. On the way back, it stops for 30 minutes at point C. How long does the round trip take in total?\n    \"\"\"\n    speed_mph = 60  # speed in miles per hour\n    time_to_point_b = 3  # time to go from point A to point B in hours\n    distance_to_point_b = speed_mph * time_to_point_b  # distance from point A to point B in miles\n    time_to_point_a = distance_to_point_b / speed_mph  # time to go from point B to point A in hours\n    stop_time_minutes = 30  # stop time at point C in minutes\n    stop_time_hours = stop_time_minutes / 60  # stop time at point C in hours\n    total_time = time_to_point_b + time_to_point_a + stop_time_hours  # total round trip time in hours\n    result = total_time\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A car travels at a constant speed of 60 miles per hour. It takes 3 hours to go from point A to point B. On the way back, it stops for 30 minutes at point C. How long does the round trip take in total?\n    \"\"\"\n    speed_mph = 60  # speed in miles per hour\n    time_to_point_b = 3  # time to go from point A to point B in hours\n    distance_to_point_b = speed_mph * time_to_point_b  # distance from point A to point B in miles\n    time_to_point_a = distance_to_point_b / speed_mph  # time to go from point B to point A in hours\n    stop_time_minutes = 30  # stop time at point C in minutes\n    stop_time_hours = stop_time_minutes / 60  # stop time at point C in hours\n    total_time = time_to_point_b + time_to_point_a + stop_time_hours  # total round trip time in hours\n    result = total_time\n\n    return result\n\nprint(simple_math_problem())",
    "result": 6.5
  },
  {
    "index": 58,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A toy store is having a 15% off sale. If you have a coupon for an extra 20% discount on the discounted price, what is the final discount percentage rate?\n    \"\"\"\n    initial_discount_percentage = 0.15  # 15% off sale\n    initial_discount = 1 - initial_discount_percentage  # calculate the percentage of the price after the initial discount\n    extra_discount_percentage = 0.20  # extra 20% discount on the discounted price\n    extra_discount = 1 - extra_discount_percentage  # calculate the percentage of the price after the extra discount\n    final_price_percentage = initial_discount * extra_discount  # calculate the final price as a percentage of the original price\n    final_discount_percentage = 1 - final_price_percentage  # calculate the final discount percentage\n    result = final_discount_percentage * 100  # convert the final discount percentage to a percentage\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A toy store is having a 15% off sale. If you have a coupon for an extra 20% discount on the discounted price, what is the final discount percentage rate?\n    \"\"\"\n    initial_discount_percentage = 0.15  # 15% off sale\n    initial_discount = 1 - initial_discount_percentage  # calculate the percentage of the price after the initial discount\n    extra_discount_percentage = 0.20  # extra 20% discount on the discounted price\n    extra_discount = 1 - extra_discount_percentage  # calculate the percentage of the price after the extra discount\n    final_price_percentage = initial_discount * extra_discount  # calculate the final price as a percentage of the original price\n    final_discount_percentage = 1 - final_price_percentage  # calculate the final discount percentage\n    result = final_discount_percentage * 100  # convert the final discount percentage to a percentage\n\n    return result\n\nprint(simple_math_problem())",
    "result": 31.999999999999996
  },
  {
    "index": 59,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A factory produces toys, books, and games. In January, they produced 300 toys, 200 books, and 100 games. In February, they produced 20% more toys, 10% less books, and 50% more games than in January. In March, they produced 10% more toys, 20% more books, and 30% less games than in February. In April, they produced the same number of toys and books as in March, and 40% more games than in March. If each toy costs $5, each book costs $10, and each game costs $15, what is the difference between the total cost of production in January and April?\n    \"\"\"\n    # January production\n    january_toys = 300\n    january_books = 200\n    january_games = 100\n    \n    # February production\n    february_toys = january_toys * 1.2\n    february_books = january_books * 0.9\n    february_games = january_games * 1.5\n    \n    # March production\n    march_toys = february_toys * 1.1\n    march_books = february_books * 1.2\n    march_games = february_games * 0.7\n    \n    # April production\n    april_toys = march_toys\n    april_books = march_books\n    april_games = march_games * 1.4\n    \n    # Cost of production in January\n    january_cost = january_toys * 5 + january_books * 10 + january_games * 15\n    \n    # Cost of production in April\n    april_cost = april_toys * 5 + april_books * 10 + april_games * 15\n    \n    # Difference between the total cost of production in January and April\n    result = abs(january_cost - april_cost)\n    \n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A factory produces toys, books, and games. In January, they produced 300 toys, 200 books, and 100 games. In February, they produced 20% more toys, 10% less books, and 50% more games than in January. In March, they produced 10% more toys, 20% more books, and 30% less games than in February. In April, they produced the same number of toys and books as in March, and 40% more games than in March. If each toy costs $5, each book costs $10, and each game costs $15, what is the difference between the total cost of production in January and April?\n    \"\"\"\n    # January production\n    january_toys = 300\n    january_books = 200\n    january_games = 100\n    \n    # February production\n    february_toys = january_toys * 1.2\n    february_books = january_books * 0.9\n    february_games = january_games * 1.5\n    \n    # March production\n    march_toys = february_toys * 1.1\n    march_books = february_books * 1.2\n    march_games = february_games * 0.7\n    \n    # April production\n    april_toys = march_toys\n    april_books = march_books\n    april_games = march_games * 1.4\n    \n    # Cost of production in January\n    january_cost = january_toys * 5 + january_books * 10 + january_games * 15\n    \n    # Cost of production in April\n    april_cost = april_toys * 5 + april_books * 10 + april_games * 15\n    \n    # Difference between the total cost of production in January and April\n    result = abs(january_cost - april_cost)\n    \n    return result\n\nprint(simple_math_problem())",
    "result": 1345.0
  },
  {
    "index": 60,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    During a charity event, a group of 6 volunteers collected a total of 540 donations. If Jane collected 56 more donations than Sarah, and Sarah collected 28 less than David, how many donations did David collect?\n    \"\"\"\n    total_donations = 540\n    total_volunteers = 6\n    \n    # Let's denote the number of donations David collected as D\n    # Then Sarah collected D - 28 donations\n    # And Jane collected (D - 28) + 56 = D + 28 donations\n    \n    # Since there are 6 volunteers, let's denote the number of donations the other 3 volunteers collected as x, y, and z\n    # We know that x + y + z + D + (D - 28) + (D + 28) = total_donations\n    # Simplifying the equation, we get x + y + z + 3D = total_donations\n    \n    # However, we cannot find the exact values of x, y, and z. \n    # But we can find the value of D by assuming that the other 3 volunteers collected the same number of donations as the average of Jane, Sarah, and David.\n    # This assumption is not explicitly stated in the problem, but it's a common approach to solve this type of problem.\n    \n    # Let's denote the average number of donations collected by Jane, Sarah, and David as A\n    # A = (D + (D - 28) + (D + 28)) / 3 = D\n    # Since there are 6 volunteers, the total number of donations is 6A = total_donations\n    # But this equation is not correct, because it assumes that all 6 volunteers collected the same number of donations as the average of Jane, Sarah, and David.\n    # However, we can use the fact that the total number of donations is 540, and the number of donations collected by Jane, Sarah, and David is D + (D - 28) + (D + 28) = 3D\n    # Let's assume that the other 3 volunteers collected the same total number of donations as Jane, Sarah, and David, which is 3D\n    # Then the total number of donations is 3D + 3D = 6D = total_donations\n    \n    # Now we can solve for D\n    D = total_donations / 3\n    \n    result = D\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    During a charity event, a group of 6 volunteers collected a total of 540 donations. If Jane collected 56 more donations than Sarah, and Sarah collected 28 less than David, how many donations did David collect?\n    \"\"\"\n    total_donations = 540\n    total_volunteers = 6\n    \n    # Let's denote the number of donations David collected as D\n    # Then Sarah collected D - 28 donations\n    # And Jane collected (D - 28) + 56 = D + 28 donations\n    \n    # Since there are 6 volunteers, let's denote the number of donations the other 3 volunteers collected as x, y, and z\n    # We know that x + y + z + D + (D - 28) + (D + 28) = total_donations\n    # Simplifying the equation, we get x + y + z + 3D = total_donations\n    \n    # However, we cannot find the exact values of x, y, and z. \n    # But we can find the value of D by assuming that the other 3 volunteers collected the same number of donations as the average of Jane, Sarah, and David.\n    # This assumption is not explicitly stated in the problem, but it's a common approach to solve this type of problem.\n    \n    # Let's denote the average number of donations collected by Jane, Sarah, and David as A\n    # A = (D + (D - 28) + (D + 28)) / 3 = D\n    # Since there are 6 volunteers, the total number of donations is 6A = total_donations\n    # But this equation is not correct, because it assumes that all 6 volunteers collected the same number of donations as the average of Jane, Sarah, and David.\n    # However, we can use the fact that the total number of donations is 540, and the number of donations collected by Jane, Sarah, and David is D + (D - 28) + (D + 28) = 3D\n    # Let's assume that the other 3 volunteers collected the same total number of donations as Jane, Sarah, and David, which is 3D\n    # Then the total number of donations is 3D + 3D = 6D = total_donations\n    \n    # Now we can solve for D\n    D = total_donations / 3\n    \n    result = D\n\n    return result\n\nprint(simple_math_problem())",
    "result": 180.0
  },
  {
    "index": 61,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    Alan found 56 stones while walking in the park and 49 stones while walking in his garden. How many stones did he find in total?\n    \"\"\"\n    stones_found_in_park = 56\n    stones_found_in_garden = 49\n    total_stones_found = stones_found_in_park + stones_found_in_garden\n    result = total_stones_found\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    Alan found 56 stones while walking in the park and 49 stones while walking in his garden. How many stones did he find in total?\n    \"\"\"\n    stones_found_in_park = 56\n    stones_found_in_garden = 49\n    total_stones_found = stones_found_in_park + stones_found_in_garden\n    result = total_stones_found\n\n    return result\n\nprint(simple_math_problem())",
    "result": 105
  },
  {
    "index": 62,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A box of chocolates normally costs $15, but wholesellers get a 20% discount. If a store marks up the price by 30%, what is the final price of the chocolates?\n    \"\"\"\n    original_price = 15.0\n    wholesale_discount_percentage = 0.20\n    wholesale_discount = original_price * wholesale_discount_percentage\n    wholesale_price = original_price - wholesale_discount\n    markup_percentage = 0.30\n    markup_amount = wholesale_price * markup_percentage\n    result = wholesale_price + markup_amount\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A box of chocolates normally costs $15, but wholesellers get a 20% discount. If a store marks up the price by 30%, what is the final price of the chocolates?\n    \"\"\"\n    original_price = 15.0\n    wholesale_discount_percentage = 0.20\n    wholesale_discount = original_price * wholesale_discount_percentage\n    wholesale_price = original_price - wholesale_discount\n    markup_percentage = 0.30\n    markup_amount = wholesale_price * markup_percentage\n    result = wholesale_price + markup_amount\n\n    return result\n\nprint(simple_math_problem())",
    "result": 15.6
  },
  {
    "index": 63,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Maria is organizing a charity event and wants to make sandwiches for everyone. She has 15 people attending and each person will get 2 sandwiches. It takes 3 slices of bread, 1 slice of cheese, and 2 slices of ham to make 1 sandwich. A loaf of bread has 24 slices, a pack of cheese has 12 slices, and a pack of ham has 20 slices. If Maria buys 2 loaves of bread, 3 packs of cheese, and 4 packs of ham, how much will she spend on ingredients?\n    \"\"\"\n    peopleAttending = 15\n    sandwichesPerPerson = 2\n    slicesOfBreadPerSandwich = 3\n    slicesOfCheesePerSandwich = 1\n    slicesOfHamPerSandwich = 2\n    slicesOfBreadPerLoaf = 24\n    slicesOfCheesePerPack = 12\n    slicesOfHamPerPack = 20\n    loavesOfBread = 2\n    packsOfCheese = 3\n    packsOfHam = 4\n    \n    totalSandwiches = peopleAttending * sandwichesPerPerson\n    totalSlicesOfBread = totalSandwiches * slicesOfBreadPerSandwich\n    totalSlicesOfCheese = totalSandwiches * slicesOfCheesePerSandwich\n    totalSlicesOfHam = totalSandwiches * slicesOfHamPerSandwich\n    \n    loavesOfBreadNeeded = -(-totalSlicesOfBread // slicesOfBreadPerLoaf) # Ceiling division\n    packsOfCheeseNeeded = -(-totalSlicesOfCheese // slicesOfCheesePerPack) # Ceiling division\n    packsOfHamNeeded = -(-totalSlicesOfHam // slicesOfHamPerPack) # Ceiling division\n    \n    # Since Maria buys 2 loaves of bread, 3 packs of cheese, and 4 packs of ham, \n    # we need to calculate the cost based on the actual number of packs she buys, \n    # not the number of packs needed.\n    loavesOfBreadBought = loavesOfBread\n    packsOfCheeseBought = packsOfCheese\n    packsOfHamBought = packsOfHam\n    \n    # Assuming the cost of 1 loaf of bread is $2, 1 pack of cheese is $3, and 1 pack of ham is $4\n    costOfBread = loavesOfBreadBought * 2\n    costOfCheese = packsOfCheeseBought * 3\n    costOfHam = packsOfHamBought * 4\n    \n    result = costOfBread + costOfCheese + costOfHam\n    \n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Maria is organizing a charity event and wants to make sandwiches for everyone. She has 15 people attending and each person will get 2 sandwiches. It takes 3 slices of bread, 1 slice of cheese, and 2 slices of ham to make 1 sandwich. A loaf of bread has 24 slices, a pack of cheese has 12 slices, and a pack of ham has 20 slices. If Maria buys 2 loaves of bread, 3 packs of cheese, and 4 packs of ham, how much will she spend on ingredients?\n    \"\"\"\n    peopleAttending = 15\n    sandwichesPerPerson = 2\n    slicesOfBreadPerSandwich = 3\n    slicesOfCheesePerSandwich = 1\n    slicesOfHamPerSandwich = 2\n    slicesOfBreadPerLoaf = 24\n    slicesOfCheesePerPack = 12\n    slicesOfHamPerPack = 20\n    loavesOfBread = 2\n    packsOfCheese = 3\n    packsOfHam = 4\n    \n    totalSandwiches = peopleAttending * sandwichesPerPerson\n    totalSlicesOfBread = totalSandwiches * slicesOfBreadPerSandwich\n    totalSlicesOfCheese = totalSandwiches * slicesOfCheesePerSandwich\n    totalSlicesOfHam = totalSandwiches * slicesOfHamPerSandwich\n    \n    loavesOfBreadNeeded = -(-totalSlicesOfBread // slicesOfBreadPerLoaf) # Ceiling division\n    packsOfCheeseNeeded = -(-totalSlicesOfCheese // slicesOfCheesePerPack) # Ceiling division\n    packsOfHamNeeded = -(-totalSlicesOfHam // slicesOfHamPerPack) # Ceiling division\n    \n    # Since Maria buys 2 loaves of bread, 3 packs of cheese, and 4 packs of ham, \n    # we need to calculate the cost based on the actual number of packs she buys, \n    # not the number of packs needed.\n    loavesOfBreadBought = loavesOfBread\n    packsOfCheeseBought = packsOfCheese\n    packsOfHamBought = packsOfHam\n    \n    # Assuming the cost of 1 loaf of bread is $2, 1 pack of cheese is $3, and 1 pack of ham is $4\n    costOfBread = loavesOfBreadBought * 2\n    costOfCheese = packsOfCheeseBought * 3\n    costOfHam = packsOfHamBought * 4\n    \n    result = costOfBread + costOfCheese + costOfHam\n    \n    return result\n\nprint(simple_math_problem())",
    "result": 29
  },
  {
    "index": 64,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Result: 18.00 A student wants to buy 3 notebooks and 2 pens. A notebook costs $2.25 and a pen costs $1.50. What is the total cost?\n    \"\"\"\n    notebooks_wanted = 3\n    pens_wanted = 2\n    cost_per_notebook = 2.25\n    cost_per_pen = 1.50\n    \n    total_cost_of_notebooks = notebooks_wanted * cost_per_notebook\n    total_cost_of_pens = pens_wanted * cost_per_pen\n    \n    result = total_cost_of_notebooks + total_cost_of_pens\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Result: 18.00 A student wants to buy 3 notebooks and 2 pens. A notebook costs $2.25 and a pen costs $1.50. What is the total cost?\n    \"\"\"\n    notebooks_wanted = 3\n    pens_wanted = 2\n    cost_per_notebook = 2.25\n    cost_per_pen = 1.50\n    \n    total_cost_of_notebooks = notebooks_wanted * cost_per_notebook\n    total_cost_of_pens = pens_wanted * cost_per_pen\n    \n    result = total_cost_of_notebooks + total_cost_of_pens\n\n    return result\n\nprint(simple_math_problem())",
    "result": 9.75
  },
  {
    "index": 65,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Jessica wants to start a small business. She has $1000 to invest. She decides to use 25% of her money for tools and the rest for supplies. How much did she spend on tools?\n    \"\"\"\n    total_investment = 1000\n    percentage_for_tools = 25\n    decimal_percentage_for_tools = percentage_for_tools / 100\n    amount_spent_on_tools = total_investment * decimal_percentage_for_tools\n    result = amount_spent_on_tools\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Jessica wants to start a small business. She has $1000 to invest. She decides to use 25% of her money for tools and the rest for supplies. How much did she spend on tools?\n    \"\"\"\n    total_investment = 1000\n    percentage_for_tools = 25\n    decimal_percentage_for_tools = percentage_for_tools / 100\n    amount_spent_on_tools = total_investment * decimal_percentage_for_tools\n    result = amount_spent_on_tools\n\n    return result\n\nprint(simple_math_problem())",
    "result": 250.0
  },
  {
    "index": 66,
    "response": "```python\ndef simple_math_problem() -> float:\n\"\"\"\nStudent: Sabrina has 50 friends. 40% of them are online. How many of Sabrina's online friends are girls?\n\"\"\"\ntotal_friends = 50\npercentage_online = 0.4\ntotal_online_friends = total_friends * percentage_online\n# Since the problem doesn't provide information about the gender distribution of Sabrina's friends, \n# we cannot accurately determine the number of online friends who are girls.\n# However, to follow the format and provide a numerical answer, we'll assume the problem is asking for the total number of online friends.\nresult = total_online_friends\n\nreturn result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Student: Sabrina has 50 friends. 40% of them are online. How many of Sabrina's online friends are girls?\n    \"\"\"\n    total_friends = 50\n    percentage_online = 0.4\n    total_online_friends = total_friends * percentage_online\n    # Since the problem doesn't provide information about the gender distribution of Sabrina's friends, \n    # we cannot accurately determine the number of online friends who are girls.\n    # However, to follow the format and provide a numerical answer, we'll assume the problem is asking for the total number of online friends.\n    result = total_online_friends\n\n    return result\n\n    print(simple_math_problem())",
    "result": 20.0
  },
  {
    "index": 67,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    If there are 40 students in a classroom and they each have 4 pieces of candy, how many pieces of candy are in the classroom?\n    \"\"\"\n    total_students = 40\n    pieces_of_candy_per_student = 4\n    total_pieces_of_candy = total_students * pieces_of_candy_per_student\n    result = total_pieces_of_candy\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    If there are 40 students in a classroom and they each have 4 pieces of candy, how many pieces of candy are in the classroom?\n    \"\"\"\n    total_students = 40\n    pieces_of_candy_per_student = 4\n    total_pieces_of_candy = total_students * pieces_of_candy_per_student\n    result = total_pieces_of_candy\n\n    return result\n\nprint(simple_math_problem())",
    "result": 160
  },
  {
    "index": 68,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A rectangle has sides with lengths of 5 and 7 units. What is the area of the rectangle?\n    \"\"\"\n    length_of_rectangle = 5\n    width_of_rectangle = 7\n    area_of_rectangle = length_of_rectangle * width_of_rectangle\n    result = area_of_rectangle\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A rectangle has sides with lengths of 5 and 7 units. What is the area of the rectangle?\n    \"\"\"\n    length_of_rectangle = 5\n    width_of_rectangle = 7\n    area_of_rectangle = length_of_rectangle * width_of_rectangle\n    result = area_of_rectangle\n\n    return result\n\nprint(simple_math_problem())",
    "result": 35
  },
  {
    "index": 69,
    "response": "```python\ndef simple_math_problem() -> int:\n\"\"\"\nIf Frank will turn 15 next year and his brother Bobby is 10 years old, how old was Frank 5 years ago?\n\"\"\"\nfrank_age_next_year = 15\nyears_until_next_year = 1\nfrank_current_age = frank_age_next_year - years_until_next_year\nyears_to_subtract = 5\nfrank_age_5_years_ago = frank_current_age - years_to_subtract\nresult = frank_age_5_years_ago\n\nreturn result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    If Frank will turn 15 next year and his brother Bobby is 10 years old, how old was Frank 5 years ago?\n    \"\"\"\n    frank_age_next_year = 15\n    years_until_next_year = 1\n    frank_current_age = frank_age_next_year - years_until_next_year\n    years_to_subtract = 5\n    frank_age_5_years_ago = frank_current_age - years_to_subtract\n    result = frank_age_5_years_ago\n\n    return result\n\n    print(simple_math_problem())",
    "result": 9
  },
  {
    "index": 70,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Susan has an investment account with an APR of 4.5%. If she invests $3000 today, how much will she earn in 7 years?\n    \"\"\"\n    principal_investment = 3000\n    annual_percentage_rate = 0.045\n    years_invested = 7\n    total_amount_after_investment = principal_investment * (1 + annual_percentage_rate) ** years_invested\n    amount_earned = total_amount_after_investment - principal_investment\n    result = amount_earned\n\n    return result\n\n# Example usage\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Susan has an investment account with an APR of 4.5%. If she invests $3000 today, how much will she earn in 7 years?\n    \"\"\"\n    principal_investment = 3000\n    annual_percentage_rate = 0.045\n    years_invested = 7\n    total_amount_after_investment = principal_investment * (1 + annual_percentage_rate) ** years_invested\n    amount_earned = total_amount_after_investment - principal_investment\n    result = amount_earned\n\n    return result\n\n# Example usage\nprint(simple_math_problem())",
    "result": 1082.5854913969597
  },
  {
    "index": 71,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A school has 480 students. If 3/8 of them are girls, how many are boys?\n    \"\"\"\n    total_students = 480\n    fraction_girls = 3/8\n    number_of_girls = total_students * fraction_girls\n    number_of_boys = total_students - number_of_girls\n    result = number_of_boys\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A school has 480 students. If 3/8 of them are girls, how many are boys?\n    \"\"\"\n    total_students = 480\n    fraction_girls = 3/8\n    number_of_girls = total_students * fraction_girls\n    number_of_boys = total_students - number_of_girls\n    result = number_of_boys\n\n    return result\n\nprint(simple_math_problem())",
    "result": 300.0
  },
  {
    "index": 72,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A pyramid is composed of 12 Faces, each with an area of 24cm^2. What is the total surface area of the pyramid?\n    \"\"\"\n    numberOfFaces = 12\n    areaPerFace = 24  # in cm^2\n    totalSurfaceArea = numberOfFaces * areaPerFace\n    result = totalSurfaceArea\n\n    return result\n\n# Example usage:\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A pyramid is composed of 12 Faces, each with an area of 24cm^2. What is the total surface area of the pyramid?\n    \"\"\"\n    numberOfFaces = 12\n    areaPerFace = 24  # in cm^2\n    totalSurfaceArea = numberOfFaces * areaPerFace\n    result = totalSurfaceArea\n\n    return result\n\n# Example usage:\nprint(simple_math_problem())",
    "result": 288
  },
  {
    "index": 73,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Ethan spends 8 hours every weekday working and 6 hours on weekends. He gets paid $20 per hour during the week and $25 per hour on weekends. What is his weekly income?\n    \"\"\"\n    hours_per_weekday = 8\n    hours_per_weekend = 6\n    weekdays = 5\n    weekend_days = 2\n    hourly_wage_weekday = 20\n    hourly_wage_weekend = 25\n\n    total_hours_weekday = hours_per_weekday * weekdays\n    total_hours_weekend = hours_per_weekend * weekend_days\n\n    total_income_weekday = total_hours_weekday * hourly_wage_weekday\n    total_income_weekend = total_hours_weekend * hourly_wage_weekend\n\n    result = total_income_weekday + total_income_weekend\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Ethan spends 8 hours every weekday working and 6 hours on weekends. He gets paid $20 per hour during the week and $25 per hour on weekends. What is his weekly income?\n    \"\"\"\n    hours_per_weekday = 8\n    hours_per_weekend = 6\n    weekdays = 5\n    weekend_days = 2\n    hourly_wage_weekday = 20\n    hourly_wage_weekend = 25\n\n    total_hours_weekday = hours_per_weekday * weekdays\n    total_hours_weekend = hours_per_weekend * weekend_days\n\n    total_income_weekday = total_hours_weekday * hourly_wage_weekday\n    total_income_weekend = total_hours_weekend * hourly_wage_weekend\n\n    result = total_income_weekday + total_income_weekend\n\n    return result\n\nprint(simple_math_problem())",
    "result": 1100
  },
  {
    "index": 74,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Tim needs 18 liters of fuel for a car trip he is planning. He knows that he wants to use 3/4 of the fuel in the first half of the trip, and the rest of the fuel for the second half of the trip. How much fuel, in liters, does he need for the second half of the trip?\n    \"\"\"\n    total_fuel_needed = 18\n    fraction_used_in_first_half = 3/4\n    fuel_used_in_first_half = total_fuel_needed * fraction_used_in_first_half\n    fuel_needed_for_second_half = total_fuel_needed - fuel_used_in_first_half\n    result = fuel_needed_for_second_half\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Tim needs 18 liters of fuel for a car trip he is planning. He knows that he wants to use 3/4 of the fuel in the first half of the trip, and the rest of the fuel for the second half of the trip. How much fuel, in liters, does he need for the second half of the trip?\n    \"\"\"\n    total_fuel_needed = 18\n    fraction_used_in_first_half = 3/4\n    fuel_used_in_first_half = total_fuel_needed * fraction_used_in_first_half\n    fuel_needed_for_second_half = total_fuel_needed - fuel_used_in_first_half\n    result = fuel_needed_for_second_half\n\n    return result\n\nprint(simple_math_problem())",
    "result": 4.5
  },
  {
    "index": 75,
    "response": "```python\ndef simple_math_problem() -> float:\n\"\"\"\nEzra has $375 to buy textbooks for his classes. Each science textbook costs $25 and each language textbook costs $20. He needs 6 science books and 3 language books. How much money does he have left?\n\"\"\"\ninitial_budget = 375  # Initial budget\nscience_textbook_cost = 25  # Cost of each science textbook\nlanguage_textbook_cost = 20  # Cost of each language textbook\nnum_science_books = 6  # Number of science textbooks needed\nnum_language_books = 3  # Number of language textbooks needed\n\n# Calculate total cost of science textbooks\ntotal_science_textbook_cost = science_textbook_cost * num_science_books\n\n# Calculate total cost of language textbooks\ntotal_language_textbook_cost = language_textbook_cost * num_language_books\n\n# Calculate total cost of all textbooks\ntotal_textbook_cost = total_science_textbook_cost + total_language_textbook_cost\n\n# Calculate remaining budget\nresult = initial_budget - total_textbook_cost\n\nreturn result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Ezra has $375 to buy textbooks for his classes. Each science textbook costs $25 and each language textbook costs $20. He needs 6 science books and 3 language books. How much money does he have left?\n    \"\"\"\n    initial_budget = 375  # Initial budget\n    science_textbook_cost = 25  # Cost of each science textbook\n    language_textbook_cost = 20  # Cost of each language textbook\n    num_science_books = 6  # Number of science textbooks needed\n    num_language_books = 3  # Number of language textbooks needed\n\n    # Calculate total cost of science textbooks\n    total_science_textbook_cost = science_textbook_cost * num_science_books\n\n    # Calculate total cost of language textbooks\n    total_language_textbook_cost = language_textbook_cost * num_language_books\n\n    # Calculate total cost of all textbooks\n    total_textbook_cost = total_science_textbook_cost + total_language_textbook_cost\n\n    # Calculate remaining budget\n    result = initial_budget - total_textbook_cost\n\n    return result\n\n    print(simple_math_problem())",
    "result": 165
  },
  {
    "index": 76,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    There are 25 students per class and a school has 6 classes. How many students are there in the school?\n    \"\"\"\n    students_per_class = 25\n    number_of_classes = 6\n    total_students = students_per_class * number_of_classes\n    result = total_students\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    There are 25 students per class and a school has 6 classes. How many students are there in the school?\n    \"\"\"\n    students_per_class = 25\n    number_of_classes = 6\n    total_students = students_per_class * number_of_classes\n    result = total_students\n\n    return result\n\nprint(simple_math_problem())",
    "result": 150
  },
  {
    "index": 77,
    "response": "```python\ndef simple_math_problem() -> int:\n\"\"\"\nBlake has 750 books in total. He donates 300 of them to charity. How many books does Blake have left?\n\"\"\"\ntotal_books = 750\nbooks_donated = 300\nbooks_left = total_books - books_donated\nresult = books_left\n\nreturn result\n\n# Example usage:\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    Blake has 750 books in total. He donates 300 of them to charity. How many books does Blake have left?\n    \"\"\"\n    total_books = 750\n    books_donated = 300\n    books_left = total_books - books_donated\n    result = books_left\n\n    return result\n\n    # Example usage:\n    print(simple_math_problem())",
    "result": 450
  },
  {
    "index": 78,
    "response": "```python\ndef simple_math_problem() -> float:\n\"\"\"\nThe sum of the interior angles of a hexagon is equal to 720 degrees. What is the measure of one interior angle?\n\"\"\"\ntotal_degrees = 720\nnumber_of_angles = 6\nangle_measure = total_degrees / number_of_angles\nresult = angle_measure\n\nreturn result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    The sum of the interior angles of a hexagon is equal to 720 degrees. What is the measure of one interior angle?\n    \"\"\"\n    total_degrees = 720\n    number_of_angles = 6\n    angle_measure = total_degrees / number_of_angles\n    result = angle_measure\n\n    return result\n\n    print(simple_math_problem())",
    "result": 120.0
  },
  {
    "index": 79,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Sarah has 48 cupcakes, and she wants to divide them evenly between 6 boxes. How many cupcakes will be in each box?\n    \"\"\"\n    total_cupcakes = 48\n    number_of_boxes = 6\n    cupcakes_per_box = total_cupcakes / number_of_boxes\n    result = cupcakes_per_box\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Sarah has 48 cupcakes, and she wants to divide them evenly between 6 boxes. How many cupcakes will be in each box?\n    \"\"\"\n    total_cupcakes = 48\n    number_of_boxes = 6\n    cupcakes_per_box = total_cupcakes / number_of_boxes\n    result = cupcakes_per_box\n\n    return result\n\nprint(simple_math_problem())",
    "result": 8.0
  },
  {
    "index": 80,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    An amusement park charges $25 for a ride on their roller coaster, and there are 8 cars on the ride. If each car holds 2 people, and the ride is completely full, how much revenue does the park earn per ride?\n    \"\"\"\n    cost_per_ride = 25  # cost per person for a ride\n    number_of_cars = 8  # number of cars on the ride\n    people_per_car = 2  # number of people each car can hold\n    total_people = number_of_cars * people_per_car  # total number of people on the ride\n    revenue_per_ride = total_people * cost_per_ride  # total revenue per ride\n    result = revenue_per_ride\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    An amusement park charges $25 for a ride on their roller coaster, and there are 8 cars on the ride. If each car holds 2 people, and the ride is completely full, how much revenue does the park earn per ride?\n    \"\"\"\n    cost_per_ride = 25  # cost per person for a ride\n    number_of_cars = 8  # number of cars on the ride\n    people_per_car = 2  # number of people each car can hold\n    total_people = number_of_cars * people_per_car  # total number of people on the ride\n    revenue_per_ride = total_people * cost_per_ride  # total revenue per ride\n    result = revenue_per_ride\n\n    return result\n\nprint(simple_math_problem())",
    "result": 400
  },
  {
    "index": 81,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A store has a total of 75 umbrellas and 12 more umbrellas are added. The number of umbrellas would then be 1/6 of the number of students that Mary saw walking in the school district. How many students did Mary see walking in the school district?\n    \"\"\"\n    initial_umbrellas = 75\n    additional_umbrellas = 12\n    total_umbrellas = initial_umbrellas + additional_umbrellas\n    students_seen = total_umbrellas * 6\n    result = students_seen\n\n    return result\n\n# Example usage:\nresult = simple_math_problem()\nprint(result)\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A store has a total of 75 umbrellas and 12 more umbrellas are added. The number of umbrellas would then be 1/6 of the number of students that Mary saw walking in the school district. How many students did Mary see walking in the school district?\n    \"\"\"\n    initial_umbrellas = 75\n    additional_umbrellas = 12\n    total_umbrellas = initial_umbrellas + additional_umbrellas\n    students_seen = total_umbrellas * 6\n    result = students_seen\n\n    return result\n\n# Example usage:\nresult = simple_math_problem()\nprint(result)",
    "result": 522
  },
  {
    "index": 82,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A box of crayons costs $3.25. How much would it cost to buy 7 boxes of crayons?\n    \"\"\"\n    cost_per_box = 3.25\n    number_of_boxes = 7\n    total_cost = cost_per_box * number_of_boxes\n    result = total_cost\n\n    return result\n\n# Example usage:\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A box of crayons costs $3.25. How much would it cost to buy 7 boxes of crayons?\n    \"\"\"\n    cost_per_box = 3.25\n    number_of_boxes = 7\n    total_cost = cost_per_box * number_of_boxes\n    result = total_cost\n\n    return result\n\n# Example usage:\nprint(simple_math_problem())",
    "result": 22.75
  },
  {
    "index": 83,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Gina's recipe calls for 2/3 cups of sugar to make 12 cookies. How much sugar is needed to make 25 cookies?\n    \"\"\"\n    sugar_per_12_cookies = 2/3\n    cookies_original_recipe = 12\n    cookies_new_recipe = 25\n    sugar_per_cookie = sugar_per_12_cookies / cookies_original_recipe\n    result = sugar_per_cookie * cookies_new_recipe\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Gina's recipe calls for 2/3 cups of sugar to make 12 cookies. How much sugar is needed to make 25 cookies?\n    \"\"\"\n    sugar_per_12_cookies = 2/3\n    cookies_original_recipe = 12\n    cookies_new_recipe = 25\n    sugar_per_cookie = sugar_per_12_cookies / cookies_original_recipe\n    result = sugar_per_cookie * cookies_new_recipe\n\n    return result\n\nprint(simple_math_problem())",
    "result": 1.3888888888888888
  },
  {
    "index": 84,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    Student: Katya baked 24 muffins and Ricky baked 18 muffins. If Tina baked 3 times as many as Katya, how many muffins did Tina bake more than Ricky and Katya combined?\n    \"\"\"\n    katya_muffins = 24\n    ricky_muffins = 18\n    tina_muffins = 3 * katya_muffins\n    combined_katya_ricky_muffins = katya_muffins + ricky_muffins\n    result = tina_muffins - combined_katya_ricky_muffins\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    Student: Katya baked 24 muffins and Ricky baked 18 muffins. If Tina baked 3 times as many as Katya, how many muffins did Tina bake more than Ricky and Katya combined?\n    \"\"\"\n    katya_muffins = 24\n    ricky_muffins = 18\n    tina_muffins = 3 * katya_muffins\n    combined_katya_ricky_muffins = katya_muffins + ricky_muffins\n    result = tina_muffins - combined_katya_ricky_muffins\n\n    return result\n\nprint(simple_math_problem())",
    "result": 30
  },
  {
    "index": 85,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Ryan needs to calculate the sales tax for the total amount of a bill which is $67. The sales tax rate is 8.6%. How much is the sales tax?\n    \"\"\"\n    total_bill_amount = 67  # Total amount of the bill\n    sales_tax_rate = 8.6 / 100  # Convert sales tax rate from percentage to decimal\n    sales_tax = total_bill_amount * sales_tax_rate  # Calculate sales tax\n    result = sales_tax\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Ryan needs to calculate the sales tax for the total amount of a bill which is $67. The sales tax rate is 8.6%. How much is the sales tax?\n    \"\"\"\n    total_bill_amount = 67  # Total amount of the bill\n    sales_tax_rate = 8.6 / 100  # Convert sales tax rate from percentage to decimal\n    sales_tax = total_bill_amount * sales_tax_rate  # Calculate sales tax\n    result = sales_tax\n\n    return result\n\nprint(simple_math_problem())",
    "result": 5.762
  },
  {
    "index": 86,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Jamie baked 3 dozen cupcakes for a party. She gave away 1/4 of them to her neighbors and another 1/3 to her relatives. She kept the remaining cupcakes for herself. How many cupcakes did Jamie keep?\n    \"\"\"\n    total_cupcakes = 3 * 12  # 3 dozen cupcakes\n    cupcakes_given_to_neighbors = total_cupcakes * (1/4)\n    cupcakes_given_to_relatives = total_cupcakes * (1/3)\n    cupcakes_given_away = cupcakes_given_to_neighbors + cupcakes_given_to_relatives\n    cupcakes_kept = total_cupcakes - cupcakes_given_away\n    result = cupcakes_kept\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Jamie baked 3 dozen cupcakes for a party. She gave away 1/4 of them to her neighbors and another 1/3 to her relatives. She kept the remaining cupcakes for herself. How many cupcakes did Jamie keep?\n    \"\"\"\n    total_cupcakes = 3 * 12  # 3 dozen cupcakes\n    cupcakes_given_to_neighbors = total_cupcakes * (1/4)\n    cupcakes_given_to_relatives = total_cupcakes * (1/3)\n    cupcakes_given_away = cupcakes_given_to_neighbors + cupcakes_given_to_relatives\n    cupcakes_kept = total_cupcakes - cupcakes_given_away\n    result = cupcakes_kept\n\n    return result\n\nprint(simple_math_problem())",
    "result": 15.0
  },
  {
    "index": 87,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A group has 25 people, but only 10 of them want to play basketball. What percentage of the group wants to play basketball?\n    \"\"\"\n    total_people = 25\n    people_wanting_to_play_basketball = 10\n    percentage_wanting_to_play_basketball = (people_wanting_to_play_basketball / total_people) * 100\n    result = percentage_wanting_to_play_basketball\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A group has 25 people, but only 10 of them want to play basketball. What percentage of the group wants to play basketball?\n    \"\"\"\n    total_people = 25\n    people_wanting_to_play_basketball = 10\n    percentage_wanting_to_play_basketball = (people_wanting_to_play_basketball / total_people) * 100\n    result = percentage_wanting_to_play_basketball\n\n    return result\n\nprint(simple_math_problem())",
    "result": 40.0
  },
  {
    "index": 88,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A store sells apples for $0.50 each and oranges for $0.75 each. If a customer buys 4 apples and 2 oranges, what is the total cost?\n    \"\"\"\n    apple_price = 0.50  # Price of one apple\n    orange_price = 0.75  # Price of one orange\n    apples_bought = 4  # Number of apples bought\n    oranges_bought = 2  # Number of oranges bought\n    total_apple_cost = apple_price * apples_bought  # Calculate total cost of apples\n    total_orange_cost = orange_price * oranges_bought  # Calculate total cost of oranges\n    result = total_apple_cost + total_orange_cost  # Calculate total cost\n\n    return result\n\n# Example usage:\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A store sells apples for $0.50 each and oranges for $0.75 each. If a customer buys 4 apples and 2 oranges, what is the total cost?\n    \"\"\"\n    apple_price = 0.50  # Price of one apple\n    orange_price = 0.75  # Price of one orange\n    apples_bought = 4  # Number of apples bought\n    oranges_bought = 2  # Number of oranges bought\n    total_apple_cost = apple_price * apples_bought  # Calculate total cost of apples\n    total_orange_cost = orange_price * oranges_bought  # Calculate total cost of oranges\n    result = total_apple_cost + total_orange_cost  # Calculate total cost\n\n    return result\n\n# Example usage:\nprint(simple_math_problem())",
    "result": 3.5
  },
  {
    "index": 89,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    If a car travels 300 miles in six hours, how many hours will it take to travel the same distance at a speed of 60 mph?\n    \"\"\"\n    distance_traveled = 300  # miles\n    original_time_taken = 6  # hours\n    original_speed = distance_traveled / original_time_taken  # mph\n    new_speed = 60  # mph\n    new_time_taken = distance_traveled / new_speed  # hours\n    result = new_time_taken\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    If a car travels 300 miles in six hours, how many hours will it take to travel the same distance at a speed of 60 mph?\n    \"\"\"\n    distance_traveled = 300  # miles\n    original_time_taken = 6  # hours\n    original_speed = distance_traveled / original_time_taken  # mph\n    new_speed = 60  # mph\n    new_time_taken = distance_traveled / new_speed  # hours\n    result = new_time_taken\n\n    return result\n\nprint(simple_math_problem())",
    "result": 5.0
  },
  {
    "index": 90,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    If a store offers 20% off on all items with a regular price of $50 or more, how much would be the discount on an item that costs $70?\n    \"\"\"\n    regular_price = 70\n    discount_percentage = 20\n    discount_amount = (discount_percentage / 100) * regular_price\n    result = discount_amount\n\n    return result\n\n# Test the function\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    If a store offers 20% off on all items with a regular price of $50 or more, how much would be the discount on an item that costs $70?\n    \"\"\"\n    regular_price = 70\n    discount_percentage = 20\n    discount_amount = (discount_percentage / 100) * regular_price\n    result = discount_amount\n\n    return result\n\n# Test the function\nprint(simple_math_problem())",
    "result": 14.0
  },
  {
    "index": 91,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Ms. Lee wants to buy a new laptop that costs $1200. She has $500 in her savings account and can save $100 from her monthly income. She also has a credit card that charges 18% annual interest and has a $1000 limit. How many months will it take her to buy the laptop if she uses her savings, her income, and her credit card?\n    \"\"\"\n    laptop_cost = 1200\n    savings = 500\n    monthly_income = 100\n    credit_card_limit = 1000\n    remaining_amount_after_savings = laptop_cost - savings\n    \n    # Calculate the maximum amount she can use from her credit card\n    max_credit_card_amount = min(credit_card_limit, remaining_amount_after_savings)\n    \n    # Calculate the remaining amount after using savings and credit card\n    remaining_amount_after_credit_card = remaining_amount_after_savings - max_credit_card_amount\n    \n    # Calculate the number of months needed to save the remaining amount\n    months_needed = remaining_amount_after_credit_card / monthly_income\n    \n    # Since we can't have a fraction of a month, round up to the nearest whole number\n    import math\n    result = math.ceil(months_needed)\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Ms. Lee wants to buy a new laptop that costs $1200. She has $500 in her savings account and can save $100 from her monthly income. She also has a credit card that charges 18% annual interest and has a $1000 limit. How many months will it take her to buy the laptop if she uses her savings, her income, and her credit card?\n    \"\"\"\n    laptop_cost = 1200\n    savings = 500\n    monthly_income = 100\n    credit_card_limit = 1000\n    remaining_amount_after_savings = laptop_cost - savings\n    \n    # Calculate the maximum amount she can use from her credit card\n    max_credit_card_amount = min(credit_card_limit, remaining_amount_after_savings)\n    \n    # Calculate the remaining amount after using savings and credit card\n    remaining_amount_after_credit_card = remaining_amount_after_savings - max_credit_card_amount\n    \n    # Calculate the number of months needed to save the remaining amount\n    months_needed = remaining_amount_after_credit_card / monthly_income\n    \n    # Since we can't have a fraction of a month, round up to the nearest whole number\n    import math\n    result = math.ceil(months_needed)\n\n    return result\n\nprint(simple_math_problem())",
    "result": 0
  },
  {
    "index": 92,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A bakery sells cakes and cookies. Each cake costs $25, and each cookie costs $2. If the bakery sold 10 cakes and 100 cookies this week, how much money did the bakery make in total?\n    \"\"\"\n    cake_cost = 25\n    cookie_cost = 2\n    cakes_sold = 10\n    cookies_sold = 100\n    total_cake_revenue = cake_cost * cakes_sold\n    total_cookie_revenue = cookie_cost * cookies_sold\n    result = total_cake_revenue + total_cookie_revenue\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A bakery sells cakes and cookies. Each cake costs $25, and each cookie costs $2. If the bakery sold 10 cakes and 100 cookies this week, how much money did the bakery make in total?\n    \"\"\"\n    cake_cost = 25\n    cookie_cost = 2\n    cakes_sold = 10\n    cookies_sold = 100\n    total_cake_revenue = cake_cost * cakes_sold\n    total_cookie_revenue = cookie_cost * cookies_sold\n    result = total_cake_revenue + total_cookie_revenue\n\n    return result\n\nprint(simple_math_problem())",
    "result": 450
  },
  {
    "index": 93,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    David and his brother are running a race. David runs at a pace of 8 miles per hour and his brother runs at a pace of 10 miles per hour. If the race is 60 miles and David runs for 4 hours, how many hours should his brother run to finish the race?\n    \"\"\"\n    david_pace = 8  # miles per hour\n    brother_pace = 10  # miles per hour\n    race_distance = 60  # miles\n    david_running_time = 4  # hours\n    \n    # Calculate the distance David covers in 4 hours\n    david_distance_covered = david_pace * david_running_time\n    \n    # Since the problem is asking how many hours the brother should run to finish the race,\n    # we can assume that David's running time is not relevant to the brother's running time.\n    # The brother needs to cover the entire race distance.\n    \n    # Calculate the time the brother needs to run to cover the race distance\n    brother_running_time = race_distance / brother_pace\n    \n    result = brother_running_time\n    \n    return result\n\n# Test the function\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    David and his brother are running a race. David runs at a pace of 8 miles per hour and his brother runs at a pace of 10 miles per hour. If the race is 60 miles and David runs for 4 hours, how many hours should his brother run to finish the race?\n    \"\"\"\n    david_pace = 8  # miles per hour\n    brother_pace = 10  # miles per hour\n    race_distance = 60  # miles\n    david_running_time = 4  # hours\n    \n    # Calculate the distance David covers in 4 hours\n    david_distance_covered = david_pace * david_running_time\n    \n    # Since the problem is asking how many hours the brother should run to finish the race,\n    # we can assume that David's running time is not relevant to the brother's running time.\n    # The brother needs to cover the entire race distance.\n    \n    # Calculate the time the brother needs to run to cover the race distance\n    brother_running_time = race_distance / brother_pace\n    \n    result = brother_running_time\n    \n    return result\n\n# Test the function\nprint(simple_math_problem())",
    "result": 6.0
  },
  {
    "index": 94,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    If there are four chocolates in each of the nine gift boxes and two more chocolates are added to each box, calculate the total number of chocolates?\n    \"\"\"\n    chocolates_per_box_initial = 4\n    number_of_boxes = 9\n    chocolates_added_per_box = 2\n    chocolates_per_box_final = chocolates_per_box_initial + chocolates_added_per_box\n    total_chocolates = chocolates_per_box_final * number_of_boxes\n    result = total_chocolates\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    If there are four chocolates in each of the nine gift boxes and two more chocolates are added to each box, calculate the total number of chocolates?\n    \"\"\"\n    chocolates_per_box_initial = 4\n    number_of_boxes = 9\n    chocolates_added_per_box = 2\n    chocolates_per_box_final = chocolates_per_box_initial + chocolates_added_per_box\n    total_chocolates = chocolates_per_box_final * number_of_boxes\n    result = total_chocolates\n\n    return result\n\nprint(simple_math_problem())",
    "result": 54
  },
  {
    "index": 95,
    "response": "```python\ndef simple_math_problem() -> float:\n\"\"\"\nJessica has a rectangular garden with a length of 12m and a perimeter of 40m. Find the width of the garden.\n\"\"\"\nlength_of_garden = 12  # in meters\nperimeter_of_garden = 40  # in meters\n# The formula for the perimeter of a rectangle is P = 2(length + width)\n# We can rearrange this formula to solve for width: width = (P / 2) - length\nwidth_of_garden = (perimeter_of_garden / 2) - length_of_garden\nresult = width_of_garden\n\nreturn result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Jessica has a rectangular garden with a length of 12m and a perimeter of 40m. Find the width of the garden.\n    \"\"\"\n    length_of_garden = 12  # in meters\n    perimeter_of_garden = 40  # in meters\n    # The formula for the perimeter of a rectangle is P = 2(length + width)\n    # We can rearrange this formula to solve for width: width = (P / 2) - length\n    width_of_garden = (perimeter_of_garden / 2) - length_of_garden\n    result = width_of_garden\n\n    return result\n\n    print(simple_math_problem())",
    "result": 8.0
  },
  {
    "index": 96,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    If the length of a rectangle is 5 more than its width and the perimeter of the rectangle is equal to the perimeter of a square with area 25, what is the length of one side of the square?\n    \"\"\"\n    # Given area of the square\n    area_of_square = 25\n    \n    # Calculate the side length of the square\n    side_length_of_square = area_of_square ** 0.5\n    \n    # Since the perimeter of the rectangle is equal to the perimeter of the square, \n    # we can set up an equation: 2*(length + width) = 4*side_length_of_square\n    # We also know that length = width + 5\n    # However, we don't need to calculate the length and width of the rectangle because \n    # the problem only asks for the side length of the square, which we already calculated\n    \n    result = side_length_of_square\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    If the length of a rectangle is 5 more than its width and the perimeter of the rectangle is equal to the perimeter of a square with area 25, what is the length of one side of the square?\n    \"\"\"\n    # Given area of the square\n    area_of_square = 25\n    \n    # Calculate the side length of the square\n    side_length_of_square = area_of_square ** 0.5\n    \n    # Since the perimeter of the rectangle is equal to the perimeter of the square, \n    # we can set up an equation: 2*(length + width) = 4*side_length_of_square\n    # We also know that length = width + 5\n    # However, we don't need to calculate the length and width of the rectangle because \n    # the problem only asks for the side length of the square, which we already calculated\n    \n    result = side_length_of_square\n\n    return result\n\nprint(simple_math_problem())",
    "result": 5.0
  },
  {
    "index": 97,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A box of chocolates costs 12 dollars. If the cost is increased by 15%, what is the new cost of the box of chocolates?\n    \"\"\"\n    original_cost = 12  # original cost of the box of chocolates\n    increase_percentage = 0.15  # 15% increase as a decimal\n    cost_increase = original_cost * increase_percentage  # calculate the increase in cost\n    result = original_cost + cost_increase  # calculate the new cost\n\n    return result\n\n# Example usage:\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A box of chocolates costs 12 dollars. If the cost is increased by 15%, what is the new cost of the box of chocolates?\n    \"\"\"\n    original_cost = 12  # original cost of the box of chocolates\n    increase_percentage = 0.15  # 15% increase as a decimal\n    cost_increase = original_cost * increase_percentage  # calculate the increase in cost\n    result = original_cost + cost_increase  # calculate the new cost\n\n    return result\n\n# Example usage:\nprint(simple_math_problem())",
    "result": 13.8
  },
  {
    "index": 98,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    If the ratio of boys to girls in a class is 2:3 and there are 20 boys, how many girls are in the class?\n    \"\"\"\n    boys_to_girls_ratio = 2 / 3\n    number_of_boys = 20\n    ratio_of_boys = 2\n    ratio_of_girls = 3\n    multiplier = number_of_boys / ratio_of_boys\n    number_of_girls = ratio_of_girls * multiplier\n    result = int(number_of_girls)\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    If the ratio of boys to girls in a class is 2:3 and there are 20 boys, how many girls are in the class?\n    \"\"\"\n    boys_to_girls_ratio = 2 / 3\n    number_of_boys = 20\n    ratio_of_boys = 2\n    ratio_of_girls = 3\n    multiplier = number_of_boys / ratio_of_boys\n    number_of_girls = ratio_of_girls * multiplier\n    result = int(number_of_girls)\n\n    return result\n\nprint(simple_math_problem())",
    "result": 30
  },
  {
    "index": 99,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Mr. Peters drives 120 miles to visit his friend. He spends $15 on gas and $6 on tolls. His car gets 30 miles per gallon of gas. How much does he pay per mile for his trip?\n    \"\"\"\n    total_distance = 120  # Total distance driven in miles\n    gas_cost = 15  # Cost of gas in dollars\n    tolls_cost = 6  # Cost of tolls in dollars\n    miles_per_gallon = 30  # Car's mileage in miles per gallon\n    \n    # Calculate total cost of the trip\n    total_cost = gas_cost + tolls_cost\n    \n    # Calculate cost per mile\n    result = total_cost / total_distance\n    \n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Mr. Peters drives 120 miles to visit his friend. He spends $15 on gas and $6 on tolls. His car gets 30 miles per gallon of gas. How much does he pay per mile for his trip?\n    \"\"\"\n    total_distance = 120  # Total distance driven in miles\n    gas_cost = 15  # Cost of gas in dollars\n    tolls_cost = 6  # Cost of tolls in dollars\n    miles_per_gallon = 30  # Car's mileage in miles per gallon\n    \n    # Calculate total cost of the trip\n    total_cost = gas_cost + tolls_cost\n    \n    # Calculate cost per mile\n    result = total_cost / total_distance\n    \n    return result\n\nprint(simple_math_problem())",
    "result": 0.175
  }
]