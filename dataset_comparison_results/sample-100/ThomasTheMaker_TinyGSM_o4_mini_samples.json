[
  {
    "user": "Jake is trying to buy a new car that is priced at $20,000. He puts down a downpayment of $5,000 and takes out a 5-year loan with an interest rate of 5% per year. What will his monthly payment be?",
    "assistant": "**Reasoning:**\n\n1. The car costs \\$20,000 and Jake makes a downpayment of \\$5,000.  \n2. The loan principal (amount financed) is therefore  \n   principal = 20000 – 5000 = \\$15,000.  \n3. The annual interest rate is 5%, so the monthly interest rate is  \n   monthly_rate = 0.05 / 12.  \n4. The loan term is 5 years, which is  \n   n_periods = 5 × 12 = 60 monthly payments.  \n5. For a fixed‐rate amortizing loan, the monthly payment M is given by  \n   M = P · r / (1 – (1 + r)^(-n))  \n   where P = principal, r = monthly interest rate, n = number of payments.  \n6. Plug in P = 15000, r = 0.05/12, n = 60 to compute the monthly payment.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Jake is trying to buy a new car that is priced at $20,000. He puts down a downpayment of $5,000 and takes out a 5-year loan with an interest rate of 5% per year. What will his monthly payment be?\n    \"\"\"\n    # Given values\n    price = 20000.0\n    downpayment = 5000.0\n    \n    # Amount financed\n    principal = price - downpayment  # 15000.0\n    \n    # Interest rates and periods\n    annual_rate = 0.05\n    monthly_rate = annual_rate / 12  # 0.05/12 per month\n    years = 5\n    n_periods = years * 12           # 60 months\n    \n    # Monthly payment formula for an amortizing loan\n    monthly_payment = principal * monthly_rate / (1 - (1 + monthly_rate) ** (-n_periods))\n    \n    result = monthly_payment\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 6572
  },
  {
    "user": "Steve is going on a road trip. His car gets 25 miles per gallon. The trip is 600 miles long. How many gallons of gas does Steve need to complete the trip?",
    "assistant": "**Reasoning:**\n1. We know Steve’s car efficiency is 25 miles per gallon.\n2. The trip distance is 600 miles.\n3. To find how many gallons are needed, divide the total miles by the miles per gallon:  \n   gallons_needed = 600 miles ÷ 25 miles/gallon = 24 gallons.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Steve is going on a road trip. His car gets 25 miles per gallon. The trip is 600 miles long. How many gallons of gas does Steve need to complete the trip?\n    \"\"\"\n    miles_per_gallon = 25\n    trip_distance = 600\n\n    # Calculate gallons needed\n    gallons_needed = trip_distance / miles_per_gallon\n\n    result = gallons_needed\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 14145
  },
  {
    "user": "- Tim wants to fill a bucket with 12 liters of water. He has a hose that can pump water at a rate of 400 milliliters per minute. How long will it take him to fill the bucket completely?",
    "assistant": "**Reasoning:**\n\nStep 1: Convert the volume from liters to milliliters.  \n- 1 liter = 1000 milliliters  \n- Total volume = 12 liters × 1000 = 12 000 milliliters  \n\nStep 2: Determine the pumping rate.  \n- The hose pumps at 400 milliliters per minute.  \n\nStep 3: Compute the time required.  \n- Time = Total volume ÷ Rate  \n- Time = 12 000 ml ÷ 400 ml/min = 30 minutes  \n\nTherefore, it takes 30 minutes to fill the bucket.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Tim wants to fill a bucket with 12 liters of water. He has a hose that can pump water at a rate of 400 milliliters per minute. How long will it take him to fill the bucket completely?\n    \"\"\"\n    # Given values\n    total_liters = 12  # in liters\n    rate_ml_per_minute = 400  # in milliliters per minute\n\n    # Convert liters to milliliters\n    total_milliliters = total_liters * 1000  # 1 liter = 1000 milliliters\n\n    # Calculate the time in minutes\n    result = total_milliliters / rate_ml_per_minute\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 1557
  },
  {
    "user": "Student: A store sells 2 notebooks for the price of $12. How much does 1 notebook cost?",
    "assistant": "**Reasoning:**\n1. We know 2 notebooks together cost \\$12.\n2. To find the cost of a single notebook, we divide the total cost by the number of notebooks.\n3. So we calculate \\$12 ÷ 2 = \\$6.\n4. Therefore, one notebook costs \\$6.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A store sells 2 notebooks for the price of $12. How much does 1 notebook cost?\n    \"\"\"\n    number_of_notebooks = 2\n    total_price = 12.0\n\n    # Calculate the price of one notebook\n    price_per_notebook = total_price / number_of_notebooks\n\n    result = price_per_notebook\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 28341
  },
  {
    "user": "Student: Hussain just bought a car for a total of $22,522. Of that amount, $15,000 was for the car and the other $7,522 was used for taxes and fees. How much was actually spent on the car?",
    "assistant": "**Reasoning:**\n1. The total amount paid, \\$22,522, is the sum of the car’s base price and the taxes/fees.\n2. We know the taxes and fees amounted to \\$7,522.\n3. To find the amount actually spent on the car itself, subtract the taxes and fees from the total.\n4. Compute 22,522 − 7,522 = 15,000.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Student: Hussain just bought a car for a total of $22,522. Of that amount, $15,000 was for the car and the other $7,522 was used for taxes and fees. How much was actually spent on the car?\n    \"\"\"\n    total_cost = 22522        # total amount paid including car, taxes, and fees\n    taxes_and_fees = 7522     # amount spent on taxes and fees\n    actual_car_cost = total_cost - taxes_and_fees  # subtract fees from total to get car cost\n    \n    result = actual_car_cost\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 37225
  },
  {
    "user": "Michelle has 10 limes and each lime has 8 slices. If she gave away 3 limes, how many slices are left?",
    "assistant": "**Reasoning:**\n1. Michelle starts with 10 limes.\n2. Each lime is cut into 8 slices, so total slices initially = 10 limes × 8 slices per lime = 80 slices.\n3. She gave away 3 limes, which is 3 × 8 = 24 slices given away.\n4. The number of slices left = 80 slices − 24 slices = 56 slices.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Michelle has 10 limes and each lime has 8 slices. If she gave away 3 limes, how many slices are left?\n    \"\"\"\n    total_limes = 10\n    slices_per_lime = 8\n    given_away_limes = 3\n\n    total_slices = total_limes * slices_per_lime\n    slices_given_away = given_away_limes * slices_per_lime\n    result = total_slices - slices_given_away\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 36866
  },
  {
    "user": "Student: Walmart sells a bag of oranges with 10 oranges in it. Target sells a bag of oranges with 5 less oranges than Walmart. If James wants to buy 4 bags of oranges from each store, how many oranges will he have in total?",
    "assistant": "**Reasoning:**\n1. Walmart sells 10 oranges per bag.\n2. Target sells 5 fewer oranges per bag than Walmart, so Target sells \\(10 - 5 = 5\\) oranges per bag.\n3. James buys 4 bags from each store.\n4. Oranges from Walmart: \\(4 \\times 10 = 40\\).\n5. Oranges from Target: \\(4 \\times 5 = 20\\).\n6. Total oranges: \\(40 + 20 = 60\\).\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Walmart sells a bag of oranges with 10 oranges in it. Target sells a bag of oranges with 5 less oranges than Walmart. If James wants to buy 4 bags of oranges from each store, how many oranges will he have in total?\n    \"\"\"\n    oranges_per_bag_walmart = 10\n    oranges_per_bag_target = oranges_per_bag_walmart - 5\n    number_of_bags_each_store = 4\n\n    total_oranges_walmart = oranges_per_bag_walmart * number_of_bags_each_store\n    total_oranges_target = oranges_per_bag_target * number_of_bags_each_store\n\n    result = total_oranges_walmart + total_oranges_target\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 41563
  },
  {
    "user": "Tom used to ride his bike 20 km a day. He decided to reduce his carbon footprint by 10% so he rode his bike 2 km less a day. How much less distance did he ride his bike in a month (assume 30 days) compared to what he used to ride?",
    "assistant": "**Reasoning:**\n1. Calculate Tom’s original monthly riding distance:  \n   original_daily_distance × days in a month.  \n2. Determine how much distance Tom reduced per day (10% of 20 km = 2 km).  \n3. Compute his new daily distance and then his new monthly distance.  \n4. Subtract the new monthly distance from the original monthly distance to find how much less he rode.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Tom used to ride his bike 20 km a day. He decided to reduce his carbon footprint by 10% so he rode his bike 2 km less a day.\n    How much less distance did he ride his bike in a month (assume 30 days) compared to what he used to ride?\n    \"\"\"\n    original_daily_distance = 20  # km per day\n    reduction_percentage = 0.10   # 10%\n    reduction_amount = original_daily_distance * reduction_percentage  # km per day reduced\n    new_daily_distance = original_daily_distance - reduction_amount\n\n    days_in_month = 30\n    original_monthly_distance = original_daily_distance * days_in_month\n    new_monthly_distance = new_daily_distance * days_in_month\n\n    result = original_monthly_distance - new_monthly_distance\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 2802
  },
  {
    "user": "A recipe calls for 2 cups of flour to make 12 cookies. If you want to make 18 cookies, how many cups of flour do you need?",
    "assistant": "**Reasoning:**\n1. We know 2 cups of flour makes 12 cookies.\n2. To find the flour needed per cookie, divide the total flour by the number of cookies:\n   flour_per_cookie = 2 cups / 12 cookies = 1/6 cup per cookie.\n3. We want to make 18 cookies, so multiply the flour needed per cookie by 18:\n   needed_flour = (1/6 cup per cookie) * 18 cookies = 3 cups.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A recipe calls for 2 cups of flour to make 12 cookies. If you want to make 18 cookies, how many cups of flour do you need?\n    \"\"\"\n    cups_for_twelve = 2.0\n    cookies_for_cups = 12\n    desired_cookies = 18\n\n    # Calculate how much flour is needed for one cookie\n    flour_per_cookie = cups_for_twelve / cookies_for_cups\n\n    # Calculate the flour needed for the desired number of cookies\n    result = flour_per_cookie * desired_cookies\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 22120
  },
  {
    "user": "Two friends started running and finished running 10 km at an average speed of 12 km/hour. The first friend ran at an average speed of 10 km/hour. What was the average speed of the second friend in km/hour?",
    "assistant": "**Reasoning:**\n\nWe have two friends, each running the same distance of 10 km. Together they have an average speed of 12 km/h over their combined distance.\n\n1. Let v₁ = 10 km/h be the speed of the first friend.\n2. Let v₂ be the speed of the second friend (what we need to find).\n3. Each friend runs 10 km, so the total distance covered by both is  \n   D_total = 10 km + 10 km = 20 km.\n4. Their combined average speed is given as 12 km/h, so their total time together is  \n   T_total = D_total / 12 km/h = 20 / 12 = 5/3 hours.\n5. The time the first friend takes is  \n   T₁ = 10 km / 10 km/h = 1 hour.\n6. The time the second friend takes is  \n   T₂ = T_total – T₁ = (5/3) h – 1 h = 2/3 h.\n7. Therefore, the second friend’s speed is  \n   v₂ = 10 km / (2/3 h) = 15 km/h.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Two friends started running and finished running 10 km at an average speed of 12 km/hour. The first friend ran at an average speed of 10 km/hour. What was the average speed of the second friend in km/hour?\n    \"\"\"\n    # Given values\n    distance_each = 10.0          # km each friend runs\n    average_speed_both = 12.0     # km/h combined average speed\n    speed_friend1 = 10.0          # km/h\n\n    # Total distance run by both friends\n    total_distance = 2 * distance_each  # km\n\n    # Total time taken by both together\n    total_time = total_distance / average_speed_both  # hours\n\n    # Time taken by the first friend\n    time_friend1 = distance_each / speed_friend1      # hours\n\n    # Time taken by the second friend\n    time_friend2 = total_time - time_friend1          # hours\n\n    # Speed of the second friend\n    speed_friend2 = distance_each / time_friend2      # km/h\n\n    return speed_friend2\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 349
  },
  {
    "user": "Andy cooked a meal for six people. He used two tablespoons of butter in the sauce. Butter has 100 calories per tablespoon. How many calories were added to each serving of food?",
    "assistant": "**Reasoning:**\n1. Andy used 2 tablespoons of butter.\n2. Each tablespoon of butter has 100 calories.\n3. Total calories from the butter = 2 tablespoons * 100 calories/tablespoon = 200 calories.\n4. He served the meal to 6 people, so we divide the total calories by 6.\n5. Calories added to each serving = 200 calories ÷ 6 servings ≈ 33.333333333333336 calories.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Andy cooked a meal for six people. He used two tablespoons of butter in the sauce. Butter has 100 calories per tablespoon. How many calories were added to each serving of food?\n    \"\"\"\n    tablespoons_butter = 2\n    calories_per_tablespoon = 100\n    total_calories = tablespoons_butter * calories_per_tablespoon\n    servings = 6\n    calories_per_serving = total_calories / servings\n    result = calories_per_serving\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 30844
  },
  {
    "user": "Possible new questions and programs are: A pizza place offers a buy one get one free deal for any medium pizza. A medium pizza costs $12 and has 8 slices. Lisa wants to order enough pizza for herself and her 5 friends, and they each want to eat 3 slices. How much will Lisa pay for the pizza?",
    "assistant": "**Reasoning:**\n\n1. There are Lisa plus her 5 friends, so a total of 6 people.  \n2. Each person wants to eat 3 slices, so total slices needed = 6 × 3 = 18 slices.  \n3. Each medium pizza has 8 slices. Without any deal, the number of pizzas required = ceil(18 ÷ 8) = ceil(2.25) = 3 pizzas.  \n4. The deal is “buy one get one free,” meaning for every pizza you pay for, you get one additional pizza at no extra cost.  \n5. To obtain 3 pizzas under this deal, Lisa needs to pay for ceil(3 ÷ 2) = ceil(1.5) = 2 pizzas (and she will receive 2 extra free pizzas, for a total of 4 pizzas).  \n6. At \\$12 per pizza, the total cost Lisa pays = 2 × \\$12 = \\$24.\n\n**Solution:**\n```python\nimport math\n\ndef simple_math_problem() -> float:\n    \"\"\"\n    A pizza place offers a buy one get one free deal for any medium pizza. \n    A medium pizza costs $12 and has 8 slices. Lisa wants to order enough \n    pizza for herself and her 5 friends, and they each want to eat 3 slices. \n    How much will Lisa pay for the pizza?\n    \"\"\"\n    # Number of people eating pizza\n    number_of_people = 6\n    \n    # Number of slices each person will eat\n    slices_per_person = 3\n    \n    # Total slices needed\n    total_slices_needed = number_of_people * slices_per_person\n    \n    # Number of slices per pizza\n    slices_per_pizza = 8\n    \n    # Compute how many pizzas are required without the deal\n    pizzas_required = math.ceil(total_slices_needed / slices_per_pizza)\n    \n    # Under buy-one-get-one-free, you pay for half the pizzas (rounding up)\n    pizzas_to_pay_for = math.ceil(pizzas_required / 2)\n    \n    # Cost per pizza\n    cost_per_pizza = 12.0\n    \n    # Total cost\n    total_cost = pizzas_to_pay_for * cost_per_pizza\n    \n    return total_cost\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 3370
  },
  {
    "user": "If Mike drives 8,000 miles yearly, how much does he spend on oil changes if he needs to get one every 4000 miles and gets one free oil change a year, with each oil change costing $35?",
    "assistant": "**Reasoning:**\n1. Mike drives 8,000 miles per year.\n2. He needs an oil change every 4,000 miles.\n3. Therefore, in a year he needs 8,000 / 4,000 = 2 oil changes.\n4. He gets one oil change free each year.\n5. So he pays for the remaining 2 − 1 = 1 oil change.\n6. Each paid oil change costs \\$35.\n7. Total annual cost = 1 × \\$35 = \\$35.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    If Mike drives 8,000 miles yearly, how much does he spend on oil changes if he needs to get one every 4000 miles and gets one free oil change a year, with each oil change costing $35?\n    \"\"\"\n    yearly_miles = 8000\n    miles_per_oil_change = 4000\n    free_oil_changes_per_year = 1\n    cost_per_oil_change = 35\n\n    total_oil_changes_needed = yearly_miles / miles_per_oil_change\n    paid_oil_changes = total_oil_changes_needed - free_oil_changes_per_year\n    result = paid_oil_changes * cost_per_oil_change\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 37228
  },
  {
    "user": "In a classroom, there are 3 rows of students. The first row has 18 students until 4 students need to go to the restroom. 6 students from the second row, which originally had 21 students, are called to attend an assembly. The third row has 15 students. How many students are left in the classroom?",
    "assistant": "**Reasoning:**\n1. The first row starts with 18 students, then 4 leave to go to the restroom.  \n   Remaining in first row = 18 − 4 = 14.  \n2. The second row starts with 21 students, then 6 leave to attend an assembly.  \n   Remaining in second row = 21 − 6 = 15.  \n3. The third row has 15 students and none leave.  \n   Remaining in third row = 15.  \n4. Total students left = 14 + 15 + 15 = 44.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    In a classroom, there are 3 rows of students. The first row has 18 students until 4 students need to go to the restroom. 6 students from the second row, which originally had 21 students, are called to attend an assembly. The third row has 15 students. How many students are left in the classroom?\n    \"\"\"\n    # Number of students in the first row and how many leave\n    first_row_initial = 18\n    first_row_leaving = 4\n    first_row_remaining = first_row_initial - first_row_leaving\n\n    # Number of students in the second row and how many leave\n    second_row_initial = 21\n    second_row_leaving = 6\n    second_row_remaining = second_row_initial - second_row_leaving\n\n    # Number of students in the third row (none leave)\n    third_row_remaining = 15\n\n    # Total students left in the classroom\n    result = first_row_remaining + second_row_remaining + third_row_remaining\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 38012
  },
  {
    "user": "James has 12 cards. He decides to give away 1/6 of his cards to his friend. How many cards does he have after giving away the cards?",
    "assistant": "**Reasoning:**\n1. James starts with 12 cards.  \n2. He gives away \\(\\tfrac{1}{6}\\) of his cards.  \n3. Calculate how many cards that is: \\(12 \\times \\tfrac{1}{6} = 2\\).  \n4. Subtract the given-away cards from the original total: \\(12 - 2 = 10\\).  \n5. James has 10 cards remaining.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    James has 12 cards. He decides to give away 1/6 of his cards to his friend. How many cards does he have after giving away the cards?\n    \"\"\"\n    total_cards = 12\n    fraction_given_away = 1/6\n    cards_given_away = total_cards * fraction_given_away\n    result = total_cards - cards_given_away\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 21465
  },
  {
    "user": "Student: A triangle has a base of 6 cm and a height of 8 cm. What is the area of the triangle?",
    "assistant": "**Reasoning:**\n1. The formula for the area of a triangle is (1/2) × base × height.  \n2. We are given base = 6 cm and height = 8 cm.  \n3. Compute the product of base and height: 6 × 8 = 48.  \n4. Multiply by 1/2: (1/2) × 48 = 24.  \n5. Therefore, the area of the triangle is 24 square centimeters.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A triangle has a base of 6 cm and a height of 8 cm. What is the area of the triangle?\n    \"\"\"\n    base = 6       # in cm\n    height = 8     # in cm\n    # Calculate the product of base and height\n    product_base_height = base * height\n    # Multiply by 1/2 to get the area\n    result = 0.5 * product_base_height\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 33977
  },
  {
    "user": "Possible questions and programs are: Sharon wants to bake a cake for her friend's birthday. She needs 3 cups of flour, 2 cups of sugar, 4 eggs, and 1/2 cup of oil for the cake batter. She has a 4-cup measuring cup and a 1/4-cup measuring spoon. How many times does she need to use the measuring cup and the measuring spoon to measure the ingredients?",
    "assistant": "**Reasoning:**\n\n1. Sharon needs:\n   - 3 cups of flour\n   - 2 cups of sugar\n   - 1/2 cup of oil  \n   (eggs don’t require measuring tools)\n\n2. She has:\n   - A 4-cup measuring cup (with gradations so she can measure any amount up to 4 cups in one fill)\n   - A 1/4-cup measuring spoon\n\n3. Measuring the flour (3 cups) with the 4-cup cup takes 1 use (she simply fills to the 3-cup marking).\n\n4. Measuring the sugar (2 cups) with the 4-cup cup takes 1 use.\n\n5. Measuring the oil (1/2 cup) with the 1/4-cup spoon takes  \n   1/2 ÷ 1/4 = 2 uses of the spoon.\n\n6. Total uses = (flour uses) + (sugar uses) + (oil uses)  \n               = 1 + 1 + 2  \n               = 4\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Sharon wants to bake a cake for her friend's birthday. She needs 3 cups of flour,\n    2 cups of sugar, 4 eggs, and 1/2 cup of oil for the cake batter. She has a 4-cup\n    measuring cup and a 1/4-cup measuring spoon. How many times does she need to\n    use the measuring cup and the measuring spoon to measure the ingredients?\n    \"\"\"\n    # required amounts\n    flour_cups = 3\n    sugar_cups = 2\n    oil_cups = 0.5\n\n    # tool capacities\n    measuring_cup_capacity = 4    # in cups\n    measuring_spoon_capacity = 0.25  # in cups (1/4-cup spoon)\n\n    # uses of the large measuring cup\n    # flour: 3 cups all at once\n    flour_cup_uses = 1\n    # sugar: 2 cups all at once\n    sugar_cup_uses = 1\n\n    # uses of the 1/4-cup spoon for oil\n    oil_spoon_uses = oil_cups / measuring_spoon_capacity  # 0.5 / 0.25 = 2\n\n    # total uses\n    total_measuring_cup_uses = flour_cup_uses + sugar_cup_uses\n    total_measuring_spoon_uses = oil_spoon_uses\n\n    result = total_measuring_cup_uses + total_measuring_spoon_uses\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 14974
  },
  {
    "user": "Mr. Wong sells books at a fair. He has 150 books in total, and he sells them for $12 each. He pays $5 for each book he buys from the publisher, and he also pays a $50 fee to rent a booth at the fair. How much profit does Mr. Wong make if he sells 120 books?",
    "assistant": "**Reasoning:**\n\n1. Determine how many books Mr. Wong sells:\n   - He sells 120 books.\n\n2. Compute the total revenue from selling the books:\n   - Revenue per book = \\$12\n   - Total revenue = 120 books × \\$12/book = \\$1,440\n\n3. Compute the total cost of purchasing those books:\n   - Cost per book = \\$5\n   - Total cost of books = 120 books × \\$5/book = \\$600\n\n4. Add the fixed booth rental fee to the cost:\n   - Booth fee = \\$50\n   - Total cost = cost of books (\\$600) + booth fee (\\$50) = \\$650\n\n5. Compute profit as revenue minus total cost:\n   - Profit = \\$1,440 − \\$650 = \\$790\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Mr. Wong sells books at a fair. He has 150 books in total, and he sells them for $12 each. He pays $5 for each book he buys from the publisher, and he also pays a $50 fee to rent a booth at the fair. How much profit does Mr. Wong make if he sells 120 books?\n    \"\"\"\n    # Given data\n    total_books = 150\n    price_per_book = 12\n    cost_per_book = 5\n    booth_fee = 50\n    books_sold = 120\n\n    # Calculate revenue\n    revenue = price_per_book * books_sold\n\n    # Calculate cost of goods sold\n    cost_of_books = cost_per_book * books_sold\n\n    # Calculate total cost including booth fee\n    total_cost = cost_of_books + booth_fee\n\n    # Profit is revenue minus total cost\n    result = revenue - total_cost\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 1344
  },
  {
    "user": "Two chefs are tossing pizza dough in a kitchen. One chef tosses the dough three times for every one time the other chef tosses it. The head chef reshapes the dough every second time the other chef tosses it. After how many tosses did the head chef reshape the dough?",
    "assistant": "**Reasoning:**\n\n1. Let’s call the two chefs Chef A and Chef B.  \n2. We are told one chef tosses 3 times for every 1 toss by the other.  We’ll assume the head chef is the one tossing 3 times for every 1 toss by the other chef.  \n3. The head chef “reshapes the dough every second time the other chef tosses it.”  In other words, after the other chef’s 2nd toss, the head chef reshapes.  \n4. If the other chef tosses 2 times, then by the ratio the head chef will have tossed 3 × 2 = 6 times.  \n5. The total number of tosses (head chef’s tosses plus the other chef’s tosses) at the moment of that reshape is 6 + 2 = 8.  \n\nTherefore, the head chef reshapes the dough after 8 tosses in total.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Two chefs are tossing pizza dough in a kitchen. One chef tosses the dough three times for every one time the other chef tosses it. The head chef reshapes the dough every second time the other chef tosses it. After how many tosses did the head chef reshape the dough?\n    \"\"\"\n    # Number of head chef tosses per one toss of the other chef\n    head_tosses_per_other = 3\n    # We reshape on the other chef’s 2nd toss\n    other_tosses_for_reshape = 2\n\n    # Total head chef tosses up to that point\n    total_head_tosses = head_tosses_per_other * other_tosses_for_reshape\n    # Total tosses (head chef + other chef)\n    total_tosses = total_head_tosses + other_tosses_for_reshape\n\n    result = float(total_tosses)\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 15426
  },
  {
    "user": "A recipe calls for 3/4 cup of flour to make 20 cookies. How much flour is needed if you want to make 40 cookies?",
    "assistant": "**Reasoning:**\n1. The recipe calls for 3/4 cup of flour to make 20 cookies.\n2. We want to make 40 cookies, which is twice as many (40 / 20 = 2).\n3. Therefore, we multiply the original amount of flour by 2:  \n   (3/4) * 2 = 3/2 = 1.5 cups of flour.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A recipe calls for 3/4 cup of flour to make 20 cookies. How much flour is needed if you want to make 40 cookies?\n    \"\"\"\n    # Amount of flour needed for the original 20 cookies (in cups)\n    original_flour_cups = 3/4\n    # Number of cookies that original_flour_cups makes\n    original_cookies = 20\n    # Number of cookies we want to make\n    desired_cookies = 40\n\n    # Calculate how many times larger the new batch is\n    scaling_factor = desired_cookies / original_cookies\n\n    # Scale the flour accordingly\n    result = original_flour_cups * scaling_factor\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 6527
  },
  {
    "user": "Tim has half as many marbles in his bag as stickers in his album. He has 6 more stickers than cards and currently has 12 cards. How many marbles does Tim have?",
    "assistant": "**Reasoning:**\n\n1. Identify the number of cards Tim has:\n   - cards = 12  \n2. Determine the number of stickers:\n   - He has 6 more stickers than cards, so  \n     stickers = cards + 6 = 12 + 6 = 18  \n3. Determine the number of marbles:\n   - He has half as many marbles as stickers, so  \n     marbles = stickers / 2 = 18 / 2 = 9  \n4. Conclusion: Tim has 9 marbles.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Tim has half as many marbles in his bag as stickers in his album. He has 6 more stickers than cards and currently has 12 cards. How many marbles does Tim have?\n    \"\"\"\n    cards = 12\n    stickers = cards + 6\n    marbles = stickers / 2\n    result = marbles\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 978
  },
  {
    "user": "If Tim's age is 8 years more than Alex's age, and Alex is 14 years old, how old is Tim?",
    "assistant": "**Reasoning:**\n1. We know Alex is 14 years old.  \n2. Tim’s age is 8 years more than Alex’s age.  \n3. Therefore, Tim’s age = Alex’s age + 8 = 14 + 8 = 22.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    If Tim's age is 8 years more than Alex's age, and Alex is 14 years old, how old is Tim?\n    \"\"\"\n    alex_age = 14\n    age_difference = 8\n    tim_age = alex_age + age_difference\n    result = float(tim_age)\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 5257
  },
  {
    "user": "Mrs. Jackson intended to buy jewelry worth $700. She went to a jewelry shop with the $700 but by the time she had selected everything, she realized that she would need one-fifth more money than she had. If the store owner gave her a discount of 15%, how much more would she have to pay? David starts by saving $2.00 a week for 8 weeks. Then he doubles the saving and saves $4.00 a week for the next 8 weeks. Finally, he increases his saving to $8.00 a week for the next 8 weeks. How much money has he saved over 24 weeks?",
    "assistant": "**Reasoning:**\n\n1. Mrs. Jackson part  \n   - She originally has \\$700.  \n   - She finds that the jewelry she selected costs one-fifth more than what she has, so the list price is  \n       \\$700 × (1 + 1/5) = \\$700 × 1.2 = \\$840.  \n   - A 15% discount on \\$840 brings the price down to  \n       \\$840 × (1 − 0.15) = \\$840 × 0.85 = \\$714.  \n   - Since she only has \\$700, she still needs  \n       \\$714 − \\$700 = \\$14 more.  \n\n2. David part  \n   - Phase 1: \\$2.00/week for 8 weeks = \\$16.  \n   - Phase 2: \\$4.00/week for 8 weeks = \\$32.  \n   - Phase 3: \\$8.00/week for 8 weeks = \\$64.  \n   - Total saved over 24 weeks = \\$16 + \\$32 + \\$64 = \\$112.  \n\nSo the answers are:  \n- Mrs. Jackson needs \\$14 more.  \n- David has saved \\$112 in total.  \n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Mrs. Jackson intended to buy jewelry worth $700. She went to a jewelry shop with the $700 but by the time she had selected everything, she realized that she would need one-fifth more money than she had. If the store owner gave her a discount of 15%, how much more would she have to pay? David starts by saving $2.00 a week for 8 weeks. Then he doubles the saving and saves $4.00 a week for the next 8 weeks. Finally, he increases his saving to $8.00 a week for the next 8 weeks. How much money has he saved over 24 weeks?\n    \"\"\"\n    # Mrs. Jackson calculation\n    original_amount = 700.0\n    total_cost_before_discount = original_amount * (1 + 1/5)   # one-fifth more\n    discount_rate = 0.15\n    discounted_cost = total_cost_before_discount * (1 - discount_rate)\n    more_money_needed = discounted_cost - original_amount\n\n    # David's savings calculation\n    weekly_savings_phase1 = 2.0\n    weeks_phase1 = 8\n    savings_phase1 = weekly_savings_phase1 * weeks_phase1\n\n    weekly_savings_phase2 = 4.0\n    weeks_phase2 = 8\n    savings_phase2 = weekly_savings_phase2 * weeks_phase2\n\n    weekly_savings_phase3 = 8.0\n    weeks_phase3 = 8\n    savings_phase3 = weekly_savings_phase3 * weeks_phase3\n\n    total_savings = savings_phase1 + savings_phase2 + savings_phase3\n\n    # Return both results: (additional money needed, total saved)\n    result = (more_money_needed, total_savings)\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 34963
  },
  {
    "user": "-(You can copy the code template below) # Some possible questions and programs are: Ashley is making bracelets for her friends for Valentine's Day. She has 4 types of beads: red, pink, white, and purple. She wants to make 15 bracelets, each with 10 beads. She has enough red and white beads to make 8 bracelets, and enough pink and purple beads to make 12 bracelets. How many bracelets does she make with a mix of red, white, pink, and purple beads?",
    "assistant": "**Reasoning:**\n\n1. Define two groups of bracelets:\n   - Group A: bracelets made using red and white beads.  Ashley has enough of those to make at most 8 bracelets.\n   - Group B: bracelets made using pink and purple beads.  She has enough of those to make at most 12 bracelets.\n\n2. She makes 15 bracelets in total.  Every bracelet uses at least one of the two groups (either red/white, or pink/purple, or both).\n\n3. The bracelets that use beads from both groups (i.e. a mix of red & white and pink & purple) correspond to the intersection of A and B.\n\n4. By inclusion–exclusion for two sets:\n   |A ∩ B| = |A| + |B| – |A ∪ B|\n   Here |A| = 8, |B| = 12, and |A ∪ B| = total bracelets = 15.\n\n5. Therefore the number of mixed‐bead bracelets is  \n   8 + 12 – 15 = 5.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Ashley is making bracelets for her friends for Valentine's Day. She has 4 types of beads: red, pink, white, and purple. She wants to make 15 bracelets, each with 10 beads. She has enough red and white beads to make 8 bracelets, and enough pink and purple beads to make 12 bracelets. How many bracelets does she make with a mix of red, white, pink, and purple beads?\n    \"\"\"\n    total_bracelets = 15\n    red_white_capacity = 8\n    pink_purple_capacity = 12\n\n    # Mixed bracelets = overlap of red/white group and pink/purple group\n    mixed_bracelets = red_white_capacity + pink_purple_capacity - total_bracelets\n\n    return float(mixed_bracelets)\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 21111
  },
  {
    "user": "On Monday, Jacob painted 6 walls and half as many on Tuesday. On Wednesday, Jacob painted three times as many walls as he did on Monday. How many walls did Jacob paint in the three days?",
    "assistant": "**Reasoning:**\n1. On Monday, Jacob painted 6 walls.  \n2. On Tuesday, he painted half as many as on Monday: that is \\(6 \\div 2 = 3\\) walls.  \n3. On Wednesday, he painted three times as many as on Monday: that is \\(3 \\times 6 = 18\\) walls.  \n4. To find the total number of walls painted over the three days, we add up Monday, Tuesday, and Wednesday:  \n   \\(6 + 3 + 18 = 27\\).\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    On Monday, Jacob painted 6 walls and half as many on Tuesday.\n    On Wednesday, Jacob painted three times as many walls as he did on Monday.\n    How many walls did Jacob paint in the three days?\n    \"\"\"\n    monday_walls = 6\n    tuesday_walls = monday_walls / 2\n    wednesday_walls = 3 * monday_walls\n\n    total_walls = monday_walls + tuesday_walls + wednesday_walls\n\n    return total_walls\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 33007
  },
  {
    "user": "A bus can transport 50 passengers to a destination. If there are 203 passengers to be transported, how many buses are required?",
    "assistant": "**Reasoning:**\n1. We know each bus can carry up to 50 passengers.\n2. We have a total of 203 passengers that need to be transported.\n3. Divide the total passengers by the bus capacity:  \n   203 ÷ 50 = 4 remainder 3.\n4. Since there is a remainder (3 passengers still unassigned), we need one additional bus.\n5. Total buses required = 4 (full buses) + 1 (for the remainder) = 5 buses.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A bus can transport 50 passengers to a destination. If there are 203 passengers to be transported, how many buses are required?\n    \"\"\"\n    capacity_per_bus = 50\n    total_passengers = 203\n\n    # How many full buses we can fill\n    full_buses = total_passengers // capacity_per_bus\n    # Any leftover passengers after filling the full buses\n    leftover_passengers = total_passengers % capacity_per_bus\n\n    # If there are leftover passengers, we need one more bus\n    if leftover_passengers > 0:\n        buses_required = full_buses + 1\n    else:\n        buses_required = full_buses\n\n    result = buses_required\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 5569
  },
  {
    "user": "Michael has been saving $70 in his bank account every month for six years. His colleague James has been saving 40% less than Michael's monthly savings. What is their collective savings total?",
    "assistant": "**Reasoning:**\n1. Michael saves \\$70 every month.\n2. He does this for six years, and since there are 12 months in a year, the total number of months is  \n   6 years × 12 months/year = 72 months.\n3. Michael’s total savings = monthly savings × total months = 70 × 72 = 5,040.\n4. James saves 40% less each month than Michael.  \n   40% of Michael’s \\$70 = 0.40 × 70 = 28.  \n   So James’s monthly savings = 70 − 28 = 42.\n5. James’s total savings = 42 × 72 = 3,024.\n6. Their collective savings total = Michael’s total + James’s total = 5,040 + 3,024 = 8,064.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Michael has been saving $70 in his bank account every month for six years. His colleague James has been saving 40% less than Michael's monthly savings. What is their collective savings total?\n    \"\"\"\n    # Michael's monthly savings\n    monthly_savings_michael = 70\n\n    # Total number of months in six years\n    years_saving = 6\n    months_per_year = 12\n    total_months = years_saving * months_per_year\n\n    # Michael's total savings over the period\n    total_savings_michael = monthly_savings_michael * total_months\n\n    # James saves 40% less than Michael each month\n    savings_reduction_rate = 0.40\n    monthly_savings_james = monthly_savings_michael * (1 - savings_reduction_rate)\n\n    # James's total savings over the same period\n    total_savings_james = monthly_savings_james * total_months\n\n    # Combined total savings\n    result = total_savings_michael + total_savings_james\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 30916
  },
  {
    "user": "Tom loves running in the morning to stay active. He runs for 10 minutes every day starting from Monday to Friday. He runs two minutes faster each day. How many minutes did he run in total in 5 days?",
    "assistant": "**Reasoning:**\n1. On Monday, Tom runs for 10 minutes.  \n2. Each subsequent day he runs 2 minutes more than the previous day.  \n3. Therefore:\n   - Monday: 10 minutes  \n   - Tuesday: 10 + 2 = 12 minutes  \n   - Wednesday: 12 + 2 = 14 minutes  \n   - Thursday: 14 + 2 = 16 minutes  \n   - Friday: 16 + 2 = 18 minutes  \n4. Sum these daily run times to get the total minutes over the 5 days:\n   10 + 12 + 14 + 16 + 18 = 70 minutes.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Tom loves running in the morning to stay active. He runs for 10 minutes every day starting from Monday to Friday. He runs two minutes faster each day. How many minutes did he run in total in 5 days?\n    \"\"\"\n    initial_run_time = 10\n    daily_increase = 2\n\n    monday_time = initial_run_time\n    tuesday_time = monday_time + daily_increase\n    wednesday_time = tuesday_time + daily_increase\n    thursday_time = wednesday_time + daily_increase\n    friday_time = thursday_time + daily_increase\n\n    total_run_time = (\n        monday_time\n        + tuesday_time\n        + wednesday_time\n        + thursday_time\n        + friday_time\n    )\n    return total_run_time\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 24855
  },
  {
    "user": "Student: Ernest has 80 chickens. He sells a quarter of them and 1/3 of what he has left. How many chickens does he have left?",
    "assistant": "**Reasoning:**\n1. Start with 80 chickens.  \n2. He sells a quarter of them: a quarter of 80 is 80 × (1/4) = 20.  \n3. After selling that quarter, he has 80 − 20 = 60 chickens remaining.  \n4. He then sells one third of the remaining 60: one third of 60 is 60 × (1/3) = 20.  \n5. After that sale, he has 60 − 20 = 40 chickens left.  \n\nTherefore, he has 40 chickens remaining.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Ernest has 80 chickens. He sells a quarter of them and 1/3 of what he has left. How many chickens does he have left?\n    \"\"\"\n    initial_chickens = 80\n    quarter_sold = initial_chickens / 4.0\n    remaining_after_quarter = initial_chickens - quarter_sold\n    third_sold = remaining_after_quarter / 3.0\n    final_remaining = remaining_after_quarter - third_sold\n    result = final_remaining\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 15724
  },
  {
    "user": "A triangle has a base of 10 cm and a height of 6 cm. What is the area of the triangle?",
    "assistant": "**Reasoning:**\n1. The formula for the area \\(A\\) of a triangle is:\n   A = ½ × base × height\n2. We are given:\n   - base = 10 cm\n   - height = 6 cm\n3. Plug these values into the formula:\n   A = ½ × 10 cm × 6 cm\n4. Compute step by step:\n   - First compute the product of base and height: 10 × 6 = 60\n   - Then multiply by ½: (1/2) × 60 = 30\n5. The area of the triangle is 30 square centimeters.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A triangle has a base of 10 cm and a height of 6 cm. What is the area of the triangle?\n    \"\"\"\n    base_cm = 10      # base of the triangle in centimeters\n    height_cm = 6     # height of the triangle in centimeters\n\n    # Area formula: (1/2) * base * height\n    area = 0.5 * base_cm * height_cm\n\n    return area\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 28399
  },
  {
    "user": "A store is having a sale where everything is 20% off. If a shirt originally costs $25, what is the sale price?",
    "assistant": "**Reasoning:**\n1. The original price of the shirt is \\$25.\n2. The discount rate is 20%, which as a decimal is 0.20.\n3. To find the amount of the discount, multiply the original price by the discount rate:  \n   discount_amount = 25 * 0.20\n4. Subtract the discount amount from the original price to get the sale price:  \n   sale_price = 25 - discount_amount\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A store is having a sale where everything is 20% off. \n    If a shirt originally costs $25, what is the sale price?\n    \"\"\"\n    original_price = 25.0\n    discount_rate = 0.20\n\n    # Calculate the discount amount\n    discount_amount = original_price * discount_rate\n\n    # Calculate the final sale price\n    sale_price = original_price - discount_amount\n\n    result = sale_price\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 19444
  },
  {
    "user": "Jane runs 6 kilometers every morning at a constant speed of 12 kilometers per hour. Her friend Mary runs the same distance but at a variable speed: she starts at 10 kilometers per hour and increases her speed by 1 kilometer per hour every kilometer. Calculate the difference, in minutes, between their finishing times.",
    "assistant": "**Reasoning:**\nJane’s time = 6 km ÷ 12 km/h = 0.5 h = 30 min  \nMary’s time = sum over each of the 6 km of (1 km ÷ speed) hours, with speeds 10, 11, 12, 13, 14, 15 km/h. Convert that total to minutes and subtract from Jane’s time.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Jane runs 6 kilometers every morning at a constant speed of 12 kilometers per hour. \n    Her friend Mary runs the same distance but at a variable speed: she starts at 10 kilometers \n    per hour and increases her speed by 1 kilometer per hour every kilometer. \n    Calculate the difference, in minutes, between their finishing times.\n    \"\"\"\n    # Jane's time in hours and then convert to minutes\n    jane_speed = 12.0  # km/h\n    distance = 6.0     # km\n    jane_time_h = distance / jane_speed\n    jane_time_min = jane_time_h * 60\n\n    # Mary's time: sum time for each kilometer at increasing speeds\n    base_speed = 10.0  # km/h\n    mary_time_h = 0.0\n    for i in range(6):\n        speed_i = base_speed + i\n        mary_time_h += 1.0 / speed_i\n\n    mary_time_min = mary_time_h * 60\n\n    # Difference in minutes\n    result = jane_time_min - mary_time_min\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 20947
  },
  {
    "user": "Student: Anna has $100 in her bank account. She withdrew $30 to buy a dress and $20 to buy shoes. She then deposited $50 from her birthday money. How much money does she have in her account now?",
    "assistant": "**Reasoning:**\n1. Start with Anna’s initial balance of \\$100.\n2. She withdraws \\$30 to buy a dress:\n   - New balance = 100 − 30 = 70\n3. She withdraws another \\$20 to buy shoes:\n   - New balance = 70 − 20 = 50\n4. She then deposits \\$50 from her birthday money:\n   - Final balance = 50 + 50 = 100\n\nAnna ends up with \\$100 in her account.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Student: Anna has $100 in her bank account. She withdrew $30 to buy a dress and $20 to buy shoes. She then deposited $50 from her birthday money. How much money does she have in her account now?\n    \"\"\"\n    initial_balance = 100.0\n    withdrawal_dress = 30.0\n    withdrawal_shoes = 20.0\n    deposit_birthday = 50.0\n\n    balance_after_dress = initial_balance - withdrawal_dress\n    balance_after_shoes = balance_after_dress - withdrawal_shoes\n    result = balance_after_shoes + deposit_birthday\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 28353
  },
  {
    "user": "Student: If there are 36 chairs in a room, and 3 are taken away, how many chairs are in the room?",
    "assistant": "**Reasoning:**\n1. Start with the total number of chairs in the room: 36.  \n2. Three chairs are taken away (removed) from the room.  \n3. To find the remaining chairs, subtract the number removed (3) from the original total (36).  \n4. 36 − 3 = 33, so there are 33 chairs left in the room.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    If there are 36 chairs in a room, and 3 are taken away, how many chairs are in the room?\n    \"\"\"\n    initial_chairs = 36\n    chairs_removed = 3\n    remaining_chairs = initial_chairs - chairs_removed\n    result = float(remaining_chairs)\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 24883
  },
  {
    "user": "David works at a car wash and earns variable amounts of tips each day. For the past four days, he earned $20, $25, $30, and $35. How much does he need to earn on the fifth day to average $28 per day?",
    "assistant": "**Reasoning:**\n1. We are given David’s tips for four days: \\$20, \\$25, \\$30, and \\$35.\n2. Let x be the amount he needs on the fifth day.\n3. The average over five days should be \\$28 per day.\n4. The formula for the average of five numbers is:\n   (day1 + day2 + day3 + day4 + day5) / 5 = 28\n5. Substitute the known values:\n   (20 + 25 + 30 + 35 + x) / 5 = 28\n6. Sum the known amounts:\n   20 + 25 + 30 + 35 = 110\n7. Thus:\n   (110 + x) / 5 = 28\n8. Multiply both sides by 5:\n   110 + x = 140\n9. Solve for x:\n   x = 140 - 110\n   x = 30\n\nDavid needs to earn \\$30 on the fifth day to average \\$28 per day.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    David works at a car wash and earns variable amounts of tips each day. \n    For the past four days, he earned $20, $25, $30, and $35. \n    How much does he need to earn on the fifth day to average $28 per day?\n    \"\"\"\n    day1 = 20\n    day2 = 25\n    day3 = 30\n    day4 = 35\n    target_average = 28\n    total_days = 5\n\n    # Sum of the first four days\n    sum_first_four = day1 + day2 + day3 + day4\n\n    # Compute the required fifth-day earnings\n    required_fifth_day = target_average * total_days - sum_first_four\n\n    result = required_fifth_day\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 13984
  },
  {
    "user": "Student: A recipe calls for 2 cups of flour and 1/4 cup of sugar to make 12 cookies. If John wants to make 48 cookies, how much flour and sugar does he need?",
    "assistant": "**Reasoning:**\nWe have a recipe that makes 12 cookies using 2 cups of flour and 1/4 cup of sugar. John wants to make 48 cookies.  \n1. Determine the scaling factor: 48 cookies ÷ 12 cookies = 4.  \n2. Multiply each ingredient by this factor:  \n   - Flour: 2 cups × 4 = 8 cups  \n   - Sugar: (1/4) cup × 4 = 1 cup  \n\n**Solution:**\n```python\ndef simple_math_problem() -> tuple:\n    \"\"\"\n    A recipe calls for 2 cups of flour and 1/4 cup of sugar to make 12 cookies. If John wants to make 48 cookies, how much flour and sugar does he need?\n    \"\"\"\n    # Original recipe amounts\n    original_flour_cups = 2\n    original_sugar_cups = 1/4\n    original_cookies = 12\n\n    # Desired number of cookies\n    target_cookies = 48\n\n    # Compute scaling factor\n    scale_factor = target_cookies / original_cookies\n\n    # Scale each ingredient\n    flour_needed = original_flour_cups * scale_factor\n    sugar_needed = original_sugar_cups * scale_factor\n\n    result = (flour_needed, sugar_needed)\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 4033
  },
  {
    "user": "If a fence that is 20 feet long can be painted by 4 people in 6 hours, how many people would it take to paint a fence that is 30 feet long in 8 hours?",
    "assistant": "**Reasoning:**\n\n1. First, determine how much work (in person-hours) it takes to paint the original 20-foot fence.  \n   - 4 people working for 6 hours produce \\(4 \\times 6 = 24\\) person-hours of work.  \n2. That 24 person-hours of work covers 20 feet, so the painting rate is  \n   \\[\n     \\frac{20\\text{ feet}}{24\\text{ person-hours}} = \\frac{5}{6}\\text{ feet per person-hour}.\n   \\]\n3. To paint a 30-foot fence at the same rate requires  \n   \\[\n     \\text{required person-hours} \n       = \\frac{30\\text{ feet}}{(5/6)\\text{ feet per person-hour}}\n       = 30 \\times \\frac{6}{5}\n       = 36\\text{ person-hours}.\n   \\]\n4. If we have 8 hours available, the number of people needed is  \n   \\[\n     \\frac{36\\text{ person-hours}}{8\\text{ hours}}\n     = 4.5\\text{ people}.\n   \\]\n\nTherefore, it would take 4.5 people (on average) to paint the 30-foot fence in 8 hours.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    If a fence that is 20 feet long can be painted by 4 people in 6 hours,\n    how many people would it take to paint a fence that is 30 feet long in 8 hours?\n    \"\"\"\n    # Given for the first fence\n    fence1_length = 20      # feet\n    people1 = 4             # people\n    time1 = 6               # hours\n\n    # Compute total person-hours needed for the first fence\n    person_hours1 = people1 * time1\n\n    # Rate of painting in feet per person-hour\n    rate_feet_per_person_hour = fence1_length / person_hours1\n\n    # For the second fence\n    fence2_length = 30      # feet\n    time2 = 8               # hours\n\n    # Total person-hours required for the second fence\n    required_person_hours2 = fence2_length / rate_feet_per_person_hour\n\n    # Number of people needed\n    result = required_person_hours2 / time2\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 11455
  },
  {
    "user": "Jenny wants to swim a total of five and two-thirds miles. One lap in a particular pool measures one-quarter of a mile around. How many complete laps must she swim?",
    "assistant": "**Reasoning:**\n\n1. Jenny needs to swim a total of \\(5\\frac{2}{3}\\) miles.  \n2. Convert \\(5\\frac{2}{3}\\) to an improper fraction:  \n   \\(5\\frac{2}{3} = \\frac{5\\times3 + 2}{3} = \\frac{17}{3}\\) miles.  \n3. Each lap is \\(\\tfrac{1}{4}\\) mile.  \n4. The exact number of laps required is  \n   \\[\n     \\frac{\\tfrac{17}{3}}{\\tfrac{1}{4}}\n     = \\frac{17}{3} \\times 4\n     = \\frac{68}{3}\n     = 22\\frac{2}{3}\\text{ laps}.\n   \\]\n5. Because she can only swim whole (complete) laps, she must round up to the next whole lap.  \n   \\(\\lceil 22\\frac{2}{3}\\rceil = 23\\).  \n\nTherefore, Jenny must swim **23 complete laps**.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Jenny wants to swim a total of five and two-thirds miles. One lap in a particular pool measures one-quarter of a mile around. How many complete laps must she swim?\n    \"\"\"\n    # Step 1: Convert 5 2/3 miles to a single number\n    whole_miles = 5\n    fraction_numerator = 2\n    fraction_denominator = 3\n    total_miles = whole_miles + fraction_numerator / fraction_denominator  # 5 + 2/3\n    \n    # Step 2: Define the length of one lap\n    lap_distance = 1 / 4  # 1/4 mile\n    \n    # Step 3: Compute the exact number of laps needed\n    exact_laps = total_miles / lap_distance  # (5 + 2/3) / (1/4) = 68/3\n    \n    # Step 4: Round up to the nearest whole lap since only complete laps count\n    import math\n    result = math.ceil(exact_laps)\n    \n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 12158
  },
  {
    "user": "A company produces 2000 bottles of juice. If 15% of the bottles are defective and need to be discarded, how many bottles are usable? If each usable bottle contains 500 ml of juice and all the usable juice is placed in 5-liter containers, how many containers will be filled?",
    "assistant": "**Reasoning:**\n\n1. Total bottles produced = 2000.  \n2. Defective rate = 15% = 0.15.  \n3. Number of defective bottles = 2000 * 0.15 = 300.  \n4. Usable bottles = 2000 – 300 = 1700.  \n5. Each usable bottle contains 500 ml, so total usable juice = 1700 * 500 ml = 850 000 ml.  \n6. Each container holds 5 liters = 5000 ml.  \n7. Number of full containers = 850 000 ml ÷ 5000 ml/container = 170 containers.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A company produces 2000 bottles of juice. If 15% of the bottles are defective and need to be discarded, how many bottles are usable? If each usable bottle contains 500 ml of juice and all the usable juice is placed in 5-liter containers, how many containers will be filled?\n    \"\"\"\n    total_bottles = 2000\n    defect_rate = 0.15\n    # Calculate defective bottles\n    defective_bottles = total_bottles * defect_rate\n    # Calculate usable bottles\n    usable_bottles = total_bottles - defective_bottles\n\n    juice_per_bottle_ml = 500\n    # Total usable juice in milliliters\n    total_usable_juice_ml = usable_bottles * juice_per_bottle_ml\n\n    container_capacity_ml = 5000  # 5 liters = 5000 ml\n    # Number of containers that can be filled\n    containers_filled = total_usable_juice_ml / container_capacity_ml\n\n    result = containers_filled\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 9918
  },
  {
    "user": "If a toy costs $50, and the sales tax is 7%, how much should you pay?",
    "assistant": "**Reasoning:**\n1. The toy’s base cost is \\$50.  \n2. The sales tax rate is 7%, which as a decimal is 0.07.  \n3. Calculate the sales tax amount:  \n   sales_tax = 50 * 0.07 = 3.5  \n4. Add the sales tax to the base cost to get the total amount:  \n   total_cost = 50 + 3.5 = 53.5  \n5. Therefore, you should pay \\$53.50.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    If a toy costs $50, and the sales tax is 7%, how much should you pay?\n    \"\"\"\n    cost_of_toy = 50\n    tax_rate = 0.07\n    sales_tax = cost_of_toy * tax_rate\n    total_cost = cost_of_toy + sales_tax\n    result = total_cost\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 17110
  },
  {
    "user": "Possible additional questions and programs are: A school is hosting a bake sale to raise money for a field trip. They are selling cupcakes, brownies, and cookies. The cupcakes cost 50 cents each, the brownies cost 75 cents each, and the cookies cost 25 cents each. They sold 60 cupcakes, 40 brownies, and 80 cookies. How many dollars did the school earn from the bake sale?",
    "assistant": "**Reasoning:**\n1. Identify the unit prices and quantities:\n   - Cupcakes: \\$0.50 each, 60 sold\n   - Brownies: \\$0.75 each, 40 sold\n   - Cookies: \\$0.25 each, 80 sold\n2. Compute revenue for each item by multiplying unit price by quantity sold.\n3. Sum the revenues to get the total earnings in dollars.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A school is hosting a bake sale to raise money for a field trip. They are selling cupcakes, brownies, and cookies. The cupcakes cost 50 cents each, the brownies cost 75 cents each, and the cookies cost 25 cents each. They sold 60 cupcakes, 40 brownies, and 80 cookies. How many dollars did the school earn from the bake sale?\n    \"\"\"\n    price_per_cupcake = 0.50\n    price_per_brownie = 0.75\n    price_per_cookie = 0.25\n\n    number_of_cupcakes_sold = 60\n    number_of_brownies_sold = 40\n    number_of_cookies_sold = 80\n\n    revenue_cupcakes = price_per_cupcake * number_of_cupcakes_sold\n    revenue_brownies = price_per_brownie * number_of_brownies_sold\n    revenue_cookies = price_per_cookie * number_of_cookies_sold\n\n    result = revenue_cupcakes + revenue_brownies + revenue_cookies\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 6737
  },
  {
    "user": "Student: The Fluffy Pretty Pets store received a shipment of 60 pet food containers. The store had twice as many cat containers as bird containers, and one-third of the amount of fish containers as cat containers. How many bird containers did the Fluffy Pretty Pets store receive?",
    "assistant": "**Reasoning:**\n1. Let B = number of bird containers, C = number of cat containers, and F = number of fish containers.\n2. We are told:\n   - C = 2 B  (twice as many cat containers as bird containers)\n   - F = C⁄3 (one-third as many fish containers as cat containers)\n3. The total number of containers is  \n   B + C + F = 60.\n4. Substitute C and F in terms of B:\n   - C = 2B\n   - F = (1/3)·C = (1/3)·(2B) = 2B/3\n5. So  \n   B + 2B + 2B/3 = 60  \n   Combine like terms:  \n   (1 + 2 + 2/3)·B = (3 + 2/3)·B = (11/3)·B = 60  \n6. Solve for B:  \n   B = 60 · (3/11) = 180/11 ≈ 16.3636  \n\nTherefore, the store received 180/11 (approximately 16.36) bird containers.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    The Fluffy Pretty Pets store received a shipment of 60 pet food containers. \n    The store had twice as many cat containers as bird containers, \n    and one-third of the amount of fish containers as cat containers. \n    How many bird containers did the Fluffy Pretty Pets store receive?\n    \"\"\"\n    total_containers = 60\n    # Let B = bird_containers\n    # Cat containers are twice the bird containers\n    ratio_cat_to_bird = 2\n    # Fish containers are one-third of the cat containers\n    ratio_fish_to_cat = 1 / 3\n\n    # If B is the number of bird containers, then\n    # C = ratio_cat_to_bird * B\n    # F = ratio_fish_to_cat * C = ratio_fish_to_cat * (ratio_cat_to_bird * B)\n    # Total = B + C + F = B + 2B + (1/3)*(2B) = B * (1 + 2 + 2/3) = B * (11/3)\n    # So B = total_containers / (11/3)\n    bird_containers = total_containers * 3 / 11\n\n    result = bird_containers\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 17473
  },
  {
    "user": "If you subtract 15 from the age of Alice and then multiply the result by 6, you get 1 more than five times the age of her grandmother. If Alice is 30 years old, how old is her grandmother?",
    "assistant": "**Reasoning:**\n1. We are told: “If you subtract 15 from the age of Alice and then multiply the result by 6, you get 1 more than five times the age of her grandmother.”\n2. Let Alice’s age be A and grandmother’s age be G.\n3. Subtracting 15 from Alice’s age gives A – 15.\n4. Multiplying that result by 6 gives 6·(A – 15).\n5. That is equal to “1 more than five times grandmother’s age”, i.e. 5·G + 1.\n6. Hence the equation is:  \n   6·(A – 15) = 5·G + 1\n7. We are given A = 30, so substitute:  \n   6·(30 – 15) = 5·G + 1  \n   6·15 = 5·G + 1  \n   90 = 5·G + 1  \n8. Solve for G:  \n   5·G = 90 – 1  \n   5·G = 89  \n   G = 89 / 5  \n   G = 17.8\n\nTherefore, the grandmother’s age is 17.8 years.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    If you subtract 15 from the age of Alice and then multiply the result by 6,\n    you get 1 more than five times the age of her grandmother.\n    If Alice is 30 years old, how old is her grandmother?\n    \"\"\"\n    # Given data\n    alice_age = 30\n    \n    # Subtract 15 from Alice's age\n    alice_minus_fifteen = alice_age - 15\n    \n    # Multiply the result by 6\n    left_side = alice_minus_fifteen * 6\n    \n    # According to the problem, this equals 1 more than 5 times grandmother's age:\n    # left_side = 5 * grandmother_age + 1\n    # Solve for grandmother_age:\n    grandmother_age = (left_side - 1) / 5\n    \n    result = grandmother_age\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 18060
  },
  {
    "user": "Paul works 11 hours each Wednesday and Thursday and gets paid $46 an hour. How much does he make in a 47 day month?",
    "assistant": "**Reasoning:**\n\n1. Paul works 11 hours each Wednesday and 11 hours each Thursday, so in one full week he works  \n   11 + 11 = 22 hours.  \n2. He is paid \\$46 per hour, so in one full week he earns  \n   22 hours × \\$46/hour = \\$1,012.  \n3. A 47-day month consists of 47 ÷ 7 = 6 full weeks and 5 extra days.  \n4. In 6 full weeks he works 6 × 2 = 12 days (Wednesday & Thursday each week).  \n5. For the 5 extra days, if we assume the month starts on a Wednesday, those extra days are  \n   Wednesday, Thursday, Friday, Saturday, Sunday — which includes 2 more workdays.  \n6. Total workdays = 12 (from full weeks) + 2 (from extra days) = 14 days.  \n7. Total hours = 14 days × 11 hours/day = 154 hours.  \n8. Total pay = 154 hours × \\$46/hour = \\$7,084.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Paul works 11 hours each Wednesday and Thursday and gets paid $46 an hour. How much does he make in a 47 day month?\n    \"\"\"\n    hours_per_workday = 11\n    hourly_rate = 46\n    days_in_month = 47\n    days_in_week = 7\n    workdays_per_week = 2\n\n    # How many full weeks and extra days in 47 days\n    full_weeks = days_in_month // days_in_week      # 6 full weeks\n    extra_days = days_in_month % days_in_week       # 5 extra days\n\n    # Assuming the month starts on a Wednesday, the first two of those extra days\n    # are Wednesday and Thursday, so he works on both.\n    extra_workdays = min(extra_days, workdays_per_week)\n\n    total_workdays = full_weeks * workdays_per_week + extra_workdays\n    total_hours = total_workdays * hours_per_workday\n    result = total_hours * hourly_rate\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 14538
  },
  {
    "user": "A school has 240 students. If 60% of the students are girls, how many boys are there in the school?",
    "assistant": "**Reasoning:**\n1. The problem states there are a total of 240 students.\n2. 60% of these students are girls.\n3. To find the number of girls:\n   - Convert 60% to a decimal: 60% = 0.60\n   - Multiply by the total number of students: 0.60 × 240 = 144 girls.\n4. The number of boys is the remainder when the number of girls is subtracted from the total:\n   - Boys = 240 − 144 = 96.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A school has 240 students. If 60% of the students are girls, how many boys are there in the school?\n    \"\"\"\n    total_students = 240\n    percentage_girls = 60\n    \n    # Calculate the number of girls\n    number_of_girls = total_students * (percentage_girls / 100)\n    \n    # Calculate the number of boys\n    number_of_boys = total_students - number_of_girls\n    \n    result = number_of_boys\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 40620
  },
  {
    "user": "A construction worker needs to lay 500 bricks every day. He has already laid one wall that had 240 bricks and another wall that was half as big. How many 50-brick walls does he need to lay to reach his daily total?",
    "assistant": "**Reasoning:**\n1. The worker needs to lay a total of 500 bricks today.  \n2. He’s already laid one wall of 240 bricks.  \n3. The second wall is half as big, so it uses 240 / 2 = 120 bricks.  \n4. Together, he has laid 240 + 120 = 360 bricks so far.  \n5. Bricks remaining to reach 500: 500 − 360 = 140 bricks.  \n6. Each new wall uses 50 bricks.  \n7. Dividing the remaining bricks by 50 gives 140 / 50 = 2.8 walls.  \n8. Since he can’t lay a fraction of a wall, he would need to lay 3 walls to meet or exceed the daily requirement.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A construction worker needs to lay 500 bricks every day. He has already laid one wall that had 240 bricks and another wall that was half as big. How many 50-brick walls does he need to lay to reach his daily total?\n    \"\"\"\n    # Total bricks required for the day\n    total_bricks_required = 500\n\n    # Bricks in the first wall\n    bricks_first_wall = 240\n\n    # Bricks in the second wall (half as big as the first)\n    bricks_second_wall = bricks_first_wall / 2\n\n    # Total bricks laid so far\n    bricks_laid = bricks_first_wall + bricks_second_wall\n\n    # Bricks still needed to reach the daily total\n    bricks_remaining = total_bricks_required - bricks_laid\n\n    # Number of bricks per new wall\n    bricks_per_wall = 50\n\n    # How many 50-brick walls are needed\n    walls_needed = bricks_remaining / bricks_per_wall  # yields 2.8\n\n    return walls_needed\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 1691
  },
  {
    "user": "2. Sam brought 15 bags of square balloons with 30 balloons in each bag. He also brought 3 bags of long balloons with 40 balloons in each bag. After the event was over, 10 square balloons were left over. How many balloons did he have in total to start?",
    "assistant": "**Reasoning:**\n1. First, compute how many square balloons Sam initially brought:\n   - He had 15 bags, each containing 30 square balloons.\n   - Total square balloons = 15 * 30 = 450.\n2. Next, compute how many long balloons he brought:\n   - He had 3 bags, each containing 40 long balloons.\n   - Total long balloons = 3 * 40 = 120.\n3. The 10 square balloons left over at the end do not affect how many he started with.\n4. Therefore, the total number of balloons he had at the start is:\n   450 (square) + 120 (long) = 570.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    2. Sam brought 15 bags of square balloons with 30 balloons in each bag. He also brought 3 bags of long balloons with 40 balloons in each bag. After the event was over, 10 square balloons were left over. How many balloons did he have in total to start?\n    \"\"\"\n    num_bags_square = 15\n    balloons_per_square_bag = 30\n    num_bags_long = 3\n    balloons_per_long_bag = 40\n    leftover_square = 10  # not needed for the starting total\n\n    total_square = num_bags_square * balloons_per_square_bag\n    total_long = num_bags_long * balloons_per_long_bag\n    result = total_square + total_long\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 32579
  },
  {
    "user": "Sarah received 60 cents from her mother and 50 cents from her father for doing well in school. She spent 35 cents on a snack and found 15 cents on the street. Her sister gave her another 25 cents. How much money does Sarah have now?",
    "assistant": "**Reasoning:**\n\n1. Sarah gets 60 cents from her mother and 50 cents from her father.  \n2. Her total after those gifts is 0.60 + 0.50 = 1.10 dollars.  \n3. She spends 35 cents (0.35), so her balance becomes 1.10 – 0.35 = 0.75 dollars.  \n4. She finds 15 cents (0.15), bringing her up to 0.75 + 0.15 = 0.90 dollars.  \n5. Finally, her sister gives her 25 cents (0.25), so her final total is 0.90 + 0.25 = 1.15 dollars.  \n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Sarah received 60 cents from her mother and 50 cents from her father for doing well in school. She spent 35 cents on a snack and found 15 cents on the street. Her sister gave her another 25 cents. How much money does Sarah have now?\n    \"\"\"\n    # Step 1: Money received\n    money_from_mother = 0.60\n    money_from_father = 0.50\n\n    # Total after receiving gifts\n    total_after_gifts = money_from_mother + money_from_father  # 1.10\n\n    # Step 2: Spend on snack\n    snack_cost = 0.35\n    total_after_snack = total_after_gifts - snack_cost         # 0.75\n\n    # Step 3: Found money\n    found_money = 0.15\n    total_after_finding = total_after_snack + found_money     # 0.90\n\n    # Step 4: Sister's gift\n    sister_gift = 0.25\n    result = total_after_finding + sister_gift                # 1.15\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 23194
  },
  {
    "user": "Rebecca is planning an outdoor movie night. She has received 6 coupons, each of which is good for $15 off the cost of renting a movie projector. How much money will she save?",
    "assistant": "**Reasoning:**\n1. Identify the number of coupons Rebecca has received.  \n2. Identify the discount value of each coupon.  \n3. Multiply the number of coupons by the discount per coupon to get the total savings.\n\nHere:\n- Number of coupons = 6  \n- Discount per coupon = \\$15  \n- Total savings = 6 * 15 = \\$90  \n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Rebecca is planning an outdoor movie night. She has received 6 coupons, each of which is good for $15 off the cost of renting a movie projector. How much money will she save?\n    \"\"\"\n    number_of_coupons = 6\n    discount_per_coupon = 15\n    total_savings = number_of_coupons * discount_per_coupon\n    result = total_savings\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 3359
  },
  {
    "user": "A rectangle has a width of 12 cm and a length of 20 cm. What is the area of the rectangle?",
    "assistant": "**Reasoning:**\n1. The area \\(A\\) of a rectangle is given by the product of its width and its length:  \n   \\(A = \\text{width} \\times \\text{length}\\).\n2. In this problem, the width is 12 cm and the length is 20 cm.\n3. Multiply 12 cm by 20 cm to get the area in square centimeters:  \n   \\(A = 12 \\times 20 = 240\\).\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A rectangle has a width of 12 cm and a length of 20 cm. What is the area of the rectangle?\n    \"\"\"\n    width_cm = 12\n    length_cm = 20\n\n    # Calculate the area of the rectangle\n    result = width_cm * length_cm\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 10300
  },
  {
    "user": "A survey was conducted on 500 people. If 55% of them are males and 65% of them are above the age of 35, what is the maximum number of males under the age of 35 that can be in the survey?",
    "assistant": "**Reasoning:**\n\n1. Total people surveyed = 500.  \n2. 55% of them are male ⇒ number of males = 0.55 × 500 = 275.  \n3. 65% of them are above age 35 ⇒ number above 35 = 0.65 × 500 = 325.  \n4. Therefore, number under 35 = 500 − 325 = 175.  \n5. We want the maximum possible number of males under 35.  That is the size of the intersection of “male” (275) and “under 35” (175).  \n6. The maximum intersection occurs when as many under‐35 people as possible are male, i.e. the intersection size = min(275, 175) = 175.  \n\nSo the maximum number of males under 35 is 175.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A survey was conducted on 500 people. If 55% of them are males and 65% of them are above the age of 35, what is the maximum number of males under the age of 35 that can be in the survey?\n    \"\"\"\n    total_people = 500\n    percent_males = 0.55\n    percent_above_35 = 0.65\n\n    # Calculate counts\n    num_males = percent_males * total_people\n    num_under_35 = (1 - percent_above_35) * total_people\n\n    # Maximum number of males under 35 is the minimum of the two groups\n    result = min(num_males, num_under_35)\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 35483
  },
  {
    "user": "Jeff made 5 pies. Each pie is divided into 8 slices. He gave away 2 slices of each pie. How many slices did Jeff give away?",
    "assistant": "**Reasoning:**\n1. Identify how many pies Jeff made: 5 pies.  \n2. Determine how many slices each pie has: 8 slices per pie.  \n3. Determine how many slices Jeff gave away from each pie: 2 slices per pie.  \n4. Since he gave away 2 slices from each of the 5 pies, multiply the number of pies by the slices given away per pie:  \n   total slices given away = 5 pies * 2 slices/pie = 10 slices.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Jeff made 5 pies. Each pie is divided into 8 slices. He gave away 2 slices of each pie. How many slices did Jeff give away?\n    \"\"\"\n    # Number of pies Jeff made\n    number_of_pies = 5\n\n    # Number of slices in each pie\n    slices_per_pie = 8\n\n    # Number of slices given away from each pie\n    slices_given_away_per_pie = 2\n\n    # Calculate the total slices given away\n    total_slices_given_away = number_of_pies * slices_given_away_per_pie\n\n    # The result is how many slices were given away in total\n    result = total_slices_given_away\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 6794
  },
  {
    "user": "Rachel has 90 pieces of jewelry, and she wants to divide them among 7 of her friends. How many pieces of jewelry will each friend get?",
    "assistant": "**Reasoning:**\n1. We have a total of 90 pieces of jewelry.\n2. We want to divide these pieces evenly among 7 friends.\n3. To find out how many pieces each friend gets, we divide the total pieces by the number of friends.\n4. So we compute 90 ÷ 7 ≈ 12.857142857142858.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Rachel has 90 pieces of jewelry, and she wants to divide them among 7 of her friends. How many pieces of jewelry will each friend get?\n    \"\"\"\n    total_jewelry = 90\n    number_of_friends = 7\n\n    # Calculate how many pieces each friend gets\n    jewelry_per_friend = total_jewelry / number_of_friends\n\n    result = jewelry_per_friend\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 26431
  },
  {
    "user": "Student: A train travels a distance of 575 km in 5 hours. What is its average speed in meters per second?",
    "assistant": "**Reasoning:**\n\n1. We are given a distance of 575 km and a time of 5 hours.\n2. To find the average speed in meters per second, we first convert the distance from kilometers to meters:\n   - 1 km = 1000 m, so 575 km = 575 × 1000 = 575 000 m.\n3. Next, we convert the time from hours to seconds:\n   - 1 hour = 3600 s, so 5 hours = 5 × 3600 = 18 000 s.\n4. Finally, average speed = total distance (m) ÷ total time (s) = 575 000 m ÷ 18 000 s ≈ 31.944444… m/s.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A train travels a distance of 575 km in 5 hours. What is its average speed in meters per second?\n    \"\"\"\n    # Given values\n    distance_kilometers = 575\n    time_hours = 5\n\n    # Convert distance to meters\n    distance_meters = distance_kilometers * 1000  # 575 km -> 575000 m\n\n    # Convert time to seconds\n    time_seconds = time_hours * 3600  # 5 hours -> 18000 s\n\n    # Compute average speed in m/s\n    result = distance_meters / time_seconds\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 24814
  },
  {
    "user": "Mia and Lena are twins. Their mother is 40 years old. Their grandfather is three times as old as their mother. If their grandfather is 120, how old are Mia and Lena?",
    "assistant": "**Reasoning:**\n\n1. Let M be the mother’s age. We are told M = 40.  \n2. The grandfather’s age is three times the mother’s, so it should be 3 × 40 = 120.  \n3. That matches the given grandfather’s age of 120, so the data is consistent.  \n4. No information is provided about Mia and Lena’s ages or any relationship between their ages and the others’.  \n5. Therefore, with the given information alone, Mia and Lena’s ages cannot be determined (there are infinitely many possibilities).\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Mia and Lena are twins. Their mother is 40 years old. Their grandfather is three times as old as their mother. If their grandfather is 120, how old are Mia and Lena?\n    \"\"\"\n    # Given data\n    mother_age = 40\n    grandfather_age_by_relation = 3 * mother_age\n    grandfather_age_given = 120\n\n    # Check consistency\n    if grandfather_age_by_relation != grandfather_age_given:\n        raise ValueError(\"Inconsistent grandfather age based on the relation and given data.\")\n\n    # No information is provided to compute the twins' ages\n    result = float('nan')  # Not enough information to determine Mia and Lena's ages\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 31076
  },
  {
    "user": "Jen worked 275 hours last month. If her rate is $25 per hour, what is her gross pay for that number of hours?",
    "assistant": "**Reasoning:**\n1. Identify the number of hours Jen worked last month: 275 hours.  \n2. Identify Jen’s hourly rate: \\$25 per hour.  \n3. To find the gross pay, multiply the hours worked by the hourly rate:  \n   gross pay = 275 hours × \\$25/hour = \\$6,875.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Jen worked 275 hours last month. If her rate is $25 per hour, what is her gross pay for that number of hours?\n    \"\"\"\n    hours_worked = 275       # number of hours Jen worked last month\n    hourly_rate = 25         # Jen’s rate in dollars per hour\n\n    result = hours_worked * hourly_rate  # calculate gross pay\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 11334
  },
  {
    "user": "In a group of 25 people, 10 are men and 15 are women. What percentage of the group are women?",
    "assistant": "**Reasoning:**\n\n1. We are given that there are 25 people in total.\n2. Out of those, 15 are women.\n3. To find the percentage of the group that are women, we divide the number of women by the total number of people and then multiply by 100.\n4. Calculation: (number_of_women / total_people) * 100 = (15 / 25) * 100 = 0.6 * 100 = 60.\n\nTherefore, 60% of the group are women.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    In a group of 25 people, 10 are men and 15 are women. What percentage of the group are women?\n    \"\"\"\n    total_people = 25\n    num_women = 15\n\n    # Calculate the percentage of women\n    percentage_women = (num_women / total_people) * 100\n\n    return percentage_women\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 7568
  },
  {
    "user": "A movie theater increased the price of a ticket by $1.25 every year. If the price in 2013 was $10, what was the price in 2020?",
    "assistant": "**Reasoning:**\n- We know the price in 2013 was \\$10.  \n- Every year the ticket price increases by \\$1.25.  \n- We need the price in 2020, which is 7 years after 2013 (2020 − 2013 = 7).  \n- The total increase over 7 years is 7 × \\$1.25 = \\$8.75.  \n- Add that increase to the 2013 price: \\$10 + \\$8.75 = \\$18.75.  \n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A movie theater increased the price of a ticket by $1.25 every year. If the price in 2013 was $10, what was the price in 2020?\n    \"\"\"\n    initial_year = 2013\n    target_year = 2020\n    price_2013 = 10.0\n    increase_per_year = 1.25\n\n    years_passed = target_year - initial_year\n    total_increase = years_passed * increase_per_year\n    result = price_2013 + total_increase\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 26695
  },
  {
    "user": "Isabel can make 18 batches of muffin with 2 kilograms of butter. If she uses 6 kilograms of butter per day, how many batches can she make in a week?",
    "assistant": "**Reasoning:**\n\n1. We know that 2 kilograms of butter yields 18 batches of muffins.\n2. First, find how many batches can be made per kilogram of butter:\n   batches_per_kg = 18 batches ÷ 2 kg = 9 batches/kg.\n3. Isabel uses 6 kilograms of butter each day. So the number of batches per day is:\n   batches_per_day = 9 batches/kg × 6 kg = 54 batches/day.\n4. A week has 7 days, so the total number of batches she can make in a week is:\n   weekly_batches = 54 batches/day × 7 days = 378 batches.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Isabel can make 18 batches of muffin with 2 kilograms of butter. If she uses 6 kilograms of butter per day, how many batches can she make in a week?\n    \"\"\"\n    butter_for_initial_batches = 2           # kg of butter yields the initial batches\n    initial_batches = 18                     # batches from the initial butter\n    batches_per_kg = initial_batches / butter_for_initial_batches\n\n    daily_butter_usage = 6                   # kg of butter used per day\n    batches_per_day = batches_per_kg * daily_butter_usage\n\n    days_in_week = 7\n    weekly_batches = batches_per_day * days_in_week\n\n    result = weekly_batches\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 25051
  },
  {
    "user": "A gym has a container of 100 protein powder servings that only one person uses. Bob wants to play a prank on his friend by replacing the powder with a similar-looking, but sweetened and sugary drink mix. Every day after his friend works out, Bob replaces 2 servings of the protein powder with 1 serving of the drink mix. After 10 days, what percentage of the container is the sugary drink mix?",
    "assistant": "**Reasoning:**\n\nWe have a container initially holding 100 servings of pure protein powder (so 0 servings of sugary drink mix). After each workout session (for 10 days), Bob does the following:\n\n1. He removes 2 servings of whatever mixture is currently in the container.  \n   - Since the container is a mixture of protein powder and sugary mix, the amount of sugary mix removed is  \n     removed_sugar = (current_sugar_servings / current_total_servings) * 2.  \n   - We subtract that from the current sugar amount, and also subtract 2 from the total volume.\n\n2. He then adds 1 serving of pure sugary drink mix (no protein powder).  \n   - We add 1 to the sugar amount and add 1 to the total volume.\n\nWe repeat this process for 10 days. At the end, the container has some total volume (it will have shrunk by 1 serving each day, so it will be 90 servings total) and some amount of sugary mix. We compute the percentage of the container’s contents that is the sugary mix as\n\n    (sugar_servings / total_servings) * 100.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A gym has a container of 100 protein powder servings that only one person uses. Bob wants to play a prank on his friend by replacing the powder with a similar-looking, but sweetened and sugary drink mix. Every day after his friend works out, Bob replaces 2 servings of the protein powder with 1 serving of the drink mix. After 10 days, what percentage of the container is the sugary drink mix?\n    \"\"\"\n    # initial amounts\n    total_servings = 100.0\n    sugar_servings = 0.0\n    days = 10\n\n    # simulate each day's removal and addition\n    for _ in range(days):\n        # remove 2 servings of mixture (takes sugar proportionally)\n        removed_sugar = (sugar_servings / total_servings) * 2\n        sugar_servings -= removed_sugar\n        total_servings -= 2\n\n        # add 1 serving of pure sugar mix\n        sugar_servings += 1.0\n        total_servings += 1.0\n\n    # compute final percentage of sugary mix\n    result = (sugar_servings / total_servings) * 100\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 10620
  },
  {
    "user": "A baker needs to make 80 cupcakes. Each cupcake requires 1/2 a cup of flour. How many cups of flour does the baker need?",
    "assistant": "**Reasoning:**\n1. We know the baker has to make a total of 80 cupcakes.\n2. Each cupcake requires 1/2 cup of flour.\n3. To find the total amount of flour needed, multiply the number of cupcakes by the flour needed per cupcake:\n   total_flour = number_of_cupcakes * flour_per_cupcake\n4. Substitute the known values:\n   total_flour = 80 * (1/2)\n5. Compute the multiplication:\n   total_flour = 40 cups\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A baker needs to make 80 cupcakes. Each cupcake requires 1/2 a cup of flour. How many cups of flour does the baker need?\n    \"\"\"\n    # Number of cupcakes to bake\n    number_of_cupcakes = 80\n    # Flour required for each cupcake (in cups)\n    flour_per_cupcake = 1 / 2\n    # Total flour needed (in cups)\n    total_flour_needed = number_of_cupcakes * flour_per_cupcake\n\n    return total_flour_needed\n\n# Example usage:\n# print(simple_math_problem())  # This will output: 40.0\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 26153
  },
  {
    "user": "- Every year, 15,000 students take the SAT exam in Singapore. Of those 15,000 students, 40% score above 1500, which qualifies them for a scholarship to Stanford University. However, only 10% of the qualified students actually apply to Stanford, and only 20% of the applicants are admitted. How many students from Singapore enroll in Stanford University each year?",
    "assistant": "**Reasoning:**\n\n1. Start with the total number of students taking the SAT in Singapore each year: 15,000.  \n2. Compute how many of those score above 1500 (40%):  \n   qualified_students = 15,000 * 0.40 = 6,000  \n3. Of those qualified, only 10% actually apply to Stanford:  \n   applicants = 6,000 * 0.10 = 600  \n4. Out of the applicants, 20% are admitted:  \n   admitted_students = 600 * 0.20 = 120  \n5. Therefore, 120 students from Singapore enroll at Stanford University each year.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    - Every year, 15,000 students take the SAT exam in Singapore. Of those 15,000 students, 40% score above 1500, which qualifies them for a scholarship to Stanford University. However, only 10% of the qualified students actually apply to Stanford, and only 20% of the applicants are admitted. How many students from Singapore enroll in Stanford University each year?\n    \"\"\"\n    total_students = 15000\n    percentage_scoring_above_1500 = 0.40\n    percentage_applying = 0.10\n    percentage_admitted = 0.20\n\n    qualified_students = total_students * percentage_scoring_above_1500\n    applicants = qualified_students * percentage_applying\n    admitted_students = applicants * percentage_admitted\n\n    result = admitted_students\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 26659
  },
  {
    "user": "A farmer has two fields of wheat, one large and one small. The large field has an area of 60 acres and the small field has an area of 20 acres. The farmer expects to harvest 25 bushels of wheat per acre from the large field and 35 bushels of wheat per acre from the small field. However, a storm damages 10% of the wheat in the large field and 5% of the wheat in the small field. How many bushels of wheat does the farmer lose due to the storm?",
    "assistant": "**Reasoning:**\n1. Calculate the total expected harvest from each field before the storm:\n   - Large field: 60 acres × 25 bushels/acre = 1500 bushels\n   - Small field: 20 acres × 35 bushels/acre = 700 bushels\n2. Determine the amount lost in each field due to storm damage:\n   - Large field loss: 10% of 1500 = 0.10 × 1500 = 150 bushels\n   - Small field loss: 5% of 700 = 0.05 × 700 = 35 bushels\n3. Sum the losses from both fields:\n   - Total loss = 150 + 35 = 185 bushels\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A farmer has two fields of wheat, one large and one small. The large field has an area of 60 acres and the small field has an area of 20 acres. The farmer expects to harvest 25 bushels of wheat per acre from the large field and 35 bushels of wheat per acre from the small field. However, a storm damages 10% of the wheat in the large field and 5% of the wheat in the small field. How many bushels of wheat does the farmer lose due to the storm?\n    \"\"\"\n    # Areas of the fields in acres\n    large_field_area = 60\n    small_field_area = 20\n\n    # Expected yield per acre in bushels\n    yield_per_acre_large = 25\n    yield_per_acre_small = 35\n\n    # Damage rates due to the storm\n    damage_rate_large = 0.10\n    damage_rate_small = 0.05\n\n    # Total expected harvest before storm\n    total_harvest_large = large_field_area * yield_per_acre_large\n    total_harvest_small = small_field_area * yield_per_acre_small\n\n    # Bushels lost due to storm damage\n    lost_large = total_harvest_large * damage_rate_large\n    lost_small = total_harvest_small * damage_rate_small\n\n    # Total bushels lost\n    result = lost_large + lost_small\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 31522
  },
  {
    "user": "Carla decided to start a collection of figurines. She spent the same amount of money on the first 9 figurines and the total amount spent was $225. The next figurine was 60% more expensive than the first nine. How much did all the figurines cost?",
    "assistant": "**Reasoning:**\n\n1. We know Carla spent a total of \\$225 on the first 9 figurines, and each of those 9 cost the same amount.\n2. To find the cost of each of the first 9 figurines, divide the total \\$225 by 9:\n   cost_per_figurine = 225 / 9 = \\$25.\n3. The next (10th) figurine was 60% more expensive than each of the first nine. \n   “60% more expensive” means the cost is 100% + 60% = 160% of the original price:\n   cost_of_10th = 25 × 1.60 = \\$40.\n4. Finally, to get the total spent on all figurines (the first nine plus the tenth), add:\n   total_cost = 225 + 40 = \\$265.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Carla decided to start a collection of figurines. She spent the same amount of money on the first 9 figurines and the total amount spent was $225. The next figurine was 60% more expensive than the first nine. How much did all the figurines cost?\n    \"\"\"\n    total_spent_first_nine = 225.0\n    number_of_first_nine = 9\n    cost_per_figurine = total_spent_first_nine / number_of_first_nine\n\n    increase_rate = 0.60\n    cost_of_tenth_figurine = cost_per_figurine * (1 + increase_rate)\n\n    result = total_spent_first_nine + cost_of_tenth_figurine\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 21693
  },
  {
    "user": "In Seoul, there are 5 million people and 65% of them are of working age. If 50% of the working age population are employed and 75% of them are satisfied with their jobs, how many people in Seoul are satisfied with their jobs?",
    "assistant": "**Reasoning:**\n\n1. Total population in Seoul = 5,000,000  \n2. Percentage of working-age population = 65%  \n   → Working-age population = 0.65 × 5,000,000 = 3,250,000  \n3. Percentage of working-age population that are employed = 50%  \n   → Employed population = 0.50 × 3,250,000 = 1,625,000  \n4. Percentage of employed population that are satisfied = 75%  \n   → Satisfied population = 0.75 × 1,625,000 = 1,218,750  \n\nTherefore, 1,218,750 people in Seoul are satisfied with their jobs.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    In Seoul, there are 5 million people and 65% of them are of working age. \n    If 50% of the working age population are employed and 75% of them are satisfied \n    with their jobs, how many people in Seoul are satisfied with their jobs?\n    \"\"\"\n    # Total population in Seoul\n    total_population = 5_000_000.0\n    \n    # Fraction of population that is of working age\n    working_age_percentage = 0.65\n    working_age_population = working_age_percentage * total_population\n    \n    # Fraction of working-age population that are employed\n    employment_rate = 0.50\n    employed_population = employment_rate * working_age_population\n    \n    # Fraction of employed population that are satisfied with their jobs\n    satisfaction_rate = 0.75\n    satisfied_population = satisfaction_rate * employed_population\n    \n    result = satisfied_population\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 157
  },
  {
    "user": "9. Julian scored 882 points over the entire season. There were 24 games over the season. He averaged 3 two-point baskets per game, and 5 free throws (worth one point). How many three-point baskets did he average a game?",
    "assistant": "**Reasoning:**\n\n1. Total points scored in the season: 882.  \n2. Number of games in the season: 24.  \n3. Per game, Julian averaged  \n   - 3 two-point baskets → 3 × 2 = 6 points  \n   - 5 free throws → 5 × 1 = 5 points  \n   So from two-pointers and free throws he scored 6 + 5 = 11 points per game.  \n4. His overall average points per game is 882 ÷ 24 = 36.75 points.  \n5. The remainder of his average points per game must come from three-point baskets:  \n   36.75 − 11 = 25.75 points per game from three-pointers.  \n6. Since each three-point basket is worth 3 points, the average number of three-point baskets per game is  \n   25.75 ÷ 3 = 8.583333...  \n\nTherefore, Julian averaged approximately 8.5833 three-point baskets per game.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    9. Julian scored 882 points over the entire season. There were 24 games over the season. \n    He averaged 3 two-point baskets per game, and 5 free throws (worth one point). \n    How many three-point baskets did he average a game?\n    \"\"\"\n    # Given data\n    total_points = 882\n    games_played = 24\n    two_point_baskets_per_game = 3\n    free_throws_per_game = 5\n\n    # Calculate points per game from two-pointers and free throws\n    points_from_two_pointers = two_point_baskets_per_game * 2\n    points_from_free_throws = free_throws_per_game * 1\n    points_from_non_three = points_from_two_pointers + points_from_free_throws\n\n    # Average points per game overall\n    avg_points_per_game = total_points / games_played\n\n    # Points per game that must come from three-pointers\n    points_needed_from_three_per_game = avg_points_per_game - points_from_non_three\n\n    # Convert those points into number of three-point baskets\n    result = points_needed_from_three_per_game / 3\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 18062
  },
  {
    "user": "-There were 750 seats in a movie theater. Two-fifths of those seats were occupied during the first screening. Half of the remaining seats were taken during the second screening. 100 people came for the third screening and there were still 50 empty seats. How many seats were unoccupied during the first two screenings?",
    "assistant": "**Reasoning:**\n\n1. There are 750 seats in total.  \n2. During the first screening, two-fifths of the seats were occupied.  \n   - Occupied_first = 750 * (2/5) = 300 seats.  \n3. After the first screening, the remaining empty seats are  \n   - Remaining_after_first = 750 – 300 = 450 seats.  \n4. During the second screening, half of those remaining seats were taken.  \n   - Occupied_second = 450 * (1/2) = 225 seats.  \n5. We are asked: “How many seats were unoccupied during the first two screenings?”  \n   - Those are exactly the seats that were empty after the first screening and were *not* taken in the second screening:  \n     Unoccupied_both = Remaining_after_first – Occupied_second = 450 – 225 = 225 seats.  \n\nHence, 225 seats remained unoccupied across both the first and second screenings.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    There were 750 seats in a movie theater. Two-fifths of those seats were occupied during the first screening. Half of the remaining seats were taken during the second screening. 100 people came for the third screening and there were still 50 empty seats. How many seats were unoccupied during the first two screenings?\n    \"\"\"\n    # Total number of seats\n    total_seats = 750\n    \n    # Seats occupied in the first screening: two-fifths of the total\n    occupied_first = total_seats * 2 / 5\n    \n    # Seats remaining empty after the first screening\n    remaining_after_first = total_seats - occupied_first\n    \n    # Seats occupied in the second screening: half of those remaining\n    occupied_second = remaining_after_first / 2\n    \n    # Seats that remained unoccupied in both the first and second screenings\n    unoccupied_both = remaining_after_first - occupied_second\n    \n    result = unoccupied_both\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 17649
  },
  {
    "user": "Rachel bakes and sells cupcakes for $2 each. Two days ago, she sold a total of 15 cupcakes. Yesterday, she sold six more cupcakes than the previous day. Today, she sold three times the number of cupcakes than yesterday. How much did she earn for three days?",
    "assistant": "**Reasoning:**\n\n1. The price per cupcake is \\$2.  \n2. Two days ago, Rachel sold 15 cupcakes.  \n3. Yesterday, she sold 6 more cupcakes than two days ago:  \n   cupcakes_yesterday = 15 + 6 = 21  \n4. Today, she sold three times as many cupcakes as yesterday:  \n   cupcakes_today = 3 * 21 = 63  \n5. Calculate earnings each day by multiplying cupcakes sold by \\$2:  \n   - earnings_two_days_ago = 15 * 2 = 30  \n   - earnings_yesterday    = 21 * 2 = 42  \n   - earnings_today        = 63 * 2 = 126  \n6. Sum the earnings for all three days:  \n   total = 30 + 42 + 126 = 198  \n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Rachel bakes and sells cupcakes for $2 each. Two days ago, she sold a total of 15 cupcakes. \n    Yesterday, she sold six more cupcakes than the previous day. Today, she sold three times the \n    number of cupcakes than yesterday. How much did she earn for three days?\n    \"\"\"\n    # Number of cupcakes sold on each day\n    cupcakes_two_days_ago = 15\n    cupcakes_yesterday = cupcakes_two_days_ago + 6\n    cupcakes_today = 3 * cupcakes_yesterday\n\n    # Price per cupcake\n    price_per_cupcake = 2\n\n    # Earnings calculations\n    earnings_two_days_ago = cupcakes_two_days_ago * price_per_cupcake\n    earnings_yesterday = cupcakes_yesterday * price_per_cupcake\n    earnings_today = cupcakes_today * price_per_cupcake\n\n    # Total earnings over three days\n    result = earnings_two_days_ago + earnings_yesterday + earnings_today\n\n    return float(result)\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 5624
  },
  {
    "user": "Student: Can bought 1200 toy cars. He sold 2/5 of them and 1/4 of the rest for a profit. How many toy cars does he have left?",
    "assistant": "**Reasoning:**\n\n1. Start with the total number of toy cars: 1200.  \n2. He sells \\(2/5\\) of them first.  \n   - Calculate how many cars that is: \\(1200 \\times \\frac{2}{5} = 480\\).  \n   - Subtract from the total to find how many remain after the first sale: \\(1200 - 480 = 720\\).  \n3. From the remaining 720 cars, he then sells \\(1/4\\).  \n   - Calculate how many cars that is: \\(720 \\times \\frac{1}{4} = 180\\).  \n4. The total sold cars are \\(480 + 180 = 660\\).  \n5. Finally, subtract the total sold from the original 1200 to find how many cars are left:  \n   \\(1200 - 660 = 540\\).\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Student: Can bought 1200 toy cars. He sold 2/5 of them and 1/4 of the rest for a profit. How many toy cars does he have left?\n    \"\"\"\n    # Total cars bought\n    total_cars = 1200\n\n    # He sold 2/5 of them\n    fraction_sold_initial = 2/5\n    cars_sold_initial = total_cars * fraction_sold_initial\n\n    # Cars remaining after the first sale\n    remaining_after_initial_sale = total_cars - cars_sold_initial\n\n    # He sold 1/4 of the remaining cars\n    fraction_sold_of_remaining = 1/4\n    cars_sold_second_time = remaining_after_initial_sale * fraction_sold_of_remaining\n\n    # Calculate how many cars are left\n    result = total_cars - (cars_sold_initial + cars_sold_second_time)\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 33338
  },
  {
    "user": "Julia has a candy store. She buys in bulk and makes an average profit of 8 cents per candy. However, if she sells a box of 50 candy pieces, she makes 15 cents per candy. If Julia makes $30, how many candy pieces does she sell?",
    "assistant": "**Reasoning:**\n\n- We are told Julia’s overall (average) profit per candy is 8 cents.\n- She makes a total profit of \\$30.  \n- First convert total profit into cents:  \n  total_profit_cents = 30 dollars × 100 cents/dollar = 3000 cents.  \n- If she earns 8 cents per candy on average, and she overall earns 3000 cents, then the number of candies sold \\(N\\) satisfies  \n  8 cents × \\(N\\) = 3000 cents  \n- Solve for \\(N\\):  \n  \\(N = 3000 / 8 = 375\\)  \n- (The fact that a 50-piece box would yield 15 cents per candy is extra information not needed to find the total count when the overall average profit and total profit are given.)\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Julia has a candy store. She buys in bulk and makes an average profit of 8 cents per candy. However, if she sells a box of 50 candy pieces, she makes 15 cents per candy. If Julia makes $30, how many candy pieces does she sell?\n    \"\"\"\n    # average profit per candy (in cents)\n    avg_profit_per_candy_cents = 8\n\n    # total profit Julia makes (in dollars)\n    total_profit_dollars = 30\n\n    # convert total profit to cents\n    total_profit_cents = total_profit_dollars * 100\n\n    # number of candies sold = total profit in cents ÷ profit per candy\n    result = total_profit_cents / avg_profit_per_candy_cents\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 30276
  },
  {
    "user": "Jeff bought a shirt for $15, a pair of jeans for $25 and a pair of shoes for $30. How much money did he spend?",
    "assistant": "**Reasoning:**\n1. Identify the cost of each item:\n   - Shirt: \\$15\n   - Jeans: \\$25\n   - Shoes: \\$30\n2. Add the costs together:\n   - First add shirt and jeans: 15 + 25 = 40\n   - Then add shoes: 40 + 30 = 70\n3. Total amount spent is \\$70.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Jeff bought a shirt for $15, a pair of jeans for $25 and a pair of shoes for $30. How much money did he spend?\n    \"\"\"\n    shirt_cost = 15\n    jeans_cost = 25\n    shoes_cost = 30\n\n    total_spent = shirt_cost + jeans_cost + shoes_cost\n\n    return total_spent\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 3672
  },
  {
    "user": "On the island, there are 500 monkeys. Every season, each monkey has 3 more baby monkeys. How many monkeys will there be after 2 seasons?",
    "assistant": "**Reasoning:**\n\n1. We start with an initial population of 500 monkeys.\n2. Each season, every monkey has 3 more babies. That means at the end of a season, the population is multiplied by \\(1 + 3 = 4\\).\n3. We want the population after 2 seasons, so we multiply by 4 twice: \\(500 \\times 4 \\times 4 = 500 \\times 16\\).\n4. Finally, \\(500 \\times 16 = 8000\\). So there will be 8000 monkeys after 2 seasons.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    On the island, there are 500 monkeys. Every season, each monkey has 3 more baby monkeys. How many monkeys will there be after 2 seasons?\n    \"\"\"\n    initial_monkeys = 500\n    babies_per_monkey = 3\n    seasons = 2\n\n    # After one season, each monkey produces 3 babies, so population multiplies by (1 + 3) = 4\n    monkeys_after_first_season = initial_monkeys * (1 + babies_per_monkey)\n\n    # After two seasons, apply the same growth factor again\n    monkeys_after_second_season = monkeys_after_first_season * (1 + babies_per_monkey)\n\n    result = monkeys_after_second_season\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 33624
  },
  {
    "user": "Note: the questions and programs below are only possible examples, and there may be other ways to generate similar questions and programs. Selena has 7 apples and 4 oranges. Selena has 3 more bananas than Tina. Selena has 4 less than one third as many grapes as Tina. If Tina has 6 bananas and 36 grapes, how many fruits does Selena have in total?",
    "assistant": "**Reasoning:**\n1. Selena has 7 apples and 4 oranges.\n2. Tina has 6 bananas, and Selena has 3 more bananas than Tina:\n   bananas_selena = 6 + 3 = 9.\n3. Tina has 36 grapes. One third of Tina’s grapes is 36 / 3 = 12. Selena has 4 less than that:\n   grapes_selena = 12 - 4 = 8.\n4. Total fruits Selena has = apples + oranges + bananas + grapes = 7 + 4 + 9 + 8 = 28.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Selena has 7 apples and 4 oranges. Selena has 3 more bananas than Tina. Selena has 4 less than one third as many grapes as Tina. If Tina has 6 bananas and 36 grapes, how many fruits does Selena have in total?\n    \"\"\"\n    apples_selena = 7\n    oranges_selena = 4\n    bananas_tina = 6\n    bananas_selena = bananas_tina + 3\n    grapes_tina = 36\n    grapes_selena = grapes_tina / 3 - 4\n    result = apples_selena + oranges_selena + bananas_selena + grapes_selena\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 22074
  },
  {
    "user": "A store sells T-shirts for $20 each. If 5/8 of the T-shirts are sold, how much money has been made if there were 320 T-shirts in stock to begin with?",
    "assistant": "**Reasoning:**\n\n1. Identify the price per T-shirt: \\$20 each.  \n2. Identify the total number of T-shirts in stock: 320.  \n3. Determine the fraction sold: \\( \\tfrac{5}{8} \\).  \n4. Calculate how many T-shirts were sold:  \n   \\[\n     \\text{number\\_sold} = \\frac{5}{8} \\times 320\n     = 5 \\times \\bigl(320 \\div 8\\bigr)\n     = 5 \\times 40\n     = 200.\n   \\]\n5. Calculate the total revenue by multiplying the number sold by the price per T-shirt:  \n   \\[\n     \\text{revenue} = 200 \\times \\$20 = \\$4000.\n   \\]\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A store sells T-shirts for $20 each. If 5/8 of the T-shirts are sold, how much money has been made if there were 320 T-shirts in stock to begin with?\n    \"\"\"\n    # Given data\n    price_per_tshirt = 20.0\n    initial_stock = 320\n    fraction_sold = 5 / 8\n\n    # Calculate the number of T-shirts sold\n    number_sold = initial_stock * fraction_sold\n\n    # Calculate total revenue\n    total_revenue = number_sold * price_per_tshirt\n\n    # Final result\n    result = total_revenue\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 24761
  },
  {
    "user": "John and his siblings went for a hike in the forest and counted the different species of birds they encountered. John saw 40 birds while his siblings saw an average of 15 birds each. Determine the total number of birds John and his siblings counted.",
    "assistant": "**Reasoning:**\n\n1. The problem tells us John saw 40 birds.\n2. His siblings saw an *average* of 15 birds each.\n3. If we let n = the number of John’s siblings, then altogether the siblings saw  \n   siblings_total = 15 × n  \n4. Therefore the grand total of birds seen by John *and* his siblings is  \n   total = John’s birds + siblings_total = 40 + 15 × n  \n5. Since the problem statement does **not** specify how many siblings John has, we can only express the total in terms of n.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    John and his siblings went for a hike in the forest and counted the different species of birds they encountered. John saw 40 birds while his siblings saw an average of 15 birds each. Determine the total number of birds John and his siblings counted.\n    \"\"\"\n    # Number of John's siblings (not given in the problem)\n    num_siblings = 0  # ← replace 0 with the actual number of siblings\n    \n    john_birds = 40\n    siblings_average = 15\n    total_siblings_birds = siblings_average * num_siblings\n    \n    result = john_birds + total_siblings_birds\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 32669
  },
  {
    "user": "A blouse is sold at $120 after a discount of 20%. What was its marked price?",
    "assistant": "**Reasoning:**\n1. Let the marked price be \\(M\\).\n2. A discount of 20% means the blouse is sold at \\(M - 0.20 \\times M = 0.80 \\times M\\).\n3. We know the sale price after discount is \\$120, so:\n   0.80 × M = 120\n4. Solve for \\(M\\):\n   M = 120 / 0.80 = 150\n5. Therefore, the marked price was \\$150.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A blouse is sold at $120 after a discount of 20%. What was its marked price?\n    \"\"\"\n    sale_price = 120.0         # the price after discount\n    discount_rate = 0.20       # 20% discount\n    # The sale price equals marked_price * (1 - discount_rate)\n    marked_price = sale_price / (1 - discount_rate)\n    result = marked_price\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 31707
  },
  {
    "user": "Kyle invested $4,800 at a 7% annual interest rate for 3 years. How much will he receive at the end of the 3 years?",
    "assistant": "**Reasoning:**\n1. Identify the known values:\n   - Principal (P) = \\$4,800  \n   - Annual interest rate (r) = 7% = 0.07  \n   - Time (t) = 3 years  \n\n2. Since the problem does not mention compounding, we assume simple interest:\n   Simple interest \\(I = P \\times r \\times t\\).\n\n3. Compute the interest:\n   \\(I = 4800 \\times 0.07 \\times 3 = 4800 \\times 0.21 = 1008\\).\n\n4. Compute the total amount received after 3 years:\n   Total = Principal + Interest = \\$4,800 + \\$1,008 = \\$5,808.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Kyle invested $4,800 at a 7% annual interest rate for 3 years. How much will he receive at the end of the 3 years?\n    \"\"\"\n    principal = 4800.0\n    annual_interest_rate = 0.07\n    years = 3\n\n    # Calculate simple interest\n    interest = principal * annual_interest_rate * years\n\n    # Total amount after 3 years\n    total_amount = principal + interest\n\n    result = total_amount\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 38929
  },
  {
    "user": "Student: John can walk 3 miles per hour and run 8 miles per hour. If he spends 2 hours walking and then runs 1 hour, how many miles has he traveled?",
    "assistant": "**Reasoning:**\n1. The distance traveled at a constant speed is given by the formula: distance = speed × time.\n2. John walks at 3 miles per hour for 2 hours.  \n   - Walking distance = 3 miles/hour × 2 hours = 6 miles.\n3. John then runs at 8 miles per hour for 1 hour.  \n   - Running distance = 8 miles/hour × 1 hour = 8 miles.\n4. Total distance = walking distance + running distance = 6 miles + 8 miles = 14 miles.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    John can walk 3 miles per hour and run 8 miles per hour. If he spends 2 hours walking and then runs 1 hour, how many miles has he traveled?\n    \"\"\"\n    walking_speed = 3     # miles per hour\n    running_speed = 8     # miles per hour\n    walking_time = 2      # hours\n    running_time = 1      # hour\n\n    walking_distance = walking_speed * walking_time\n    running_distance = running_speed * running_time\n    result = walking_distance + running_distance\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 6509
  },
  {
    "user": "The sum of the angles of a triangle is 180 degrees. One angle is 30 degrees. How many degrees are in the other two angles?",
    "assistant": "**Reasoning:**\n1. The sum of the angles in any triangle is 180 degrees.  \n2. We are given one of the angles is 30 degrees.  \n3. To find the sum of the other two angles, subtract the known angle from the total:  \n   other_two_sum = 180 − 30 = 150 degrees.  \n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    The sum of the angles of a triangle is 180 degrees. One angle is 30 degrees. How many degrees are in the other two angles?\n    \"\"\"\n    total_sum = 180            # total sum of angles in a triangle\n    known_angle = 30           # one given angle\n    other_two_sum = total_sum - known_angle  # sum of the other two angles\n    result = float(other_two_sum)\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 18343
  },
  {
    "user": "Deshawn drove his car for 3 hours at 50 mph and then reduced his speed to 40 mph and drove for another 2 hours. What was his average speed for the entire trip?",
    "assistant": "**Reasoning:**\n1. We are given two segments of Deshawn’s trip:\n   - First segment: he drives for 3 hours at 50 miles per hour.\n   - Second segment: he drives for 2 hours at 40 miles per hour.\n2. To find average speed over the entire trip, we need:\n   - Total distance traveled\n   - Total time spent\n3. Distance is speed multiplied by time:\n   - Distance of first segment = 3 hours × 50 mph = 150 miles\n   - Distance of second segment = 2 hours × 40 mph = 80 miles\n4. Total distance = 150 miles + 80 miles = 230 miles\n5. Total time = 3 hours + 2 hours = 5 hours\n6. Average speed = Total distance ÷ Total time = 230 miles ÷ 5 hours = 46 mph\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Deshawn drove his car for 3 hours at 50 mph and then reduced his speed to 40 mph and drove for another 2 hours. What was his average speed for the entire trip?\n    \"\"\"\n    # Given values\n    time_first_leg = 3        # hours\n    speed_first_leg = 50      # mph\n    time_second_leg = 2       # hours\n    speed_second_leg = 40     # mph\n\n    # Calculate distances for each leg\n    distance_first_leg = time_first_leg * speed_first_leg\n    distance_second_leg = time_second_leg * speed_second_leg\n\n    # Calculate total distance and total time\n    total_distance = distance_first_leg + distance_second_leg\n    total_time = time_first_leg + time_second_leg\n\n    # Compute average speed\n    average_speed = total_distance / total_time\n    result = average_speed\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 14070
  },
  {
    "user": "The price of a book is $20. If a bookstore gives a 15% discount on the price, how much does the book cost?",
    "assistant": "**Reasoning:**\n1. The original price of the book is \\$20.  \n2. The bookstore gives a 15% discount.  \n3. Convert the percentage to a decimal: 15% = 0.15.  \n4. Calculate the discount amount by multiplying the original price by the discount rate:  \n   discount_amount = 20 * 0.15 = 3.  \n5. Subtract the discount amount from the original price to get the final cost:  \n   final_price = 20 - 3 = 17.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    The price of a book is $20. If a bookstore gives a 15% discount on the price, how much does the book cost?\n    \"\"\"\n    original_price = 20.0\n    discount_rate = 0.15\n    \n    # Calculate the discount amount\n    discount_amount = original_price * discount_rate\n    \n    # Calculate the final price after discount\n    final_price = original_price - discount_amount\n    \n    return final_price\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 28994
  },
  {
    "user": "Mo and Ken are making cupcakes for a bake sale. They use 4 boxes of their own cake mix and also borrow 3 boxes from a friend. Each box of cake mix makes 12 cupcakes. Mo and Ken bake all of the cupcakes and then divide them equally, but Ken sneaks an extra 9 cupcakes when Mo isn't looking. How many cupcakes is Mo left with?",
    "assistant": "**Reasoning:**\n1. Mo and Ken use 4 boxes of their own cake mix and borrow 3 more, for a total of 4 + 3 = 7 boxes.\n2. Each box makes 12 cupcakes, so they bake 7 × 12 = 84 cupcakes in total.\n3. They divide the 84 cupcakes equally, so each should get 84 ÷ 2 = 42 cupcakes.\n4. Ken sneaks an extra 9 cupcakes, taking them from Mo’s share.\n5. Mo is left with 42 − 9 = 33 cupcakes.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Mo and Ken are making cupcakes for a bake sale. They use 4 boxes of their own cake mix and also borrow 3 boxes from a friend. Each box of cake mix makes 12 cupcakes. Mo and Ken bake all of the cupcakes and then divide them equally, but Ken sneaks an extra 9 cupcakes when Mo isn't looking. How many cupcakes is Mo left with?\n    \"\"\"\n    own_boxes = 4\n    borrowed_boxes = 3\n    cupcakes_per_box = 12\n\n    # Total cupcakes made\n    total_cupcakes = (own_boxes + borrowed_boxes) * cupcakes_per_box\n\n    # Cupcakes each should get if divided equally\n    equal_share = total_cupcakes / 2\n\n    # Ken sneaks an extra 9 cupcakes from Mo’s share\n    extra_stolen = 9\n\n    # Mo’s final count\n    result = equal_share - extra_stolen\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 41537
  },
  {
    "user": "Q8. A truck is travelling in a straight line at a constant speed. After travelling 5 meters, it makes a left hand turn and then travels an additional 17 meters. What is the total distance the truck has travelled?",
    "assistant": "**Reasoning:**\n1. The truck first travels 5 meters in a straight line.\n2. It then makes a left-hand turn and travels an additional 17 meters.\n3. The total distance travelled is simply the sum of those two distances.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Q8. A truck is travelling in a straight line at a constant speed. After travelling 5 meters, it makes a left hand turn and then travels an additional 17 meters. What is the total distance the truck has travelled?\n    \"\"\"\n    # Distance travelled before the turn\n    distance_before_turn = 5.0\n    # Distance travelled after the turn\n    distance_after_turn = 17.0\n    # Calculate the total distance\n    result = distance_before_turn + distance_after_turn\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 16735
  },
  {
    "user": "A concert venue can hold 500 people and it is currently filled at 80% capacity. How many people are currently at the concert?",
    "assistant": "**Reasoning:**\n\n1. The problem states the concert venue’s total capacity is 500 people.  \n2. It is currently filled to 80% of that capacity.  \n3. To find the number of people currently at the concert, convert 80% into its decimal form: 80% = 0.80.  \n4. Multiply the total capacity (500) by the fill fraction (0.80):  \n   500 × 0.80 = 400  \n5. Therefore, there are 400 people currently at the concert.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A concert venue can hold 500 people and it is currently filled at 80% capacity. How many people are currently at the concert?\n    \"\"\"\n    # total capacity of the venue\n    capacity = 500\n    # fill percentage as a decimal\n    fill_fraction = 80 / 100\n    # number of people currently at the concert\n    result = capacity * fill_fraction\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 14238
  },
  {
    "user": "Kevin has a jar of 120 marbles. He wants to share them with his four friends. He decides to give each friend 20% more marbles than the previous one. How many marbles will the last friend get?",
    "assistant": "**Reasoning:**\n\n1. Let the number of marbles given to the first friend be \\(x\\).  \n2. The second friend then gets \\(1.2x\\) (20% more than \\(x\\)).  \n3. The third friend gets \\(1.2^2 x\\).  \n4. The fourth (last) friend gets \\(1.2^3 x\\).  \n5. The total of these four amounts must equal 120:  \n   \\(x + 1.2x + 1.2^2 x + 1.2^3 x = 120\\).  \n6. Factor out \\(x\\):  \n   \\(x \\times (1 + 1.2 + 1.2^2 + 1.2^3) = 120\\).  \n7. Solve for \\(x\\), then compute the last friend’s share as \\(1.2^3 x\\).\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Kevin has a jar of 120 marbles. He wants to share them with his four friends. He decides to give each friend 20% more marbles than the previous one. How many marbles will the last friend get?\n    \"\"\"\n    total_marbles = 120.0\n    increase_rate = 1 + 20/100  # 20% more means multiplying by 1.2\n\n    # Sum of the factors for four friends: 1, 1.2, 1.2^2, 1.2^3\n    factor_sum = sum(increase_rate ** i for i in range(4))\n\n    # Number of marbles given to the first friend\n    first_friend = total_marbles / factor_sum\n\n    # Number of marbles given to the last (fourth) friend\n    last_friend = first_friend * (increase_rate ** 3)\n\n    result = last_friend\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 657
  },
  {
    "user": "Olivia received $2500 as a birthday gift. She spent 1/5 of the money on a new laptop and then gave 1/3 of the remaining money to her parents. How much money did Olivia give to her parents?",
    "assistant": "**Reasoning:**\n1. Olivia starts with \\$2500.\n2. She spends 1/5 of the money on a new laptop.  \n   Amount spent on laptop = (1/5) × 2500 = 500.  \n   Remaining after laptop = 2500 − 500 = 2000.\n3. She then gives 1/3 of the remaining money to her parents.  \n   Amount given to parents = (1/3) × 2000 = 2000 / 3 = 666.666…  \n   Since we normally work in dollars and cents, that is \\$666.67 if rounded to the nearest cent, but the exact fraction is \\$\\frac{2000}{3}.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Olivia received $2500 as a birthday gift. She spent 1/5 of the money on a new laptop and then gave 1/3 of the remaining money to her parents. How much money did Olivia give to her parents?\n    \"\"\"\n    total_gift = 2500.0\n    fraction_spent_on_laptop = 1/5\n    # Step 1: Calculate amount spent on laptop\n    amount_spent_on_laptop = fraction_spent_on_laptop * total_gift\n    # Step 2: Remaining amount after buying laptop\n    remaining_after_laptop = total_gift - amount_spent_on_laptop\n    fraction_given_to_parents = 1/3\n    # Step 3: Calculate amount given to parents\n    result = fraction_given_to_parents * remaining_after_laptop\n    \n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 39945
  },
  {
    "user": "If there are 24 pencils in a box and a classroom of 30 pupils needs 2 each, how many pencils will remain?",
    "assistant": "**Reasoning:**\n1. We start with a total of 24 pencils in the box.  \n2. There are 30 pupils, each requiring 2 pencils.  \n3. The total number of pencils needed is 30 pupils * 2 pencils each = 60 pencils.  \n4. To find how many pencils remain, we subtract the needed pencils from the pencils we have:  \n   remaining = 24 − 60 = −36.  \n5. A negative result indicates we are short by 36 pencils.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    If there are 24 pencils in a box and a classroom of 30 pupils needs 2 each, how many pencils will remain?\n    \"\"\"\n    total_pencils = 24\n    number_of_pupils = 30\n    pencils_per_pupil = 2\n    \n    # Calculate the total number of pencils required\n    total_needed = number_of_pupils * pencils_per_pupil\n    \n    # Calculate how many pencils remain (or shortage if negative)\n    result = total_pencils - total_needed\n    \n    return float(result)\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 29432
  },
  {
    "user": "A motorist drove 120 km in 3 hours 45 minutes. He drove partly on a motorway at a speed of 80 km/hr and partly on another road at a speed of 40 km/hr. How long did he travel on the motorway?",
    "assistant": "**Reasoning:**\n\n1. Let \\(t\\) be the time (in hours) he spent on the motorway at 80 km/h.  \n2. Then the time on the other road (at 40 km/h) is \\(3.75 - t\\) hours, since 3 h 45 min = 3.75 h.  \n3. The total distance is the sum of the two parts:  \n   80 km/h \\(\\times t\\) + 40 km/h \\(\\times (3.75 - t)\\) = 120 km.  \n4. Set up the equation:  \n   80 t + 40(3.75 − t) = 120  \n5. Simplify:  \n   80t + 150 − 40t = 120  \n   40t + 150 = 120  \n   40t = −30  \n   t = −30/40 = −0.75 h  \n6. The solution \\(t = -0.75\\) h (i.e. −45 min) is negative, which shows the given numbers are not physically consistent.  Algebraically, however, the computed value is \\(-0.75\\) hours.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A motorist drove 120 km in 3 hours 45 minutes. He drove partly on a motorway at a speed of 80 km/hr and partly on another road at a speed of 40 km/hr. How long did he travel on the motorway?\n    \"\"\"\n    # Given data\n    total_distance = 120            # in km\n    total_time = 3 + 45/60          # 3 hours 45 minutes = 3.75 hours\n    speed_motorway = 80             # km/h on motorway\n    speed_other = 40                # km/h on other road\n\n    # Let t_motorway be the time on the motorway.\n    # Then distance_covered = speed_motorway * t_motorway + speed_other * (total_time - t_motorway)\n    # We solve 80*t + 40*(3.75 - t) = 120 for t\n    t_motorway = (total_distance - speed_other * total_time) / (speed_motorway - speed_other)\n\n    return t_motorway\n\n# If you call the function:\n# >>> simple_math_problem()\n# you get -0.75 (hours), i.e. −45 minutes.\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 40830
  },
  {
    "user": "Student: Janice has a total of 24 stickers. She gave away 3/8 of them to her sister. How many stickers did Janice give to her sister?",
    "assistant": "**Reasoning:**\n1. Janice starts with 24 stickers.\n2. She gave away 3/8 of her stickers to her sister.\n3. To find how many stickers she gave away, multiply the total number of stickers by the fraction given:\n   stickers_given = 24 * (3/8).\n4. Compute 24 * (3/8) = (24 ÷ 8) * 3 = 3 * 3 = 9.\n\nSo Janice gave her sister 9 stickers.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Janice has a total of 24 stickers. She gave away 3/8 of them to her sister. How many stickers did Janice give to her sister?\n    \"\"\"\n    total_stickers = 24\n    fraction_given_to_sister = 3 / 8\n    stickers_given = total_stickers * fraction_given_to_sister\n    result = stickers_given\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 26897
  },
  {
    "user": "Possible new questions: - Anna buys four apples for $0.75 each, six oranges for $0.50 each, and three bananas for $0.25 each. How much money does she spend in total?",
    "assistant": "**Reasoning:**\n1. Calculate the cost of the apples:\n   - Anna buys 4 apples at \\$0.75 each.\n   - Total cost for apples = 4 × 0.75 = \\$3.00.\n2. Calculate the cost of the oranges:\n   - Anna buys 6 oranges at \\$0.50 each.\n   - Total cost for oranges = 6 × 0.50 = \\$3.00.\n3. Calculate the cost of the bananas:\n   - Anna buys 3 bananas at \\$0.25 each.\n   - Total cost for bananas = 3 × 0.25 = \\$0.75.\n4. Add all three costs together to get the total amount spent:\n   - Total = \\$3.00 + \\$3.00 + \\$0.75 = \\$6.75.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Anna buys four apples for $0.75 each, six oranges for $0.50 each, and three bananas for $0.25 each. How much money does she spend in total?\n    \"\"\"\n    # Number and price of apples\n    apples_count = 4\n    apple_price = 0.75\n    apples_cost = apples_count * apple_price\n\n    # Number and price of oranges\n    oranges_count = 6\n    orange_price = 0.50\n    oranges_cost = oranges_count * orange_price\n\n    # Number and price of bananas\n    bananas_count = 3\n    banana_price = 0.25\n    bananas_cost = bananas_count * banana_price\n\n    # Total cost\n    result = apples_cost + oranges_cost + bananas_cost\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 21051
  },
  {
    "user": "If there are 336 grapes and they are split between 6 people, how many grapes does each person get?",
    "assistant": "**Reasoning:**\n1. We have a total of 336 grapes.\n2. These grapes are to be divided equally among 6 people.\n3. To find how many grapes each person gets, we divide the total number of grapes by the number of people.\n4. 336 divided by 6 equals 56.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    If there are 336 grapes and they are split between 6 people, how many grapes does each person get?\n    \"\"\"\n    total_grapes = 336            # total number of grapes available\n    number_of_people = 6          # total number of people to split the grapes between\n    grapes_per_person = total_grapes / number_of_people  # division to find grapes per person\n    result = grapes_per_person\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 155
  },
  {
    "user": "Isabella is making cookies for her class party. She needs to make 30 cookies for her class of 15 students. If each student gets 2 cookies, how many batches of cookies does Isabella need to make?",
    "assistant": "**Reasoning:**\n1. First find out how many cookies are needed in total.  \n   - There are 15 students and each student gets 2 cookies, so total_cookies_needed = 15 × 2 = 30.  \n2. We have to decide how many cookies come from one batch.  \n   - A common assumption is that one batch yields 12 cookies.  \n3. Divide the total cookies needed by the number of cookies per batch to see how many batches are required:  \n   - 30 ÷ 12 = 2.5  \n4. Since you can’t make half a batch, round up to the next whole batch:  \n   - Batches needed = 3  \n\n**Solution:**\n```python\nimport math\n\ndef simple_math_problem() -> float:\n    \"\"\"\n    Isabella is making cookies for her class party. She needs to make 30 cookies for her class of 15 students. \n    If each student gets 2 cookies, how many batches of cookies does Isabella need to make?\n    \"\"\"\n    # Number of students in the class\n    number_of_students = 15\n    \n    # Cookies each student receives\n    cookies_per_student = 2\n    \n    # Total cookies needed\n    total_cookies_needed = number_of_students * cookies_per_student  # 15 * 2 = 30\n    \n    # Assume each batch yields 12 cookies\n    cookies_per_batch = 12\n    \n    # Calculate how many batches are required, rounding up for any partial batch\n    batches_needed = math.ceil(total_cookies_needed / cookies_per_batch)  # ceil(30/12) = 3\n    \n    return float(batches_needed)\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 41529
  },
  {
    "user": "Rachel swims for 8 hours. The first hour she swims for 1/6th of a mile, and then she swims 20% more each hour. How many miles did Rachel swim in total?",
    "assistant": "**Reasoning:**\n\n1. Rachel swims for a total of 8 hours.\n2. In the first hour she covers 1/6 of a mile.\n3. Each subsequent hour she swims 20% more than the previous hour. A 20% increase corresponds to multiplying by 1.2.\n4. This is a geometric sequence where:\n   - First term a₁ = 1/6 miles\n   - Common ratio r = 1.2\n   - Number of terms n = 8\n5. We can either sum term-by-term or use the geometric series formula. Here, we will sum term-by-term:\n   - hour 1 distance = a₁\n   - hour 2 distance = a₁ × r\n   - hour 3 distance = a₁ × r²\n   - … up to hour 8 distance = a₁ × r⁷\n6. We add up all these distances to get the total miles swum over the 8 hours.\n7. Numerically, the sum is approximately 2.7498474667 miles.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Rachel swims for 8 hours. The first hour she swims for 1/6th of a mile, and then she swims 20% more each hour. How many miles did Rachel swim in total?\n    \"\"\"\n    total_hours = 8\n    first_hour_distance = 1/6          # miles swum in the first hour\n    growth_factor = 1.2                # 20% increase each subsequent hour\n\n    total_distance = 0.0\n    current_distance = first_hour_distance\n\n    # Sum the distance for each hour\n    for hour in range(1, total_hours + 1):\n        if hour == 1:\n            current_distance = first_hour_distance\n        else:\n            current_distance *= growth_factor\n        total_distance += current_distance\n\n    result = total_distance\n    return result\n```\n\nYou can call `simple_math_problem()` to get the total miles swum, which is approximately 2.7498474667.",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 28319
  },
  {
    "user": "After Ethan's basketball game, he received 1 dozen balloons from his aunt, and 5 balloons from each of his 6 teammates. How many balloons did Ethan receive?",
    "assistant": "**Reasoning:**\n1. A “dozen” means 12, so 1 dozen balloons = 12 balloons.\n2. Ethan received 5 balloons from each of his 6 teammates.  \n   Total from teammates = 5 × 6 = 30 balloons.\n3. Total balloons Ethan received = balloons from aunt + balloons from teammates  \n   = 12 + 30 = 42.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    After Ethan's basketball game, he received 1 dozen balloons from his aunt, and 5 balloons from each of his 6 teammates. How many balloons did Ethan receive?\n    \"\"\"\n    # Number of balloons in one dozen\n    balloons_per_dozen = 12\n\n    # Ethan received 1 dozen from his aunt\n    balloons_from_aunt = 1 * balloons_per_dozen\n\n    # Each teammate gave him 5 balloons, and he has 6 teammates\n    balloons_per_teammate = 5\n    number_of_teammates = 6\n\n    # Total balloons received from teammates\n    balloons_from_teammates = balloons_per_teammate * number_of_teammates\n\n    # Final result: total balloons received\n    result = balloons_from_aunt + balloons_from_teammates\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 40726
  },
  {
    "user": "A box contains 25 red balls, 45 blue balls, and 60 yellow balls. What is the probability of randomly selecting a red ball?",
    "assistant": "**Reasoning:**\n1. We are given counts of three types of balls in a box:\n   - Red balls: 25\n   - Blue balls: 45\n   - Yellow balls: 60\n2. To find the probability of randomly selecting a red ball, we use the formula:\n   Probability(red) = (Number of red balls) / (Total number of balls)\n3. First, compute the total number of balls by summing the counts of red, blue, and yellow balls.\n4. Then, divide the number of red balls by this total.\n5. The result is the probability of picking a red ball in one random draw.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A box contains 25 red balls, 45 blue balls, and 60 yellow balls. What is the probability of randomly selecting a red ball?\n    \"\"\"\n    # Number of each color ball\n    red_balls = 25\n    blue_balls = 45\n    yellow_balls = 60\n\n    # Total number of balls\n    total_balls = red_balls + blue_balls + yellow_balls\n\n    # Probability of selecting a red ball\n    result = red_balls / total_balls\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 22162
  },
  {
    "user": "Ana started a new exercise routine to lose weight. She weighed 200 pounds when she started the new fitness plan. She lost 15 pounds during the first month and was so encouraged that she doubled her workout intensity during the second month. She lost 5 pounds less in the third month compared to the second month. She maintained the same intensity and lost the same additional weight during the fourth month. If Ana weighed 139.5 pounds at the end of her fourth month, how many pounds did she lose during the third month?",
    "assistant": "**Reasoning:**\n\n1. Let the weight Ana loses in the second month be \\(x\\) pounds.  \n2. Then in the third month she loses \\(x - 5\\) pounds (5 pounds less than in the second month).  \n3. In the fourth month she loses the same amount as the third month, i.e. another \\(x - 5\\) pounds.  \n4. We know she lost 15 pounds in the first month.  \n5. The total weight she loses over the four months is  \n   \\(15 + x + (x - 5) + (x - 5) = 3x + 5.\\)  \n6. She started at 200 pounds and ended at 139.5 pounds, so her total loss is  \n   \\(200 - 139.5 = 60.5\\) pounds.  \n7. Set up the equation  \n   \\(3x + 5 = 60.5\\)  \n   \\(\\;\\;3x = 55.5\\)  \n   \\(\\;\\;x = 18.5\\).  \n8. Therefore, in the third month she lost  \n   \\(x - 5 = 18.5 - 5 = 13.5\\) pounds.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Ana started a new exercise routine to lose weight. She weighed 200 pounds when she started the new fitness plan. She lost 15 pounds during the first month and was so encouraged that she doubled her workout intensity during the second month. She lost 5 pounds less in the third month compared to the second month. She maintained the same intensity and lost the same additional weight during the fourth month. If Ana weighed 139.5 pounds at the end of her fourth month, how many pounds did she lose during the third month?\n    \"\"\"\n    # Given data\n    start_weight = 200.0\n    first_month_loss = 15.0\n    final_weight = 139.5\n\n    # Total weight lost over all four months\n    total_loss = start_weight - final_weight  # 60.5\n\n    # Let month2_loss = x\n    # Then month3_loss = x - 5 and month4_loss = x - 5\n    # Sum of losses: first_month_loss + x + (x - 5) + (x - 5) = 3*x + 5 = total_loss\n    month2_loss = (total_loss - 5) / 3  # solves 3*x + 5 = total_loss\n    month3_loss = month2_loss - 5      # 5 pounds less than month2\n\n    result = month3_loss\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 37652
  },
  {
    "user": "A new car costs $25,000. If you save $500 every month, how many months will it take you to save enough to buy the car?",
    "assistant": "**Reasoning:**\n\n1. Identify what is being asked: the number of months required to save \\$25,000 at a rate of \\$500 per month.\n2. Define the known quantities:\n   - Total cost of the car = \\$25,000\n   - Monthly savings       = \\$500\n3. The formula to find the number of months is:\n   months = total_cost ÷ monthly_savings\n4. Substitute the values:\n   months = 25000 ÷ 500 = 50\n\nSo it will take 50 months to save enough to buy the car.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A new car costs $25,000. If you save $500 every month, how many months will it take you to save enough to buy the car?\n    \"\"\"\n    total_cost = 25000\n    monthly_savings = 500\n\n    # Calculate the number of months needed\n    result = total_cost / monthly_savings\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 23760
  },
  {
    "user": "The area of a triangle is 24 square centimeters. If the base of the triangle is 8 centimeters, what is the height of the triangle?",
    "assistant": "**Reasoning:**\n1. We know the formula for the area of a triangle:\n   area = (1/2) * base * height\n2. We are given:\n   - area = 24 square centimeters\n   - base = 8 centimeters\n3. Substitute the known values into the formula:\n   24 = (1/2) * 8 * height\n4. Simplify the right side:\n   24 = 4 * height\n5. Solve for height:\n   height = 24 / 4 = 6\n\nTherefore, the height of the triangle is 6 centimeters.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    The area of a triangle is 24 square centimeters. If the base of the triangle is 8 centimeters, what is the height of the triangle?\n    \"\"\"\n    area = 24  # square centimeters\n    base = 8   # centimeters\n    # area = (1/2) * base * height  =>  height = (2 * area) / base\n    height = (2 * area) / base\n    return height\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 38197
  },
  {
    "user": "Jacob has $1000 to invest and wants to deposit half of it into a bank account for 4 years with 10% interest rate and the remaining into another bank account for 6 years with an interest rate of 8%. How much money, in dollars, will be in each account at the end of the respective time period?",
    "assistant": "**Reasoning:**\n1. Jacob has a total of \\$1000 to invest.\n2. He splits this equally, so each account gets \\$500.\n3. The first account earns 10% annual interest for 4 years.  Using the compound‐interest formula  \n   A₁ = P₁·(1 + r₁)ᵗ¹ = 500·(1 + 0.10)⁴.\n4. The second account earns 8% annual interest for 6 years.  Using the compound‐interest formula  \n   A₂ = P₂·(1 + r₂)ᵗ² = 500·(1 + 0.08)⁶.\n5. Compute both A₁ and A₂ to find the ending balances.\n\n**Solution:**\n```python\ndef simple_math_problem() -> tuple:\n    \"\"\"\n    Jacob has $1000 to invest and wants to deposit half of it into a bank account for 4 years \n    with 10% interest rate and the remaining into another bank account for 6 years with an \n    interest rate of 8%. How much money, in dollars, will be in each account at the end of \n    the respective time period?\n    \"\"\"\n    # Total amount Jacob wants to invest\n    total_investment = 1000.0\n    \n    # He splits it equally\n    half_investment = total_investment / 2.0\n    \n    # Account 1 details\n    interest_rate_account1 = 0.10  # 10%\n    time_account1 = 4              # 4 years\n    # Compound interest formula for account 1\n    amount_account1 = half_investment * (1 + interest_rate_account1) ** time_account1\n    \n    # Account 2 details\n    interest_rate_account2 = 0.08  # 8%\n    time_account2 = 6              # 6 years\n    # Compound interest formula for account 2\n    amount_account2 = half_investment * (1 + interest_rate_account2) ** time_account2\n    \n    # Return both ending balances\n    result = (amount_account1, amount_account2)\n    return result\n```\n\nIf you call `simple_math_problem()`, it will return a tuple `(A₁, A₂)` where  \nA₁ ≈ 500·(1.10)⁴ ≈ \\$732.05  \nA₂ ≈ 500·(1.08)⁶ ≈ \\$793.83",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 14372
  },
  {
    "user": "Student: Bob spends 2 dollars more than Sarah to purchase the same number of items. If Sarah spends a total of 40 dollars, how much did Bob spend in total?",
    "assistant": "**Reasoning:**\n1. We know Sarah spends a total of \\$40.\n2. Bob spends \\$2 more than Sarah.\n3. Therefore, Bob's total spending is Sarah's spending plus \\$2:  \n   Bob_spent = 40 + 2 = 42.\n\n**Solution:**\n```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Student: Bob spends 2 dollars more than Sarah to purchase the same number of items. \n    If Sarah spends a total of 40 dollars, how much did Bob spend in total?\n    \"\"\"\n    sarah_spent = 40.0\n    extra_amount = 2.0\n    bob_spent = sarah_spent + extra_amount\n    result = bob_spent\n\n    return result\n```",
    "dataset": "ThomasTheMaker/TinyGSM-o4-mini",
    "original_index": 40826
  }
]