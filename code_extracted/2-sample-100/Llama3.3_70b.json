[
  {
    "index": 0,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A plane travels 300 miles in 1 hour. How long will it take to travel 900 miles?\n    \"\"\"\n    distance_traveled_per_hour = 300  # miles per hour\n    total_distance_to_travel = 900  # miles\n    time_to_travel_total_distance = total_distance_to_travel / distance_traveled_per_hour\n    result = time_to_travel_total_distance\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A plane travels 300 miles in 1 hour. How long will it take to travel 900 miles?\n    \"\"\"\n    distance_traveled_per_hour = 300  # miles per hour\n    total_distance_to_travel = 900  # miles\n    time_to_travel_total_distance = total_distance_to_travel / distance_traveled_per_hour\n    result = time_to_travel_total_distance\n\n    return result\n\nprint(simple_math_problem())",
    "result": 3.0
  },
  {
    "index": 1,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Maria bought a shirt for $25 and a pair of shoes for $65. If she had a coupon that gave her 20% off on the total, how much money did she save?\n    \"\"\"\n    shirt_price = 25.0\n    shoes_price = 65.0\n    total_cost = shirt_price + shoes_price\n    discount_percentage = 0.20\n    discount_amount = total_cost * discount_percentage\n    result = discount_amount\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Maria bought a shirt for $25 and a pair of shoes for $65. If she had a coupon that gave her 20% off on the total, how much money did she save?\n    \"\"\"\n    shirt_price = 25.0\n    shoes_price = 65.0\n    total_cost = shirt_price + shoes_price\n    discount_percentage = 0.20\n    discount_amount = total_cost * discount_percentage\n    result = discount_amount\n\n    return result\n\nprint(simple_math_problem())",
    "result": 18.0
  },
  {
    "index": 2,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    The average human can run a maximum of 10 kilometers, while a professional athlete can run twice the distance of the average human. If there was a marathon race with 200 participants, with three times as many professionals as amateurs, how many kilometers will the total number of participants run?\n    \"\"\"\n    average_distance = 10  # kilometers\n    professional_distance = 2 * average_distance  # kilometers\n    total_participants = 200\n    amateur_to_professional_ratio = 1/3  # 1 amateur for every 3 professionals\n    amateur_participants = total_participants / (amateur_to_professional_ratio + 1)  # calculate number of amateur participants\n    professional_participants = total_participants - amateur_participants  # calculate number of professional participants\n    total_distance_run_by_amateurs = amateur_participants * average_distance  # calculate total distance run by amateurs\n    total_distance_run_by_professionals = professional_participants * professional_distance  # calculate total distance run by professionals\n    result = total_distance_run_by_amateurs + total_distance_run_by_professionals  # calculate total distance run\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    The average human can run a maximum of 10 kilometers, while a professional athlete can run twice the distance of the average human. If there was a marathon race with 200 participants, with three times as many professionals as amateurs, how many kilometers will the total number of participants run?\n    \"\"\"\n    average_distance = 10  # kilometers\n    professional_distance = 2 * average_distance  # kilometers\n    total_participants = 200\n    amateur_to_professional_ratio = 1/3  # 1 amateur for every 3 professionals\n    amateur_participants = total_participants / (amateur_to_professional_ratio + 1)  # calculate number of amateur participants\n    professional_participants = total_participants - amateur_participants  # calculate number of professional participants\n    total_distance_run_by_amateurs = amateur_participants * average_distance  # calculate total distance run by amateurs\n    total_distance_run_by_professionals = professional_participants * professional_distance  # calculate total distance run by professionals\n    result = total_distance_run_by_amateurs + total_distance_run_by_professionals  # calculate total distance run\n\n    return result\n\nprint(simple_math_problem())",
    "result": 2500.0
  },
  {
    "index": 3,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Student: Lily ordered 5 pizzas for $14 each and 4 bottles of soda for $3 each. She used a coupon that gave her a 20% discount on the pizzas. She also tipped the delivery person 15% of the original total. How much did Lily pay in total?\n    \"\"\"\n    pizzas_ordered = 5\n    pizza_price = 14\n    sodas_ordered = 4\n    soda_price = 3\n    discount_percentage = 0.20\n    tip_percentage = 0.15\n    \n    total_pizza_cost = pizzas_ordered * pizza_price\n    total_soda_cost = sodas_ordered * soda_price\n    original_total = total_pizza_cost + total_soda_cost\n    \n    discount_amount = total_pizza_cost * discount_percentage\n    discounted_pizza_cost = total_pizza_cost - discount_amount\n    new_total = discounted_pizza_cost + total_soda_cost\n    \n    tip_amount = original_total * tip_percentage\n    result = new_total + tip_amount\n    \n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Student: Lily ordered 5 pizzas for $14 each and 4 bottles of soda for $3 each. She used a coupon that gave her a 20% discount on the pizzas. She also tipped the delivery person 15% of the original total. How much did Lily pay in total?\n    \"\"\"\n    pizzas_ordered = 5\n    pizza_price = 14\n    sodas_ordered = 4\n    soda_price = 3\n    discount_percentage = 0.20\n    tip_percentage = 0.15\n    \n    total_pizza_cost = pizzas_ordered * pizza_price\n    total_soda_cost = sodas_ordered * soda_price\n    original_total = total_pizza_cost + total_soda_cost\n    \n    discount_amount = total_pizza_cost * discount_percentage\n    discounted_pizza_cost = total_pizza_cost - discount_amount\n    new_total = discounted_pizza_cost + total_soda_cost\n    \n    tip_amount = original_total * tip_percentage\n    result = new_total + tip_amount\n    \n    return result\n\nprint(simple_math_problem())",
    "result": 80.3
  },
  {
    "index": 4,
    "response": "```python\ndef simple_math_problem() -> int:\n\"\"\"\nEmma and Rachel have been friends since they were 4 years old. If Emma is now 36 and Rachel is 2 years older, how many years have they known each other?\n\"\"\"\nemma_current_age = 36\nrachel_age_difference = 2\nrachel_current_age = emma_current_age + rachel_age_difference\nyears_known_each_other = emma_current_age - 4\nresult = years_known_each_other\n\nreturn result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    Emma and Rachel have been friends since they were 4 years old. If Emma is now 36 and Rachel is 2 years older, how many years have they known each other?\n    \"\"\"\n    emma_current_age = 36\n    rachel_age_difference = 2\n    rachel_current_age = emma_current_age + rachel_age_difference\n    years_known_each_other = emma_current_age - 4\n    result = years_known_each_other\n\n    return result\n\n    print(simple_math_problem())",
    "result": 32
  },
  {
    "index": 5,
    "response": "```python\ndef simple_math_problem() -> float:\n\"\"\"\nA dress originally costs $120. It is on sale for 30% off. What is the sale price of the dress?\n\"\"\"\noriginal_dress_price = 120\ndiscount_percentage = 30\ndiscount_amount = (discount_percentage / 100) * original_dress_price\nresult = original_dress_price - discount_amount\n\nreturn result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A dress originally costs $120. It is on sale for 30% off. What is the sale price of the dress?\n    \"\"\"\n    original_dress_price = 120\n    discount_percentage = 30\n    discount_amount = (discount_percentage / 100) * original_dress_price\n    result = original_dress_price - discount_amount\n\n    return result\n\n    print(simple_math_problem())",
    "result": 84.0
  },
  {
    "index": 6,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A room measures 12m x 8m x 3m. How many boxes of tiles, measuring 12cm x 12cm x 3cm, would be needed to tile the floor?\n    \"\"\"\n    # Room dimensions in meters\n    room_length_m = 12\n    room_width_m = 8\n    \n    # Tile dimensions in centimeters\n    tile_length_cm = 12\n    tile_width_cm = 12\n    \n    # Convert room dimensions to centimeters\n    room_length_cm = room_length_m * 100\n    room_width_cm = room_width_m * 100\n    \n    # Calculate the area of the room in square centimeters\n    room_area_cm2 = room_length_cm * room_width_cm\n    \n    # Calculate the area of a single tile in square centimeters\n    tile_area_cm2 = tile_length_cm * tile_width_cm\n    \n    # Calculate the number of tiles needed\n    tiles_needed = room_area_cm2 / tile_area_cm2\n    \n    result = tiles_needed\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A room measures 12m x 8m x 3m. How many boxes of tiles, measuring 12cm x 12cm x 3cm, would be needed to tile the floor?\n    \"\"\"\n    # Room dimensions in meters\n    room_length_m = 12\n    room_width_m = 8\n    \n    # Tile dimensions in centimeters\n    tile_length_cm = 12\n    tile_width_cm = 12\n    \n    # Convert room dimensions to centimeters\n    room_length_cm = room_length_m * 100\n    room_width_cm = room_width_m * 100\n    \n    # Calculate the area of the room in square centimeters\n    room_area_cm2 = room_length_cm * room_width_cm\n    \n    # Calculate the area of a single tile in square centimeters\n    tile_area_cm2 = tile_length_cm * tile_width_cm\n    \n    # Calculate the number of tiles needed\n    tiles_needed = room_area_cm2 / tile_area_cm2\n    \n    result = tiles_needed\n\n    return result\n\nprint(simple_math_problem())",
    "result": 6666.666666666667
  },
  {
    "index": 7,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    In a toy store, the salesperson has 3 dozen teddy bears on a shelf. 6 kids each take 2 teddy bears. How many teddy bears are left on the shelf?\n    \"\"\"\n    dozenTeddyBears = 3\n    teddyBearsPerDozen = 12\n    totalTeddyBears = dozenTeddyBears * teddyBearsPerDozen\n    kidsTakingTeddyBears = 6\n    teddyBearsPerKid = 2\n    totalTeddyBearsTaken = kidsTakingTeddyBears * teddyBearsPerKid\n    teddyBearsLeft = totalTeddyBears - totalTeddyBearsTaken\n    result = teddyBearsLeft\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    In a toy store, the salesperson has 3 dozen teddy bears on a shelf. 6 kids each take 2 teddy bears. How many teddy bears are left on the shelf?\n    \"\"\"\n    dozenTeddyBears = 3\n    teddyBearsPerDozen = 12\n    totalTeddyBears = dozenTeddyBears * teddyBearsPerDozen\n    kidsTakingTeddyBears = 6\n    teddyBearsPerKid = 2\n    totalTeddyBearsTaken = kidsTakingTeddyBears * teddyBearsPerKid\n    teddyBearsLeft = totalTeddyBears - totalTeddyBearsTaken\n    result = teddyBearsLeft\n\n    return result\n\nprint(simple_math_problem())",
    "result": 24
  },
  {
    "index": 8,
    "response": "```python\ndef simple_math_problem() -> int:\n\"\"\"\nIn a party, the ratio of adults and children is 9:4. If there are a total of 65 attendees, how many more adults are there than children?\n\"\"\"\ntotal_attendees = 65\nadult_to_child_ratio = 9 / 4\ntotal_parts_in_ratio = 9 + 4\nadults = (9 / total_parts_in_ratio) * total_attendees\nchildren = (4 / total_parts_in_ratio) * total_attendees\nresult = int(adults - children)\n\nreturn result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    In a party, the ratio of adults and children is 9:4. If there are a total of 65 attendees, how many more adults are there than children?\n    \"\"\"\n    total_attendees = 65\n    adult_to_child_ratio = 9 / 4\n    total_parts_in_ratio = 9 + 4\n    adults = (9 / total_parts_in_ratio) * total_attendees\n    children = (4 / total_parts_in_ratio) * total_attendees\n    result = int(adults - children)\n\n    return result\n\n    print(simple_math_problem())",
    "result": 25
  },
  {
    "index": 9,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Lisa is buying 4 cups from a store which sells them at a rate of 2 cups for $5.00. How much will she have to pay?\n    \"\"\"\n    cups_to_buy = 4\n    cups_per_unit = 2\n    price_per_unit = 5.00\n    units_to_buy = cups_to_buy / cups_per_unit\n    result = units_to_buy * price_per_unit\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Lisa is buying 4 cups from a store which sells them at a rate of 2 cups for $5.00. How much will she have to pay?\n    \"\"\"\n    cups_to_buy = 4\n    cups_per_unit = 2\n    price_per_unit = 5.00\n    units_to_buy = cups_to_buy / cups_per_unit\n    result = units_to_buy * price_per_unit\n\n    return result\n\nprint(simple_math_problem())",
    "result": 10.0
  },
  {
    "index": 10,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    Ethan had a pack of gum that contained 20 pieces. He chewed 3 pieces every day for 4 days in a row. Then, he bought another pack of the same gum that also contained 20 pieces. He gave half of his new pack to his friend Grace. How many pieces of gum did Ethan have left after he gave some to Grace?\n    \"\"\"\n    initial_gum_pieces = 20\n    gum_chewed_per_day = 3\n    days_gum_chewed = 4\n    total_gum_chewed = gum_chewed_per_day * days_gum_chewed\n    remaining_gum = initial_gum_pieces - total_gum_chewed\n    new_gum_pieces = 20\n    total_gum_after_purchase = remaining_gum + new_gum_pieces\n    gum_given_to_grace = new_gum_pieces // 2\n    result = total_gum_after_purchase - gum_given_to_grace\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    Ethan had a pack of gum that contained 20 pieces. He chewed 3 pieces every day for 4 days in a row. Then, he bought another pack of the same gum that also contained 20 pieces. He gave half of his new pack to his friend Grace. How many pieces of gum did Ethan have left after he gave some to Grace?\n    \"\"\"\n    initial_gum_pieces = 20\n    gum_chewed_per_day = 3\n    days_gum_chewed = 4\n    total_gum_chewed = gum_chewed_per_day * days_gum_chewed\n    remaining_gum = initial_gum_pieces - total_gum_chewed\n    new_gum_pieces = 20\n    total_gum_after_purchase = remaining_gum + new_gum_pieces\n    gum_given_to_grace = new_gum_pieces // 2\n    result = total_gum_after_purchase - gum_given_to_grace\n\n    return result\n\nprint(simple_math_problem())",
    "result": 18
  },
  {
    "index": 11,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Javier is running a race with 3 parts. The total distance of the race is 25 kilometers. The first part of the race is 8 kilometers long and the third part is twice as long as the second part. How long is the third part of the race?\n    \"\"\"\n    total_distance = 25  # Total distance of the race in kilometers\n    first_part_distance = 8  # Distance of the first part of the race in kilometers\n    # Let's denote the distance of the second part as x\n    # Then, the distance of the third part is 2x\n    # The sum of the distances of all parts is equal to the total distance\n    # So, we can write the equation: 8 + x + 2x = 25\n    # Combine like terms: 8 + 3x = 25\n    # Subtract 8 from both sides: 3x = 17\n    # Divide both sides by 3: x = 17 / 3\n    second_part_distance = (total_distance - first_part_distance) / 3  # Distance of the second part of the race in kilometers\n    third_part_distance = 2 * second_part_distance  # Distance of the third part of the race in kilometers\n    result = third_part_distance\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Javier is running a race with 3 parts. The total distance of the race is 25 kilometers. The first part of the race is 8 kilometers long and the third part is twice as long as the second part. How long is the third part of the race?\n    \"\"\"\n    total_distance = 25  # Total distance of the race in kilometers\n    first_part_distance = 8  # Distance of the first part of the race in kilometers\n    # Let's denote the distance of the second part as x\n    # Then, the distance of the third part is 2x\n    # The sum of the distances of all parts is equal to the total distance\n    # So, we can write the equation: 8 + x + 2x = 25\n    # Combine like terms: 8 + 3x = 25\n    # Subtract 8 from both sides: 3x = 17\n    # Divide both sides by 3: x = 17 / 3\n    second_part_distance = (total_distance - first_part_distance) / 3  # Distance of the second part of the race in kilometers\n    third_part_distance = 2 * second_part_distance  # Distance of the third part of the race in kilometers\n    result = third_part_distance\n\n    return result\n\nprint(simple_math_problem())",
    "result": 11.333333333333334
  },
  {
    "index": 12,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    The cost of Fred's car was $17,500. He made a down payment of 10%, and borrowed the rest. How much money did Fred borrow?\n    \"\"\"\n    car_cost = 17500\n    down_payment_percentage = 0.10\n    down_payment_amount = car_cost * down_payment_percentage\n    amount_borrowed = car_cost - down_payment_amount\n    result = amount_borrowed\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    The cost of Fred's car was $17,500. He made a down payment of 10%, and borrowed the rest. How much money did Fred borrow?\n    \"\"\"\n    car_cost = 17500\n    down_payment_percentage = 0.10\n    down_payment_amount = car_cost * down_payment_percentage\n    amount_borrowed = car_cost - down_payment_amount\n    result = amount_borrowed\n\n    return result\n\nprint(simple_math_problem())",
    "result": 15750.0
  },
  {
    "index": 13,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    Student: Matthew has an aquarium. He has fish in 5 different colors: red, yellow, blue, green, and white. Blue fish make up one fifth of all the fish in the aquarium. There are 8 more yellow fish than blue fish. How many white fish are there when the total number of fish in the aquarium is 60?\n    \"\"\"\n    total_fish = 60\n    blue_fish = total_fish / 5\n    yellow_fish = blue_fish + 8\n    blue_and_yellow_fish = blue_fish + yellow_fish\n    # Since there are 5 colors and we know the number of blue and yellow fish, \n    # the remaining fish are red, green, and white\n    remaining_fish = total_fish - blue_and_yellow_fish\n    # Since there are 3 remaining colors (red, green, and white) and we want to find the number of white fish,\n    # we will assume that the remaining fish are divided equally among the 3 colors.\n    # However, the problem does not explicitly state that the fish are divided equally, \n    # so we will just calculate the total number of remaining fish as the number of white fish.\n    result = int(remaining_fish)\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    Student: Matthew has an aquarium. He has fish in 5 different colors: red, yellow, blue, green, and white. Blue fish make up one fifth of all the fish in the aquarium. There are 8 more yellow fish than blue fish. How many white fish are there when the total number of fish in the aquarium is 60?\n    \"\"\"\n    total_fish = 60\n    blue_fish = total_fish / 5\n    yellow_fish = blue_fish + 8\n    blue_and_yellow_fish = blue_fish + yellow_fish\n    # Since there are 5 colors and we know the number of blue and yellow fish, \n    # the remaining fish are red, green, and white\n    remaining_fish = total_fish - blue_and_yellow_fish\n    # Since there are 3 remaining colors (red, green, and white) and we want to find the number of white fish,\n    # we will assume that the remaining fish are divided equally among the 3 colors.\n    # However, the problem does not explicitly state that the fish are divided equally, \n    # so we will just calculate the total number of remaining fish as the number of white fish.\n    result = int(remaining_fish)\n\n    return result\n\nprint(simple_math_problem())",
    "result": 28
  },
  {
    "index": 14,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    If a store is having a sale where everything is 30% off, how much would a $50 game console cost with the discount?\n    \"\"\"\n    original_price = 50.0  # Original price of the game console\n    discount_percentage = 0.3  # 30% discount as a decimal\n    discount_amount = original_price * discount_percentage  # Calculate the discount amount\n    result = original_price - discount_amount  # Calculate the final price after discount\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    If a store is having a sale where everything is 30% off, how much would a $50 game console cost with the discount?\n    \"\"\"\n    original_price = 50.0  # Original price of the game console\n    discount_percentage = 0.3  # 30% discount as a decimal\n    discount_amount = original_price * discount_percentage  # Calculate the discount amount\n    result = original_price - discount_amount  # Calculate the final price after discount\n\n    return result\n\nprint(simple_math_problem())",
    "result": 35.0
  },
  {
    "index": 15,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    Kevin has 9 marbles in his jar. Abby has twice as many marbles as Kevin and Ryan has 6 more marbles than Abby. How many marbles do the friends have in total?\n    \"\"\"\n    kevin_marbles = 9\n    abby_marbles = 2 * kevin_marbles\n    ryan_marbles = abby_marbles + 6\n    total_marbles = kevin_marbles + abby_marbles + ryan_marbles\n    result = total_marbles\n\n    return result\n\n# Example usage:\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    Kevin has 9 marbles in his jar. Abby has twice as many marbles as Kevin and Ryan has 6 more marbles than Abby. How many marbles do the friends have in total?\n    \"\"\"\n    kevin_marbles = 9\n    abby_marbles = 2 * kevin_marbles\n    ryan_marbles = abby_marbles + 6\n    total_marbles = kevin_marbles + abby_marbles + ryan_marbles\n    result = total_marbles\n\n    return result\n\n# Example usage:\nprint(simple_math_problem())",
    "result": 51
  },
  {
    "index": 16,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Austin bought some chocolates for a party. There were 50 chocolates and each chocolate cost 5 cents. How much did Austin spend for the chocolates in dollars?\n    \"\"\"\n    total_chocolates = 50\n    cost_per_chocolate_cents = 5\n    total_cost_cents = total_chocolates * cost_per_chocolate_cents\n    total_cost_dollars = total_cost_cents / 100\n    result = total_cost_dollars\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Austin bought some chocolates for a party. There were 50 chocolates and each chocolate cost 5 cents. How much did Austin spend for the chocolates in dollars?\n    \"\"\"\n    total_chocolates = 50\n    cost_per_chocolate_cents = 5\n    total_cost_cents = total_chocolates * cost_per_chocolate_cents\n    total_cost_dollars = total_cost_cents / 100\n    result = total_cost_dollars\n\n    return result\n\nprint(simple_math_problem())",
    "result": 2.5
  },
  {
    "index": 17,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    arah put the same number of pennies in each of the 7 mason jars she had. If she put a total of 122 pennies in the jars, how many pennies are in each jar?\n    \"\"\"\n    total_pennies = 122\n    number_of_jars = 7\n    pennies_per_jar = total_pennies / number_of_jars\n    result = pennies_per_jar\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    arah put the same number of pennies in each of the 7 mason jars she had. If she put a total of 122 pennies in the jars, how many pennies are in each jar?\n    \"\"\"\n    total_pennies = 122\n    number_of_jars = 7\n    pennies_per_jar = total_pennies / number_of_jars\n    result = pennies_per_jar\n\n    return result\n\nprint(simple_math_problem())",
    "result": 17.428571428571427
  },
  {
    "index": 18,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A music festival has sold twice as many VIP tickets as regular tickets. If they have sold 300 regular tickets, and 10% of all ticket holders cannot make it, how many people can still attend the festival?\n    \"\"\"\n    regular_tickets = 300\n    vip_tickets = 2 * regular_tickets\n    total_tickets = regular_tickets + vip_tickets\n    tickets_unavailable = 0.1 * total_tickets\n    result = total_tickets - tickets_unavailable\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A music festival has sold twice as many VIP tickets as regular tickets. If they have sold 300 regular tickets, and 10% of all ticket holders cannot make it, how many people can still attend the festival?\n    \"\"\"\n    regular_tickets = 300\n    vip_tickets = 2 * regular_tickets\n    total_tickets = regular_tickets + vip_tickets\n    tickets_unavailable = 0.1 * total_tickets\n    result = total_tickets - tickets_unavailable\n\n    return result\n\nprint(simple_math_problem())",
    "result": 810.0
  },
  {
    "index": 19,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Gabriel brought 18 apples for $1.50 each. How much money did he spend on the apples?\n    \"\"\"\n    total_apples = 18\n    price_per_apple = 1.50\n    total_cost = total_apples * price_per_apple\n    result = total_cost\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Gabriel brought 18 apples for $1.50 each. How much money did he spend on the apples?\n    \"\"\"\n    total_apples = 18\n    price_per_apple = 1.50\n    total_cost = total_apples * price_per_apple\n    result = total_cost\n\n    return result\n\nprint(simple_math_problem())",
    "result": 27.0
  },
  {
    "index": 20,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Ellen borrowed 500 dollars at 8% annual interest, compounded annually. How much will she owe after 3 years?\n    \"\"\"\n    principal_amount = 500  # initial amount borrowed\n    annual_interest_rate = 0.08  # 8% annual interest\n    years = 3  # number of years\n\n    # calculate the amount owed after 3 years with compound interest\n    amount_owed = principal_amount * (1 + annual_interest_rate) ** years\n    result = amount_owed\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Ellen borrowed 500 dollars at 8% annual interest, compounded annually. How much will she owe after 3 years?\n    \"\"\"\n    principal_amount = 500  # initial amount borrowed\n    annual_interest_rate = 0.08  # 8% annual interest\n    years = 3  # number of years\n\n    # calculate the amount owed after 3 years with compound interest\n    amount_owed = principal_amount * (1 + annual_interest_rate) ** years\n    result = amount_owed\n\n    return result\n\nprint(simple_math_problem())",
    "result": 629.8560000000001
  },
  {
    "index": 21,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Student: Katie is a tutor who earns $40 per hour. She tutors 12 hours per week and has to pay a $100 fee to the tutoring center each month. How much does she earn in two weeks, after paying the fee?\n    \"\"\"\n    hourly_rate = 40  # dollars per hour\n    hours_per_week = 12\n    weeks = 2\n    monthly_fee = 100  # dollars per month\n\n    # Calculate total hours worked in two weeks\n    total_hours = hours_per_week * weeks\n\n    # Calculate total earnings in two weeks\n    total_earnings = total_hours * hourly_rate\n\n    # Calculate the fee for two weeks (assuming a month has 4 weeks)\n    fee_for_two_weeks = monthly_fee / 4 * 2\n\n    # Calculate earnings after paying the fee\n    result = total_earnings - fee_for_two_weeks\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Student: Katie is a tutor who earns $40 per hour. She tutors 12 hours per week and has to pay a $100 fee to the tutoring center each month. How much does she earn in two weeks, after paying the fee?\n    \"\"\"\n    hourly_rate = 40  # dollars per hour\n    hours_per_week = 12\n    weeks = 2\n    monthly_fee = 100  # dollars per month\n\n    # Calculate total hours worked in two weeks\n    total_hours = hours_per_week * weeks\n\n    # Calculate total earnings in two weeks\n    total_earnings = total_hours * hourly_rate\n\n    # Calculate the fee for two weeks (assuming a month has 4 weeks)\n    fee_for_two_weeks = monthly_fee / 4 * 2\n\n    # Calculate earnings after paying the fee\n    result = total_earnings - fee_for_two_weeks\n\n    return result\n\nprint(simple_math_problem())",
    "result": 910.0
  },
  {
    "index": 22,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A car is traveling at an average speed of 30 miles an hour. It goes past a sign on the side of the road that says \"Chicago 90 miles\". How long will it take the car to reach Chicago?\n    \"\"\"\n    average_speed = 30  # miles per hour\n    distance_to_chicago = 90  # miles\n    time_to_reach_chicago = distance_to_chicago / average_speed\n    result = time_to_reach_chicago\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A car is traveling at an average speed of 30 miles an hour. It goes past a sign on the side of the road that says \"Chicago 90 miles\". How long will it take the car to reach Chicago?\n    \"\"\"\n    average_speed = 30  # miles per hour\n    distance_to_chicago = 90  # miles\n    time_to_reach_chicago = distance_to_chicago / average_speed\n    result = time_to_reach_chicago\n\n    return result\n\nprint(simple_math_problem())",
    "result": 3.0
  },
  {
    "index": 23,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Olivia and Tom both ran in a marathon. Olivia ran 3 miles more than twice the distance Tom ran. If Tom ran 10 miles, how far did Olivia run?\n    \"\"\"\n    distanceTomRan = 10  # miles\n    twiceDistanceTomRan = 2 * distanceTomRan  # miles\n    additionalDistanceOliviaRan = 3  # miles\n    result = twiceDistanceTomRan + additionalDistanceOliviaRan  # miles\n\n    return result\n\n# Example usage:\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Olivia and Tom both ran in a marathon. Olivia ran 3 miles more than twice the distance Tom ran. If Tom ran 10 miles, how far did Olivia run?\n    \"\"\"\n    distanceTomRan = 10  # miles\n    twiceDistanceTomRan = 2 * distanceTomRan  # miles\n    additionalDistanceOliviaRan = 3  # miles\n    result = twiceDistanceTomRan + additionalDistanceOliviaRan  # miles\n\n    return result\n\n# Example usage:\nprint(simple_math_problem())",
    "result": 23
  },
  {
    "index": 24,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Marcus wants to buy a laptop for school. He can get a 25% discount on a $1200 laptop at Best Buy, or a 15% discount and a $100 gift card on a $1300 laptop at Target. How much money would he save by choosing the cheaper option?\n    \"\"\"\n    best_buy_laptop_price = 1200\n    best_buy_discount_percentage = 0.25\n    best_buy_discount_amount = best_buy_laptop_price * best_buy_discount_percentage\n    best_buy_laptop_price_after_discount = best_buy_laptop_price - best_buy_discount_amount\n\n    target_laptop_price = 1300\n    target_discount_percentage = 0.15\n    target_discount_amount = target_laptop_price * target_discount_percentage\n    target_gift_card_value = 100\n    target_laptop_price_after_discount_and_gift_card = target_laptop_price - target_discount_amount - target_gift_card_value\n\n    savings = abs(best_buy_laptop_price_after_discount - target_laptop_price_after_discount_and_gift_card)\n    result = savings\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Marcus wants to buy a laptop for school. He can get a 25% discount on a $1200 laptop at Best Buy, or a 15% discount and a $100 gift card on a $1300 laptop at Target. How much money would he save by choosing the cheaper option?\n    \"\"\"\n    best_buy_laptop_price = 1200\n    best_buy_discount_percentage = 0.25\n    best_buy_discount_amount = best_buy_laptop_price * best_buy_discount_percentage\n    best_buy_laptop_price_after_discount = best_buy_laptop_price - best_buy_discount_amount\n\n    target_laptop_price = 1300\n    target_discount_percentage = 0.15\n    target_discount_amount = target_laptop_price * target_discount_percentage\n    target_gift_card_value = 100\n    target_laptop_price_after_discount_and_gift_card = target_laptop_price - target_discount_amount - target_gift_card_value\n\n    savings = abs(best_buy_laptop_price_after_discount - target_laptop_price_after_discount_and_gift_card)\n    result = savings\n\n    return result\n\nprint(simple_math_problem())",
    "result": 105.0
  },
  {
    "index": 25,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Student: Sean needed to buy sand for his sandcastle. He noticed that the bags of sand cost $5 per bag and he needed 10 bags. If he also had a coupon for $2 off each bag, how much will Sean spend in total?\n    \"\"\"\n    cost_per_bag = 5\n    number_of_bags = 10\n    discount_per_bag = 2\n    discounted_cost_per_bag = cost_per_bag - discount_per_bag\n    total_cost = discounted_cost_per_bag * number_of_bags\n    result = total_cost\n\n    return result\n\n# Example usage\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Student: Sean needed to buy sand for his sandcastle. He noticed that the bags of sand cost $5 per bag and he needed 10 bags. If he also had a coupon for $2 off each bag, how much will Sean spend in total?\n    \"\"\"\n    cost_per_bag = 5\n    number_of_bags = 10\n    discount_per_bag = 2\n    discounted_cost_per_bag = cost_per_bag - discount_per_bag\n    total_cost = discounted_cost_per_bag * number_of_bags\n    result = total_cost\n\n    return result\n\n# Example usage\nprint(simple_math_problem())",
    "result": 30
  },
  {
    "index": 26,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Katie wants to sell her $7.00 hats and $4.00 gloves. She reduced the prices by 40%. If she sold the last 15 hats and 10 gloves, how much money did she make?\n    \"\"\"\n    original_hat_price = 7.00\n    original_glove_price = 4.00\n    reduction_percentage = 0.40\n    number_of_hats_sold = 15\n    number_of_gloves_sold = 10\n    \n    reduced_hat_price = original_hat_price * (1 - reduction_percentage)\n    reduced_glove_price = original_glove_price * (1 - reduction_percentage)\n    \n    total_hat_revenue = reduced_hat_price * number_of_hats_sold\n    total_glove_revenue = reduced_glove_price * number_of_gloves_sold\n    \n    result = total_hat_revenue + total_glove_revenue\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Katie wants to sell her $7.00 hats and $4.00 gloves. She reduced the prices by 40%. If she sold the last 15 hats and 10 gloves, how much money did she make?\n    \"\"\"\n    original_hat_price = 7.00\n    original_glove_price = 4.00\n    reduction_percentage = 0.40\n    number_of_hats_sold = 15\n    number_of_gloves_sold = 10\n    \n    reduced_hat_price = original_hat_price * (1 - reduction_percentage)\n    reduced_glove_price = original_glove_price * (1 - reduction_percentage)\n    \n    total_hat_revenue = reduced_hat_price * number_of_hats_sold\n    total_glove_revenue = reduced_glove_price * number_of_gloves_sold\n    \n    result = total_hat_revenue + total_glove_revenue\n\n    return result\n\nprint(simple_math_problem())",
    "result": 87.0
  },
  {
    "index": 27,
    "response": "```python\ndef simple_math_problem() -> float:\n\"\"\"\nShe divided them evenly between her 4 friends and her brother. How many carrots did each person receive?\n\"\"\"\n# Since the problem doesn't specify the total number of carrots, we'll assume a variable for it\ntotalCarrots = 1  # This could be any number, but for simplicity, we'll use 1\nnumber_of_friends = 4\nnumber_of_brother = 1\ntotal_people = number_of_friends + number_of_brother\ncarrots_per_person = totalCarrots / total_people\nresult = carrots_per_person\n\nreturn result\n\n# Test the function\nprint(simple_math_problem())\n```\nHowever, the above code will not give a meaningful answer because the problem statement doesn't provide enough information to determine the number of carrots each person received. To get a meaningful answer, we would need to know the total number of carrots. \n\nLet's modify the problem to include the total number of carrots. \n\n```python\ndef simple_math_problem() -> float:\n\"\"\"\nShe had 20 carrots and divided them evenly between her 4 friends and her brother. How many carrots did each person receive?\n\"\"\"\ntotalCarrots = 20\nnumber_of_friends = 4\nnumber_of_brother = 1\ntotal_people = number_of_friends + number_of_brother\ncarrots_per_person = totalCarrots / total_people\nresult = carrots_per_person\n\nreturn result\n\n# Test the function\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    She divided them evenly between her 4 friends and her brother. How many carrots did each person receive?\n    \"\"\"\n    # Since the problem doesn't specify the total number of carrots, we'll assume a variable for it\n    totalCarrots = 1  # This could be any number, but for simplicity, we'll use 1\n    number_of_friends = 4\n    number_of_brother = 1\n    total_people = number_of_friends + number_of_brother\n    carrots_per_person = totalCarrots / total_people\n    result = carrots_per_person\n\n    return result\n\n    # Test the function\n    print(simple_math_problem())",
    "result": 0.2
  },
  {
    "index": 28,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Thomas’s family had a $18 budget for dinner. They spent $6 on bread and $4 on vegetables. How much more do they need to buy?\n    \"\"\"\n    total_budget = 18\n    cost_of_bread = 6\n    cost_of_vegetables = 4\n    total_spent = cost_of_bread + cost_of_vegetables\n    amount_left = total_budget - total_spent\n    result = amount_left\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Thomas’s family had a $18 budget for dinner. They spent $6 on bread and $4 on vegetables. How much more do they need to buy?\n    \"\"\"\n    total_budget = 18\n    cost_of_bread = 6\n    cost_of_vegetables = 4\n    total_spent = cost_of_bread + cost_of_vegetables\n    amount_left = total_budget - total_spent\n    result = amount_left\n\n    return result\n\nprint(simple_math_problem())",
    "result": 8
  },
  {
    "index": 29,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A factory can produce 200 items in a day. They have a monthly target of 6000 items. How many days do they need to meet the target for the month?\n    \"\"\"\n    items_produced_per_day = 200\n    monthly_target = 6000\n    days_needed = monthly_target / items_produced_per_day\n    result = days_needed\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A factory can produce 200 items in a day. They have a monthly target of 6000 items. How many days do they need to meet the target for the month?\n    \"\"\"\n    items_produced_per_day = 200\n    monthly_target = 6000\n    days_needed = monthly_target / items_produced_per_day\n    result = days_needed\n\n    return result\n\nprint(simple_math_problem())",
    "result": 30.0
  },
  {
    "index": 30,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A phone bill is $45 per month plus $0.15 per minute of long-distance calls. If Sarah's phone bill was $75, how many minutes of long-distance calls did she make?\n    \"\"\"\n    base_phone_bill = 45\n    total_phone_bill = 75\n    cost_per_minute = 0.15\n    long_distance_call_cost = total_phone_bill - base_phone_bill\n    minutes_of_long_distance_calls = long_distance_call_cost / cost_per_minute\n    result = minutes_of_long_distance_calls\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A phone bill is $45 per month plus $0.15 per minute of long-distance calls. If Sarah's phone bill was $75, how many minutes of long-distance calls did she make?\n    \"\"\"\n    base_phone_bill = 45\n    total_phone_bill = 75\n    cost_per_minute = 0.15\n    long_distance_call_cost = total_phone_bill - base_phone_bill\n    minutes_of_long_distance_calls = long_distance_call_cost / cost_per_minute\n    result = minutes_of_long_distance_calls\n\n    return result\n\nprint(simple_math_problem())",
    "result": 200.0
  },
  {
    "index": 31,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    At a fitness center, it costs $10 for an hour of cardio and $2 for every 15 minutes in the sauna. Sarah decides to work out and spends 30 minutes on the treadmill and another 45 minutes in the sauna. What would be her total bill?\n    \"\"\"\n    cardio_cost_per_hour = 10\n    sauna_cost_per_15_minutes = 2\n    cardio_time_in_minutes = 30\n    sauna_time_in_minutes = 45\n    \n    # Calculate cardio cost\n    cardio_time_in_hours = cardio_time_in_minutes / 60\n    cardio_cost = cardio_cost_per_hour * cardio_time_in_hours\n    \n    # Calculate sauna cost\n    sauna_time_in_15_minutes = sauna_time_in_minutes / 15\n    sauna_cost = sauna_cost_per_15_minutes * sauna_time_in_15_minutes\n    \n    # Calculate total bill\n    result = cardio_cost + sauna_cost\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    At a fitness center, it costs $10 for an hour of cardio and $2 for every 15 minutes in the sauna. Sarah decides to work out and spends 30 minutes on the treadmill and another 45 minutes in the sauna. What would be her total bill?\n    \"\"\"\n    cardio_cost_per_hour = 10\n    sauna_cost_per_15_minutes = 2\n    cardio_time_in_minutes = 30\n    sauna_time_in_minutes = 45\n    \n    # Calculate cardio cost\n    cardio_time_in_hours = cardio_time_in_minutes / 60\n    cardio_cost = cardio_cost_per_hour * cardio_time_in_hours\n    \n    # Calculate sauna cost\n    sauna_time_in_15_minutes = sauna_time_in_minutes / 15\n    sauna_cost = sauna_cost_per_15_minutes * sauna_time_in_15_minutes\n    \n    # Calculate total bill\n    result = cardio_cost + sauna_cost\n\n    return result\n\nprint(simple_math_problem())",
    "result": 11.0
  },
  {
    "index": 32,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A store is having a sale where all items are 20% off. If a pair of shoes originally cost $60, how much will they cost during the sale?\n    \"\"\"\n    original_price = 60\n    discount_percentage = 0.20\n    discount_amount = original_price * discount_percentage\n    result = original_price - discount_amount\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A store is having a sale where all items are 20% off. If a pair of shoes originally cost $60, how much will they cost during the sale?\n    \"\"\"\n    original_price = 60\n    discount_percentage = 0.20\n    discount_amount = original_price * discount_percentage\n    result = original_price - discount_amount\n\n    return result\n\nprint(simple_math_problem())",
    "result": 48.0
  },
  {
    "index": 33,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    Student: Leslie has 12 green gummy bears, 4 fewer yellow gummy bears than green, and 7 more blue gummy bears than yellow. How many gummy bears does Leslie have?\n    \"\"\"\n    green_gummy_bears = 12\n    yellow_gummy_bears = green_gummy_bears - 4\n    blue_gummy_bears = yellow_gummy_bears + 7\n    total_gummy_bears = green_gummy_bears + yellow_gummy_bears + blue_gummy_bears\n    result = total_gummy_bears\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    Student: Leslie has 12 green gummy bears, 4 fewer yellow gummy bears than green, and 7 more blue gummy bears than yellow. How many gummy bears does Leslie have?\n    \"\"\"\n    green_gummy_bears = 12\n    yellow_gummy_bears = green_gummy_bears - 4\n    blue_gummy_bears = yellow_gummy_bears + 7\n    total_gummy_bears = green_gummy_bears + yellow_gummy_bears + blue_gummy_bears\n    result = total_gummy_bears\n\n    return result\n\nprint(simple_math_problem())",
    "result": 35
  },
  {
    "index": 34,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Sophia spent $10 on Monday and spent half as much on Tuesday. On Wednesday, she spent 3 times as much as she did on Monday. How much money did Sophia spend in total in the three days?\n    \"\"\"\n    monday_spending = 10\n    tuesday_spending = monday_spending / 2\n    wednesday_spending = monday_spending * 3\n    total_spending = monday_spending + tuesday_spending + wednesday_spending\n    result = total_spending\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Sophia spent $10 on Monday and spent half as much on Tuesday. On Wednesday, she spent 3 times as much as she did on Monday. How much money did Sophia spend in total in the three days?\n    \"\"\"\n    monday_spending = 10\n    tuesday_spending = monday_spending / 2\n    wednesday_spending = monday_spending * 3\n    total_spending = monday_spending + tuesday_spending + wednesday_spending\n    result = total_spending\n\n    return result\n\nprint(simple_math_problem())",
    "result": 45.0
  },
  {
    "index": 35,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    Student: Alex has 15 coins in his piggy bank. He added 8 coins and took out 5 coins. How many coins does Alex have now?\n    \"\"\"\n    initial_coins = 15\n    coins_added = 8\n    coins_removed = 5\n    total_coins_after_addition = initial_coins + coins_added\n    result = total_coins_after_addition - coins_removed\n\n    return result\n\n# Example usage\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    Student: Alex has 15 coins in his piggy bank. He added 8 coins and took out 5 coins. How many coins does Alex have now?\n    \"\"\"\n    initial_coins = 15\n    coins_added = 8\n    coins_removed = 5\n    total_coins_after_addition = initial_coins + coins_added\n    result = total_coins_after_addition - coins_removed\n\n    return result\n\n# Example usage\nprint(simple_math_problem())",
    "result": 18
  },
  {
    "index": 36,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A train is traveling from New York to Boston at an average speed of 60 miles per hour. A car starts from New York at the same time and follows the train, maintaining a steady distance of 10 miles behind it. The car is traveling at an average speed of 70 miles per hour. How far from New York will they be after two hours?\n    \"\"\"\n    train_speed = 60  # miles per hour\n    car_speed = 70  # miles per hour\n    time = 2  # hours\n    distance_between_train_and_car = 10  # miles\n\n    # Calculate the distance the train travels in 2 hours\n    distance_train_travels = train_speed * time\n    \n    # Calculate the distance the car travels in 2 hours\n    distance_car_travels = car_speed * time\n    \n    # Since the car is maintaining a steady distance of 10 miles behind the train,\n    # the distance from New York for both the train and the car will be the same as the distance the train travels\n    # because the car's extra speed is used to maintain the 10-mile gap, not to increase its distance from New York\n    result = distance_train_travels\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A train is traveling from New York to Boston at an average speed of 60 miles per hour. A car starts from New York at the same time and follows the train, maintaining a steady distance of 10 miles behind it. The car is traveling at an average speed of 70 miles per hour. How far from New York will they be after two hours?\n    \"\"\"\n    train_speed = 60  # miles per hour\n    car_speed = 70  # miles per hour\n    time = 2  # hours\n    distance_between_train_and_car = 10  # miles\n\n    # Calculate the distance the train travels in 2 hours\n    distance_train_travels = train_speed * time\n    \n    # Calculate the distance the car travels in 2 hours\n    distance_car_travels = car_speed * time\n    \n    # Since the car is maintaining a steady distance of 10 miles behind the train,\n    # the distance from New York for both the train and the car will be the same as the distance the train travels\n    # because the car's extra speed is used to maintain the 10-mile gap, not to increase its distance from New York\n    result = distance_train_travels\n\n    return result\n\nprint(simple_math_problem())",
    "result": 120
  },
  {
    "index": 37,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A team played 15 games and won 5 games. What fraction of the games did they win?\n    \"\"\"\n    total_games_played = 15\n    games_won = 5\n    fraction_won = games_won / total_games_played\n    result = fraction_won\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A team played 15 games and won 5 games. What fraction of the games did they win?\n    \"\"\"\n    total_games_played = 15\n    games_won = 5\n    fraction_won = games_won / total_games_played\n    result = fraction_won\n\n    return result\n\nprint(simple_math_problem())",
    "result": 0.3333333333333333
  },
  {
    "index": 38,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    After hosting a garage sale, Julian made $1500 by selling his old belongings. His neighbor, Olivia, made 80% of Julian's earnings after selling her own items. How much money did Olivia make in total?\n    \"\"\"\n    julians_earnings = 1500\n    olivias_earnings_percentage = 0.8\n    olivias_earnings = julians_earnings * olivias_earnings_percentage\n    result = olivias_earnings\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    After hosting a garage sale, Julian made $1500 by selling his old belongings. His neighbor, Olivia, made 80% of Julian's earnings after selling her own items. How much money did Olivia make in total?\n    \"\"\"\n    julians_earnings = 1500\n    olivias_earnings_percentage = 0.8\n    olivias_earnings = julians_earnings * olivias_earnings_percentage\n    result = olivias_earnings\n\n    return result\n\nprint(simple_math_problem())",
    "result": 1200.0
  },
  {
    "index": 39,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    Mary has 75 apples. If she eats 25 apples, and then gives away 3 times more apples than she has, how many apples does Mary have in total?\n    \"\"\"\n    initial_apples = 75\n    apples_eaten = 25\n    apples_left_after_eating = initial_apples - apples_eaten\n    apples_given_away = 3 * apples_left_after_eating\n    result = apples_left_after_eating - apples_given_away\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    Mary has 75 apples. If she eats 25 apples, and then gives away 3 times more apples than she has, how many apples does Mary have in total?\n    \"\"\"\n    initial_apples = 75\n    apples_eaten = 25\n    apples_left_after_eating = initial_apples - apples_eaten\n    apples_given_away = 3 * apples_left_after_eating\n    result = apples_left_after_eating - apples_given_away\n\n    return result\n\nprint(simple_math_problem())",
    "result": -100
  },
  {
    "index": 40,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    There are 12 more pens in the box today than yesterday. There were one fourth as many pens yesterday as there were the day before, and the day before had 48 pens. How many pens are there in the box today?\n    \"\"\"\n    pens_day_before_yesterday = 48\n    pens_yesterday = pens_day_before_yesterday / 4\n    pens_today = pens_yesterday + 12\n    result = int(pens_today)\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    There are 12 more pens in the box today than yesterday. There were one fourth as many pens yesterday as there were the day before, and the day before had 48 pens. How many pens are there in the box today?\n    \"\"\"\n    pens_day_before_yesterday = 48\n    pens_yesterday = pens_day_before_yesterday / 4\n    pens_today = pens_yesterday + 12\n    result = int(pens_today)\n\n    return result\n\nprint(simple_math_problem())",
    "result": 24
  },
  {
    "index": 41,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    Alan wants to buy some candies for his party. He finds a store that sells 5 mints for $1 and 3 chocolates for $2. He has $15 to spend and he wants to get as many candies as possible. How many candies can he buy?\n    \"\"\"\n    budget = 15  # Total budget Alan has\n    mints_per_dollar = 5  # Number of mints Alan can buy for $1\n    chocolates_per_two_dollars = 3  # Number of chocolates Alan can buy for $2\n\n    # Calculate the maximum number of mints and chocolates Alan can buy\n    max_mints = budget * mints_per_dollar  # If Alan only buys mints\n    max_chocolates = (budget // 2) * chocolates_per_two_dollars  # If Alan only buys chocolates\n\n    # Calculate the number of mints and chocolates Alan can buy with a combination of both\n    mints_and_chocolates = 0\n    for i in range(budget // 2 + 1):\n        remaining_budget = budget - i * 2\n        mints = remaining_budget * mints_per_dollar\n        chocolates = i * chocolates_per_two_dollars\n        total_candies = mints + chocolates\n        if total_candies > mints_and_chocolates:\n            mints_and_chocolates = total_candies\n\n    # Choose the option that gives Alan the most candies\n    result = max(max_mints, max_chocolates, mints_and_chocolates)\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    Alan wants to buy some candies for his party. He finds a store that sells 5 mints for $1 and 3 chocolates for $2. He has $15 to spend and he wants to get as many candies as possible. How many candies can he buy?\n    \"\"\"\n    budget = 15  # Total budget Alan has\n    mints_per_dollar = 5  # Number of mints Alan can buy for $1\n    chocolates_per_two_dollars = 3  # Number of chocolates Alan can buy for $2\n\n    # Calculate the maximum number of mints and chocolates Alan can buy\n    max_mints = budget * mints_per_dollar  # If Alan only buys mints\n    max_chocolates = (budget // 2) * chocolates_per_two_dollars  # If Alan only buys chocolates\n\n    # Calculate the number of mints and chocolates Alan can buy with a combination of both\n    mints_and_chocolates = 0\n    for i in range(budget // 2 + 1):\n        remaining_budget = budget - i * 2\n        mints = remaining_budget * mints_per_dollar\n        chocolates = i * chocolates_per_two_dollars\n        total_candies = mints + chocolates\n        if total_candies > mints_and_chocolates:\n            mints_and_chocolates = total_candies\n\n    # Choose the option that gives Alan the most candies\n    result = max(max_mints, max_chocolates, mints_and_chocolates)\n\n    return result\n\nprint(simple_math_problem())",
    "result": 75
  },
  {
    "index": 42,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    At a pet store, one fish costs $5 each; a bird costs $20; a hamster costs $15. All pets will get a 20% discount. How much does Fred have to pay if he buys five fish, two birds, and one hamster?\n    \"\"\"\n    cost_per_fish = 5\n    cost_per_bird = 20\n    cost_per_hamster = 15\n    number_of_fish = 5\n    number_of_birds = 2\n    number_of_hamsters = 1\n    total_cost_before_discount = (cost_per_fish * number_of_fish) + (cost_per_bird * number_of_birds) + (cost_per_hamster * number_of_hamsters)\n    discount_percentage = 0.20\n    discount_amount = total_cost_before_discount * discount_percentage\n    result = total_cost_before_discount - discount_amount\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    At a pet store, one fish costs $5 each; a bird costs $20; a hamster costs $15. All pets will get a 20% discount. How much does Fred have to pay if he buys five fish, two birds, and one hamster?\n    \"\"\"\n    cost_per_fish = 5\n    cost_per_bird = 20\n    cost_per_hamster = 15\n    number_of_fish = 5\n    number_of_birds = 2\n    number_of_hamsters = 1\n    total_cost_before_discount = (cost_per_fish * number_of_fish) + (cost_per_bird * number_of_birds) + (cost_per_hamster * number_of_hamsters)\n    discount_percentage = 0.20\n    discount_amount = total_cost_before_discount * discount_percentage\n    result = total_cost_before_discount - discount_amount\n\n    return result\n\nprint(simple_math_problem())",
    "result": 64.0
  },
  {
    "index": 43,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A lunch meal costs $10 and a dinner meal costs $20. If Adam spends $70 on meals and buys 4 dinner meals, how many lunch meals did he buy?\n    \"\"\"\n    cost_of_lunch_meal = 10\n    cost_of_dinner_meal = 20\n    total_spent = 70\n    number_of_dinner_meals = 4\n    \n    total_cost_of_dinner_meals = cost_of_dinner_meal * number_of_dinner_meals\n    remaining_amount_after_dinner = total_spent - total_cost_of_dinner_meals\n    number_of_lunch_meals = remaining_amount_after_dinner / cost_of_lunch_meal\n    \n    result = number_of_lunch_meals\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A lunch meal costs $10 and a dinner meal costs $20. If Adam spends $70 on meals and buys 4 dinner meals, how many lunch meals did he buy?\n    \"\"\"\n    cost_of_lunch_meal = 10\n    cost_of_dinner_meal = 20\n    total_spent = 70\n    number_of_dinner_meals = 4\n    \n    total_cost_of_dinner_meals = cost_of_dinner_meal * number_of_dinner_meals\n    remaining_amount_after_dinner = total_spent - total_cost_of_dinner_meals\n    number_of_lunch_meals = remaining_amount_after_dinner / cost_of_lunch_meal\n    \n    result = number_of_lunch_meals\n\n    return result\n\nprint(simple_math_problem())",
    "result": -1.0
  },
  {
    "index": 44,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    A farm is trying to estimate how much produce they'll need for an upcoming farmer's market. They sold 32 crates of tomatoes, 22 crates of lettuce, and 16 crates of cucumbers during last week's market. If they expect to sell four times as many crates of tomatoes as they did last week, how many crates of tomatoes do they expect to sell at the next market?\n    \"\"\"\n    crates_of_tomatoes_last_week = 32\n    crates_of_lettuce_last_week = 22\n    crates_of_cucumbers_last_week = 16\n    expected_multiplier = 4\n    expected_crates_of_tomatoes = crates_of_tomatoes_last_week * expected_multiplier\n    result = expected_crates_of_tomatoes\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    A farm is trying to estimate how much produce they'll need for an upcoming farmer's market. They sold 32 crates of tomatoes, 22 crates of lettuce, and 16 crates of cucumbers during last week's market. If they expect to sell four times as many crates of tomatoes as they did last week, how many crates of tomatoes do they expect to sell at the next market?\n    \"\"\"\n    crates_of_tomatoes_last_week = 32\n    crates_of_lettuce_last_week = 22\n    crates_of_cucumbers_last_week = 16\n    expected_multiplier = 4\n    expected_crates_of_tomatoes = crates_of_tomatoes_last_week * expected_multiplier\n    result = expected_crates_of_tomatoes\n\n    return result\n\nprint(simple_math_problem())",
    "result": 128
  },
  {
    "index": 45,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A convenience store sells 280 gallons of iced tea in a week. They buy iced tea syrup boxes that can make 40 gallons of iced tea, and each box costs $25. How much do they pay for iced tea syrup boxes in a week?\n    \"\"\"\n    gallons_of_iced_tea_sold = 280\n    gallons_per_syrup_box = 40\n    cost_per_syrup_box = 25\n    syrup_boxes_needed = gallons_of_iced_tea_sold / gallons_per_syrup_box\n    result = syrup_boxes_needed * cost_per_syrup_box\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A convenience store sells 280 gallons of iced tea in a week. They buy iced tea syrup boxes that can make 40 gallons of iced tea, and each box costs $25. How much do they pay for iced tea syrup boxes in a week?\n    \"\"\"\n    gallons_of_iced_tea_sold = 280\n    gallons_per_syrup_box = 40\n    cost_per_syrup_box = 25\n    syrup_boxes_needed = gallons_of_iced_tea_sold / gallons_per_syrup_box\n    result = syrup_boxes_needed * cost_per_syrup_box\n\n    return result\n\nprint(simple_math_problem())",
    "result": 175.0
  },
  {
    "index": 46,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A car travels at a speed of 60 km/h for 2 hours. How far does the car travel (in kilometers)?\n    \"\"\"\n    speed_of_car = 60  # km/h\n    time_traveled = 2  # hours\n    distance_traveled = speed_of_car * time_traveled\n    result = distance_traveled\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A car travels at a speed of 60 km/h for 2 hours. How far does the car travel (in kilometers)?\n    \"\"\"\n    speed_of_car = 60  # km/h\n    time_traveled = 2  # hours\n    distance_traveled = speed_of_car * time_traveled\n    result = distance_traveled\n\n    return result\n\nprint(simple_math_problem())",
    "result": 120
  },
  {
    "index": 47,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Katy wants to buy 4 boxes of chocolates for her family as a gift. Each box of chocolates costs $12 and has a 10% discount. How much will Katy pay for the chocolates in total?\n    \"\"\"\n    boxes_of_chocolates = 4\n    cost_per_box = 12\n    discount_percentage = 0.10\n    total_cost_before_discount = boxes_of_chocolates * cost_per_box\n    discount_amount = total_cost_before_discount * discount_percentage\n    result = total_cost_before_discount - discount_amount\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Katy wants to buy 4 boxes of chocolates for her family as a gift. Each box of chocolates costs $12 and has a 10% discount. How much will Katy pay for the chocolates in total?\n    \"\"\"\n    boxes_of_chocolates = 4\n    cost_per_box = 12\n    discount_percentage = 0.10\n    total_cost_before_discount = boxes_of_chocolates * cost_per_box\n    discount_amount = total_cost_before_discount * discount_percentage\n    result = total_cost_before_discount - discount_amount\n\n    return result\n\nprint(simple_math_problem())",
    "result": 43.2
  },
  {
    "index": 48,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    A company has 40 employees who are eligible for a bonus. The first half saw 20 employees get a bonus with 5 more getting one in the second half. In the third half, the company gave out twice as many bonuses as it did in the second half. How many employees did not receive a bonus?\n    \"\"\"\n    total_employees = 40\n    bonuses_first_half = 20\n    bonuses_second_half = 5\n    bonuses_third_half = bonuses_second_half * 2\n    total_bonuses_given = bonuses_first_half + bonuses_second_half + bonuses_third_half\n    employees_without_bonus = total_employees - total_bonuses_given\n    result = employees_without_bonus\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    A company has 40 employees who are eligible for a bonus. The first half saw 20 employees get a bonus with 5 more getting one in the second half. In the third half, the company gave out twice as many bonuses as it did in the second half. How many employees did not receive a bonus?\n    \"\"\"\n    total_employees = 40\n    bonuses_first_half = 20\n    bonuses_second_half = 5\n    bonuses_third_half = bonuses_second_half * 2\n    total_bonuses_given = bonuses_first_half + bonuses_second_half + bonuses_third_half\n    employees_without_bonus = total_employees - total_bonuses_given\n    result = employees_without_bonus\n\n    return result\n\nprint(simple_math_problem())",
    "result": 5
  },
  {
    "index": 49,
    "response": "```python\ndef simple_math_problem() -> float:\n\"\"\"\nEric has a stack of 200 books. He reads 1/3 of the books and then gives away 2/5 of the remaining books to his local library. How many books does he give away?\n\"\"\"\ntotal_books = 200\nbooks_read = total_books * (1/3)\nremaining_books = total_books - books_read\nbooks_given_away = remaining_books * (2/5)\nresult = books_given_away\n\nreturn result\n\n# Example usage:\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Eric has a stack of 200 books. He reads 1/3 of the books and then gives away 2/5 of the remaining books to his local library. How many books does he give away?\n    \"\"\"\n    total_books = 200\n    books_read = total_books * (1/3)\n    remaining_books = total_books - books_read\n    books_given_away = remaining_books * (2/5)\n    result = books_given_away\n\n    return result\n\n    # Example usage:\n    print(simple_math_problem())",
    "result": 53.33333333333334
  },
  {
    "index": 50,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Emma filled up her car with 12 gallons of gas, each gallon costing $2.50. She paid with a $50 bill. How much change did Emma get?\n    \"\"\"\n    gallons_of_gas = 12\n    cost_per_gallon = 2.50\n    total_cost = gallons_of_gas * cost_per_gallon\n    amount_paid = 50\n    change = amount_paid - total_cost\n    result = change\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Emma filled up her car with 12 gallons of gas, each gallon costing $2.50. She paid with a $50 bill. How much change did Emma get?\n    \"\"\"\n    gallons_of_gas = 12\n    cost_per_gallon = 2.50\n    total_cost = gallons_of_gas * cost_per_gallon\n    amount_paid = 50\n    change = amount_paid - total_cost\n    result = change\n\n    return result\n\nprint(simple_math_problem())",
    "result": 20.0
  },
  {
    "index": 51,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A rectangular plot of land is 5 meters long and 3 meters wide. If wheat costs $10 per square meter to plant, what is the cost of planting the entire plot with wheat?\n    \"\"\"\n    length_of_plot = 5  # in meters\n    width_of_plot = 3  # in meters\n    cost_per_square_meter = 10  # in dollars\n    area_of_plot = length_of_plot * width_of_plot\n    result = area_of_plot * cost_per_square_meter\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A rectangular plot of land is 5 meters long and 3 meters wide. If wheat costs $10 per square meter to plant, what is the cost of planting the entire plot with wheat?\n    \"\"\"\n    length_of_plot = 5  # in meters\n    width_of_plot = 3  # in meters\n    cost_per_square_meter = 10  # in dollars\n    area_of_plot = length_of_plot * width_of_plot\n    result = area_of_plot * cost_per_square_meter\n\n    return result\n\nprint(simple_math_problem())",
    "result": 150
  },
  {
    "index": 52,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A teacher gave a test with a possible score of 100 points. Peter got an 85% grade on the test. What was his score?\n    \"\"\"\n    total_possible_score = 100\n    peter_grade_percentage = 85\n    peter_score = (peter_grade_percentage / 100) * total_possible_score\n    result = peter_score\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A teacher gave a test with a possible score of 100 points. Peter got an 85% grade on the test. What was his score?\n    \"\"\"\n    total_possible_score = 100\n    peter_grade_percentage = 85\n    peter_score = (peter_grade_percentage / 100) * total_possible_score\n    result = peter_score\n\n    return result\n\nprint(simple_math_problem())",
    "result": 85.0
  },
  {
    "index": 53,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Jacob needs to fill a container with 5 1/2 cups of rice. The only measuring cup he has is the 1 cup. He has a 9 cup bag of rice and wants to measure out the exact amount he needs. How many cupfuls should he remove?\n    \"\"\"\n    total_cups_in_bag = 9\n    cups_needed = 5.5\n    cups_to_remove = total_cups_in_bag - cups_needed\n    result = cups_to_remove\n\n    return result\n\n# Example usage\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Jacob needs to fill a container with 5 1/2 cups of rice. The only measuring cup he has is the 1 cup. He has a 9 cup bag of rice and wants to measure out the exact amount he needs. How many cupfuls should he remove?\n    \"\"\"\n    total_cups_in_bag = 9\n    cups_needed = 5.5\n    cups_to_remove = total_cups_in_bag - cups_needed\n    result = cups_to_remove\n\n    return result\n\n# Example usage\nprint(simple_math_problem())",
    "result": 3.5
  },
  {
    "index": 54,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A box contains 60 chocolates. If 3/5 of the chocolates are eaten, how many are left in the box?\n    \"\"\"\n    total_chocolates = 60\n    fraction_eaten = 3 / 5\n    chocolates_eaten = total_chocolates * fraction_eaten\n    chocolates_left = total_chocolates - chocolates_eaten\n    result = chocolates_left\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A box contains 60 chocolates. If 3/5 of the chocolates are eaten, how many are left in the box?\n    \"\"\"\n    total_chocolates = 60\n    fraction_eaten = 3 / 5\n    chocolates_eaten = total_chocolates * fraction_eaten\n    chocolates_left = total_chocolates - chocolates_eaten\n    result = chocolates_left\n\n    return result\n\nprint(simple_math_problem())",
    "result": 24.0
  },
  {
    "index": 55,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A store is offering a 20% discount on all items. If John spends $500 at the store, how much money does he save on his purchases?\n    \"\"\"\n    original_price = 500  # The original price John would pay without discount\n    discount_percentage = 0.20  # The discount percentage as a decimal\n    discount_amount = original_price * discount_percentage  # Calculate the discount amount\n    result = discount_amount  # The result is the discount amount\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A store is offering a 20% discount on all items. If John spends $500 at the store, how much money does he save on his purchases?\n    \"\"\"\n    original_price = 500  # The original price John would pay without discount\n    discount_percentage = 0.20  # The discount percentage as a decimal\n    discount_amount = original_price * discount_percentage  # Calculate the discount amount\n    result = discount_amount  # The result is the discount amount\n\n    return result\n\nprint(simple_math_problem())",
    "result": 100.0
  },
  {
    "index": 56,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A shop sells pens in packs of 6 for $15. If you want to buy 24 pens, how much will it cost?\n    \"\"\"\n    pens_per_pack = 6\n    cost_per_pack = 15\n    total_pens_wanted = 24\n    packs_needed = total_pens_wanted / pens_per_pack\n    result = packs_needed * cost_per_pack\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A shop sells pens in packs of 6 for $15. If you want to buy 24 pens, how much will it cost?\n    \"\"\"\n    pens_per_pack = 6\n    cost_per_pack = 15\n    total_pens_wanted = 24\n    packs_needed = total_pens_wanted / pens_per_pack\n    result = packs_needed * cost_per_pack\n\n    return result\n\nprint(simple_math_problem())",
    "result": 60.0
  },
  {
    "index": 57,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    The Yeti club hosted an event where members had to bear frigid temperatures in a pool of freezing water. Kai lasted for 4 minutes before giving up, while Jess was able to last twice as long as Kai. Freddie, unfortunately, was not able to participate. How many minutes in total did the members spend in the pool?\n    \"\"\"\n    kaiDuration = 4  # minutes\n    jessDuration = 2 * kaiDuration  # minutes\n    freddieDuration = 0  # minutes, since Freddie did not participate\n    totalDuration = kaiDuration + jessDuration + freddieDuration\n    result = totalDuration\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    The Yeti club hosted an event where members had to bear frigid temperatures in a pool of freezing water. Kai lasted for 4 minutes before giving up, while Jess was able to last twice as long as Kai. Freddie, unfortunately, was not able to participate. How many minutes in total did the members spend in the pool?\n    \"\"\"\n    kaiDuration = 4  # minutes\n    jessDuration = 2 * kaiDuration  # minutes\n    freddieDuration = 0  # minutes, since Freddie did not participate\n    totalDuration = kaiDuration + jessDuration + freddieDuration\n    result = totalDuration\n\n    return result\n\nprint(simple_math_problem())",
    "result": 12
  },
  {
    "index": 58,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A company charges $0.25 for every 1 minute of printing. If a document took 12 minutes to print, how much would it cost?\n    \"\"\"\n    cost_per_minute = 0.25  # Cost per minute in dollars\n    minutes_to_print = 12  # Time taken to print the document in minutes\n    total_cost = cost_per_minute * minutes_to_print  # Calculate total cost\n    result = total_cost\n\n    return result\n\n# Example usage:\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A company charges $0.25 for every 1 minute of printing. If a document took 12 minutes to print, how much would it cost?\n    \"\"\"\n    cost_per_minute = 0.25  # Cost per minute in dollars\n    minutes_to_print = 12  # Time taken to print the document in minutes\n    total_cost = cost_per_minute * minutes_to_print  # Calculate total cost\n    result = total_cost\n\n    return result\n\n# Example usage:\nprint(simple_math_problem())",
    "result": 3.0
  },
  {
    "index": 59,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Ken wants to make a garden bed. The bed needs to be 8 feet long, 4 feet wide, and 0.5 feet deep. How many cubic feet of soil does he need to fill the bed?\n    \"\"\"\n    garden_bed_length = 8\n    garden_bed_width = 4\n    garden_bed_depth = 0.5\n    volume_of_soil_needed = garden_bed_length * garden_bed_width * garden_bed_depth\n    result = volume_of_soil_needed\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Ken wants to make a garden bed. The bed needs to be 8 feet long, 4 feet wide, and 0.5 feet deep. How many cubic feet of soil does he need to fill the bed?\n    \"\"\"\n    garden_bed_length = 8\n    garden_bed_width = 4\n    garden_bed_depth = 0.5\n    volume_of_soil_needed = garden_bed_length * garden_bed_width * garden_bed_depth\n    result = volume_of_soil_needed\n\n    return result\n\nprint(simple_math_problem())",
    "result": 16.0
  },
  {
    "index": 60,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    Student: Lily has 5 more marbles than Kim. Kim has half as many marbles as Sam. If Sam has 24 marbles, how many does Lily have?\n    \"\"\"\n    marblesSamHas = 24\n    marblesKimHas = marblesSamHas / 2\n    marblesLilyHas = marblesKimHas + 5\n    result = int(marblesLilyHas)\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    Student: Lily has 5 more marbles than Kim. Kim has half as many marbles as Sam. If Sam has 24 marbles, how many does Lily have?\n    \"\"\"\n    marblesSamHas = 24\n    marblesKimHas = marblesSamHas / 2\n    marblesLilyHas = marblesKimHas + 5\n    result = int(marblesLilyHas)\n\n    return result\n\nprint(simple_math_problem())",
    "result": 17
  },
  {
    "index": 61,
    "response": "```python\ndef simple_math_problem() -> float:\n\"\"\"\nBilly had 15 candy bars. He ate 3 candy bars and then shared the rest equally with his 4 siblings. How many candy bars did each sibling get?\n\"\"\"\ntotal_candy_bars = 15\ncandy_bars_eaten = 3\nnumber_of_siblings = 4\nremaining_candy_bars = total_candy_bars - candy_bars_eaten\nresult = remaining_candy_bars / number_of_siblings\n\nreturn result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Billy had 15 candy bars. He ate 3 candy bars and then shared the rest equally with his 4 siblings. How many candy bars did each sibling get?\n    \"\"\"\n    total_candy_bars = 15\n    candy_bars_eaten = 3\n    number_of_siblings = 4\n    remaining_candy_bars = total_candy_bars - candy_bars_eaten\n    result = remaining_candy_bars / number_of_siblings\n\n    return result\n\n    print(simple_math_problem())",
    "result": 3.0
  },
  {
    "index": 62,
    "response": "```python\ndef simple_math_problem() -> float:\n\"\"\"\nJustin wants to read a book that has 240 pages. He plans to finish the book in 20 days with the same number of pages read every day. How many pages must he read each day?\n\"\"\"\ntotal_pages = 240\ntotal_days = 20\npages_per_day = total_pages / total_days\nresult = pages_per_day\n\nreturn result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Justin wants to read a book that has 240 pages. He plans to finish the book in 20 days with the same number of pages read every day. How many pages must he read each day?\n    \"\"\"\n    total_pages = 240\n    total_days = 20\n    pages_per_day = total_pages / total_days\n    result = pages_per_day\n\n    return result\n\n    print(simple_math_problem())",
    "result": 12.0
  },
  {
    "index": 63,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A car travels 90km in 1 hour 30 minutes. What is its average speed in km/hour?\n    \"\"\"\n    distance_traveled = 90  # in kilometers\n    time_hours = 1  # in hours\n    time_minutes = 30  # in minutes\n    time_minutes_in_hours = time_minutes / 60  # convert minutes to hours\n    total_time = time_hours + time_minutes_in_hours  # calculate total time in hours\n    result = distance_traveled / total_time  # calculate average speed\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A car travels 90km in 1 hour 30 minutes. What is its average speed in km/hour?\n    \"\"\"\n    distance_traveled = 90  # in kilometers\n    time_hours = 1  # in hours\n    time_minutes = 30  # in minutes\n    time_minutes_in_hours = time_minutes / 60  # convert minutes to hours\n    total_time = time_hours + time_minutes_in_hours  # calculate total time in hours\n    result = distance_traveled / total_time  # calculate average speed\n\n    return result\n\nprint(simple_math_problem())",
    "result": 60.0
  },
  {
    "index": 64,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A student solved 60 math questions within 30 minutes. How many questions did she solve in an hour?\n    \"\"\"\n    questions_solved_in_30_minutes = 60\n    minutes_in_an_hour = 60\n    minutes_for_initial_questions = 30\n    questions_solved_per_minute = questions_solved_in_30_minutes / minutes_for_initial_questions\n    result = questions_solved_per_minute * minutes_in_an_hour\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A student solved 60 math questions within 30 minutes. How many questions did she solve in an hour?\n    \"\"\"\n    questions_solved_in_30_minutes = 60\n    minutes_in_an_hour = 60\n    minutes_for_initial_questions = 30\n    questions_solved_per_minute = questions_solved_in_30_minutes / minutes_for_initial_questions\n    result = questions_solved_per_minute * minutes_in_an_hour\n\n    return result\n\nprint(simple_math_problem())",
    "result": 120.0
  },
  {
    "index": 65,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    How much money would Joseph have in the hedge fund over two and a half year if he invested $1000 and contributed an additional $100 every month?\n    \"\"\"\n    initial_investment = 1000  # Initial amount invested\n    monthly_contribution = 100  # Monthly contribution amount\n    years = 2.5  # Total years\n    months = int(years * 12)  # Total months\n\n    total_contributions = monthly_contribution * months  # Total amount contributed over the period\n    total_investment = initial_investment + total_contributions  # Total amount invested\n\n    result = total_investment\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    How much money would Joseph have in the hedge fund over two and a half year if he invested $1000 and contributed an additional $100 every month?\n    \"\"\"\n    initial_investment = 1000  # Initial amount invested\n    monthly_contribution = 100  # Monthly contribution amount\n    years = 2.5  # Total years\n    months = int(years * 12)  # Total months\n\n    total_contributions = monthly_contribution * months  # Total amount contributed over the period\n    total_investment = initial_investment + total_contributions  # Total amount invested\n\n    result = total_investment\n\n    return result\n\nprint(simple_math_problem())",
    "result": 4000
  },
  {
    "index": 66,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    Jake has 9 baseball cards. His dad buys him 8 more baseball cards. Then, his sister trades him half as many cards as he has, how many cards does Jake have in total?\n    \"\"\"\n    initial_cards = 9\n    cards_from_dad = 8\n    total_cards_before_trade = initial_cards + cards_from_dad\n    cards_from_sister = total_cards_before_trade // 2\n    result = total_cards_before_trade + cards_from_sister\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    Jake has 9 baseball cards. His dad buys him 8 more baseball cards. Then, his sister trades him half as many cards as he has, how many cards does Jake have in total?\n    \"\"\"\n    initial_cards = 9\n    cards_from_dad = 8\n    total_cards_before_trade = initial_cards + cards_from_dad\n    cards_from_sister = total_cards_before_trade // 2\n    result = total_cards_before_trade + cards_from_sister\n\n    return result\n\nprint(simple_math_problem())",
    "result": 25
  },
  {
    "index": 67,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    An assembly line can produce 1000 toys in 2 hours with 10 workers. If each worker is paid $15 for a single hour’s work, how much would it cost to hire 15 workers to produce 2000 toys in 1 hour?\n    \"\"\"\n    # Calculate the production rate per worker per hour\n    toys_per_hour_per_worker = 1000 / (2 * 10)\n    \n    # Calculate the number of workers needed to produce 2000 toys in 1 hour\n    workers_needed = 2000 / (toys_per_hour_per_worker * 1)\n    \n    # Since we are hiring 15 workers, check if it's enough to produce 2000 toys in 1 hour\n    if 15 >= workers_needed:\n        # Calculate the cost of hiring 15 workers for 1 hour\n        hourly_wage_per_worker = 15\n        total_workers = 15\n        hours_worked = 1\n        result = hourly_wage_per_worker * total_workers * hours_worked\n    else:\n        # If 15 workers are not enough, calculate the cost of hiring the needed workers\n        result = hourly_wage_per_worker * workers_needed * hours_worked\n\n    return result\n\n# Test the function\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    An assembly line can produce 1000 toys in 2 hours with 10 workers. If each worker is paid $15 for a single hour’s work, how much would it cost to hire 15 workers to produce 2000 toys in 1 hour?\n    \"\"\"\n    # Calculate the production rate per worker per hour\n    toys_per_hour_per_worker = 1000 / (2 * 10)\n    \n    # Calculate the number of workers needed to produce 2000 toys in 1 hour\n    workers_needed = 2000 / (toys_per_hour_per_worker * 1)\n    \n    # Since we are hiring 15 workers, check if it's enough to produce 2000 toys in 1 hour\n    if 15 >= workers_needed:\n        # Calculate the cost of hiring 15 workers for 1 hour\n        hourly_wage_per_worker = 15\n        total_workers = 15\n        hours_worked = 1\n        result = hourly_wage_per_worker * total_workers * hours_worked\n    else:\n        # If 15 workers are not enough, calculate the cost of hiring the needed workers\n        result = hourly_wage_per_worker * workers_needed * hours_worked\n\n    return result\n\n# Test the function\nprint(simple_math_problem())",
    "result": "Error: Traceback (most recent call last):\n  File \"/tmp/tmpv9vb0lrf.py\", line 25, in <module>\n    print(simple_math_problem())\n          ^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmpv9vb0lrf.py\", line 20, in simple_math_problem\n    result = hourly_wage_per_worker * workers_needed * hours_worked\n             ^^^^^^^^^^^^^^^^^^^^^^\nUnboundLocalError: cannot access local variable 'hourly_wage_per_worker' where it is not associated with a value\n"
  },
  {
    "index": 68,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Alex was twice as old as Zoey two years ago. If Zoey is 9 years old now, how old was Alex two years ago?\n    \"\"\"\n    zoey_current_age = 9\n    zoey_age_two_years_ago = zoey_current_age - 2\n    alex_age_two_years_ago = 2 * zoey_age_two_years_ago\n    result = alex_age_two_years_ago\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Alex was twice as old as Zoey two years ago. If Zoey is 9 years old now, how old was Alex two years ago?\n    \"\"\"\n    zoey_current_age = 9\n    zoey_age_two_years_ago = zoey_current_age - 2\n    alex_age_two_years_ago = 2 * zoey_age_two_years_ago\n    result = alex_age_two_years_ago\n\n    return result\n\nprint(simple_math_problem())",
    "result": 14
  },
  {
    "index": 69,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    There are 72 apples in a basket. If 3 apples are rotten, and then the remaining apples are split evenly between two people, how many apples does each person get?\n    \"\"\"\n    total_apples = 72\n    rotten_apples = 3\n    remaining_apples = total_apples - rotten_apples\n    result = remaining_apples / 2\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    There are 72 apples in a basket. If 3 apples are rotten, and then the remaining apples are split evenly between two people, how many apples does each person get?\n    \"\"\"\n    total_apples = 72\n    rotten_apples = 3\n    remaining_apples = total_apples - rotten_apples\n    result = remaining_apples / 2\n\n    return result\n\nprint(simple_math_problem())",
    "result": 34.5
  },
  {
    "index": 70,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A hardware store is offering a deal on tools. If a customer buys a drill for $100, they can buy a set of screwdrivers at half price, which normally costs $25. What is the final price for the drill and screwdriver set?\n    \"\"\"\n    drill_price = 100\n    screwdriver_original_price = 25\n    screwdriver_discount = 0.5\n    screwdriver_discounted_price = screwdriver_original_price * screwdriver_discount\n    result = drill_price + screwdriver_discounted_price\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A hardware store is offering a deal on tools. If a customer buys a drill for $100, they can buy a set of screwdrivers at half price, which normally costs $25. What is the final price for the drill and screwdriver set?\n    \"\"\"\n    drill_price = 100\n    screwdriver_original_price = 25\n    screwdriver_discount = 0.5\n    screwdriver_discounted_price = screwdriver_original_price * screwdriver_discount\n    result = drill_price + screwdriver_discounted_price\n\n    return result\n\nprint(simple_math_problem())",
    "result": 112.5
  },
  {
    "index": 71,
    "response": "```python\ndef simple_math_problem() -> float:\n\"\"\"\nStudent: Jessica and her family went to a car show and were given 15 free tickets to share between them. If Jessica has 2 siblings, how many tickets will each of them receive?\n\"\"\"\ntotal_tickets = 15\nnumber_of_siblings = 2\ntotal_family_members = number_of_siblings + 1  # including Jessica\ntickets_per_member = total_tickets / total_family_members\nresult = tickets_per_member\n\nreturn result\n\n# Example usage:\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Student: Jessica and her family went to a car show and were given 15 free tickets to share between them. If Jessica has 2 siblings, how many tickets will each of them receive?\n    \"\"\"\n    total_tickets = 15\n    number_of_siblings = 2\n    total_family_members = number_of_siblings + 1  # including Jessica\n    tickets_per_member = total_tickets / total_family_members\n    result = tickets_per_member\n\n    return result\n\n    # Example usage:\n    print(simple_math_problem())",
    "result": 5.0
  },
  {
    "index": 72,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Student: James has 384 cards, if 8/9 of the cards were green and the other 1/9 were yellow, calculate the number of green cards.\n    \"\"\"\n    total_cards = 384\n    fraction_of_green_cards = 8/9\n    number_of_green_cards = total_cards * fraction_of_green_cards\n    result = number_of_green_cards\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Student: James has 384 cards, if 8/9 of the cards were green and the other 1/9 were yellow, calculate the number of green cards.\n    \"\"\"\n    total_cards = 384\n    fraction_of_green_cards = 8/9\n    number_of_green_cards = total_cards * fraction_of_green_cards\n    result = number_of_green_cards\n\n    return result\n\nprint(simple_math_problem())",
    "result": 341.3333333333333
  },
  {
    "index": 73,
    "response": "```python\nimport math\n\ndef simple_math_problem() -> float:\n    \"\"\"\n    Cecilia has 1 second to calculate the diagonal length of a square with side length 8 centimeters. What is the diagonal length of the square?\n    \"\"\"\n    side_length = 8  # in centimeters\n    diagonal_length_squared = side_length ** 2 + side_length ** 2\n    result = math.sqrt(diagonal_length_squared)\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "import math\n\ndef simple_math_problem() -> float:\n    \"\"\"\n    Cecilia has 1 second to calculate the diagonal length of a square with side length 8 centimeters. What is the diagonal length of the square?\n    \"\"\"\n    side_length = 8  # in centimeters\n    diagonal_length_squared = side_length ** 2 + side_length ** 2\n    result = math.sqrt(diagonal_length_squared)\n\n    return result\n\nprint(simple_math_problem())",
    "result": 11.313708498984761
  },
  {
    "index": 74,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A rectangular container has a length of 20 cm, a width of 10 cm, and a height of 8 cm. What is its volume?\n    \"\"\"\n    container_length = 20  # in cm\n    container_width = 10   # in cm\n    container_height = 8   # in cm\n    area_of_base = container_length * container_width\n    result = area_of_base * container_height\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A rectangular container has a length of 20 cm, a width of 10 cm, and a height of 8 cm. What is its volume?\n    \"\"\"\n    container_length = 20  # in cm\n    container_width = 10   # in cm\n    container_height = 8   # in cm\n    area_of_base = container_length * container_width\n    result = area_of_base * container_height\n\n    return result\n\nprint(simple_math_problem())",
    "result": 1600
  },
  {
    "index": 75,
    "response": "```python\ndef simple_math_problem() -> float:\n\"\"\"\nIn a class of 30 students, 60% are girls. How many boys are in the class?\n\"\"\"\ntotal_students = 30\npercentage_girls = 60\nnumber_of_girls = (percentage_girls / 100) * total_students\nnumber_of_boys = total_students - number_of_girls\nresult = number_of_boys\n\nreturn result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    In a class of 30 students, 60% are girls. How many boys are in the class?\n    \"\"\"\n    total_students = 30\n    percentage_girls = 60\n    number_of_girls = (percentage_girls / 100) * total_students\n    number_of_boys = total_students - number_of_girls\n    result = number_of_boys\n\n    return result\n\n    print(simple_math_problem())",
    "result": 12.0
  },
  {
    "index": 76,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    On his trip to the bookstore, Jack purchased three novels, two textbooks, and a magazine for a total of $70. If each textbook costs $20 and a novel costs four times as much as a magazine, what is the price of a magazine?\n    \"\"\"\n    total_cost = 70\n    number_of_textbooks = 2\n    cost_per_textbook = 20\n    number_of_novels = 3\n    number_of_magazines = 1\n    \n    # Calculate the total cost of textbooks\n    total_cost_of_textbooks = number_of_textbooks * cost_per_textbook\n    \n    # Calculate the remaining cost after subtracting the cost of textbooks\n    remaining_cost = total_cost - total_cost_of_textbooks\n    \n    # Let's denote the cost of a magazine as x\n    # Then the cost of a novel is 4x\n    # So, the total cost of novels and a magazine is 3 * 4x + x = 13x\n    \n    # Calculate the cost of a magazine\n    cost_of_a_magazine = remaining_cost / (number_of_novels * 4 + number_of_magazines)\n    \n    result = cost_of_a_magazine\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    On his trip to the bookstore, Jack purchased three novels, two textbooks, and a magazine for a total of $70. If each textbook costs $20 and a novel costs four times as much as a magazine, what is the price of a magazine?\n    \"\"\"\n    total_cost = 70\n    number_of_textbooks = 2\n    cost_per_textbook = 20\n    number_of_novels = 3\n    number_of_magazines = 1\n    \n    # Calculate the total cost of textbooks\n    total_cost_of_textbooks = number_of_textbooks * cost_per_textbook\n    \n    # Calculate the remaining cost after subtracting the cost of textbooks\n    remaining_cost = total_cost - total_cost_of_textbooks\n    \n    # Let's denote the cost of a magazine as x\n    # Then the cost of a novel is 4x\n    # So, the total cost of novels and a magazine is 3 * 4x + x = 13x\n    \n    # Calculate the cost of a magazine\n    cost_of_a_magazine = remaining_cost / (number_of_novels * 4 + number_of_magazines)\n    \n    result = cost_of_a_magazine\n\n    return result\n\nprint(simple_math_problem())",
    "result": 2.3076923076923075
  },
  {
    "index": 77,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    A teacher placed 25 pens and 15 pencils each into 3 boxes. She asked 3 students to remove as many writing instruments as they could. 2 of them removed 10 pens each and the other student removed a certain number of writing instruments. If a total of 20 writing instruments are still in the boxes, how many writing instruments did the third student remove?\n    \"\"\"\n    pens_per_box = 25\n    pencils_per_box = 15\n    boxes = 3\n    total_pens = pens_per_box * boxes\n    total_pencils = pencils_per_box * boxes\n    total_writing_instruments = total_pens + total_pencils\n    \n    pens_removed_by_first_two_students = 10 * 2\n    writing_instruments_left = 20\n    \n    writing_instruments_removed = total_writing_instruments - writing_instruments_left\n    writing_instruments_removed_by_third_student = writing_instruments_removed - pens_removed_by_first_two_students\n    \n    result = writing_instruments_removed_by_third_student\n    \n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    A teacher placed 25 pens and 15 pencils each into 3 boxes. She asked 3 students to remove as many writing instruments as they could. 2 of them removed 10 pens each and the other student removed a certain number of writing instruments. If a total of 20 writing instruments are still in the boxes, how many writing instruments did the third student remove?\n    \"\"\"\n    pens_per_box = 25\n    pencils_per_box = 15\n    boxes = 3\n    total_pens = pens_per_box * boxes\n    total_pencils = pencils_per_box * boxes\n    total_writing_instruments = total_pens + total_pencils\n    \n    pens_removed_by_first_two_students = 10 * 2\n    writing_instruments_left = 20\n    \n    writing_instruments_removed = total_writing_instruments - writing_instruments_left\n    writing_instruments_removed_by_third_student = writing_instruments_removed - pens_removed_by_first_two_students\n    \n    result = writing_instruments_removed_by_third_student\n    \n    return result\n\nprint(simple_math_problem())",
    "result": 80
  },
  {
    "index": 78,
    "response": "```python\ndef simple_math_problem() -> float:\n\"\"\"\nA board is 64 inches long. If you cut it into four equal pieces, how long is each piece?\n\"\"\"\nboard_length = 64  # inches\nnumber_of_pieces = 4\nlength_per_piece = board_length / number_of_pieces\nresult = length_per_piece\n\nreturn result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A board is 64 inches long. If you cut it into four equal pieces, how long is each piece?\n    \"\"\"\n    board_length = 64  # inches\n    number_of_pieces = 4\n    length_per_piece = board_length / number_of_pieces\n    result = length_per_piece\n\n    return result\n\n    print(simple_math_problem())",
    "result": 16.0
  },
  {
    "index": 79,
    "response": "```python\ndef simple_math_problem() -> float:\n\"\"\"\nTom spent a third of his money to buy a new bike. If Tom originally had $36, how much money did he spend on the bike?\n\"\"\"\noriginal_money = 36\nfraction_spent = 1/3\nmoney_spent = original_money * fraction_spent\nresult = money_spent\n\nreturn result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Tom spent a third of his money to buy a new bike. If Tom originally had $36, how much money did he spend on the bike?\n    \"\"\"\n    original_money = 36\n    fraction_spent = 1/3\n    money_spent = original_money * fraction_spent\n    result = money_spent\n\n    return result\n\n    print(simple_math_problem())",
    "result": 12.0
  },
  {
    "index": 80,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Lisa hiked for 10 miles and then rollerbladed another 3 miles to the campsite. She then hiked all the way back home. How many miles did Lisa hike in total? After cleaning out their closet, Max made $500 by selling old clothes on a resale app. If his roommate Jack also made 60% of what Max sold after selling his clothes, calculate the total amount of money the two friends made from the sales.\n    \"\"\"\n    miles_hiked_to_campsite = 10\n    miles_rollerbladed = 3\n    total_miles_to_campsite = miles_hiked_to_campsite + miles_rollerbladed\n    miles_hiked_back_home = total_miles_to_campsite\n    total_miles_hiked = miles_hiked_to_campsite + miles_hiked_back_home\n\n    max_sales = 500\n    jack_sales_percentage = 0.6\n    jack_sales = max_sales * jack_sales_percentage\n    total_sales = max_sales + jack_sales\n\n    result = total_miles_hiked + total_sales\n\n    return result\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Lisa hiked for 10 miles and then rollerbladed another 3 miles to the campsite. She then hiked all the way back home. How many miles did Lisa hike in total? After cleaning out their closet, Max made $500 by selling old clothes on a resale app. If his roommate Jack also made 60% of what Max sold after selling his clothes, calculate the total amount of money the two friends made from the sales.\n    \"\"\"\n    miles_hiked_to_campsite = 10\n    miles_rollerbladed = 3\n    total_miles_to_campsite = miles_hiked_to_campsite + miles_rollerbladed\n    miles_hiked_back_home = total_miles_to_campsite\n    total_miles_hiked = miles_hiked_to_campsite + miles_hiked_back_home\n\n    max_sales = 500\n    jack_sales_percentage = 0.6\n    jack_sales = max_sales * jack_sales_percentage\n    total_sales = max_sales + jack_sales\n\n    result = total_miles_hiked + total_sales\n\n    return result",
    "result": 823.0
  },
  {
    "index": 81,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Student: Ava divided a herd of 42 cows and 56 sheep into 5 equal groups. How many cows and sheep are in each group?\n    \"\"\"\n    total_cows = 42\n    total_sheep = 56\n    total_animals = total_cows + total_sheep\n    number_of_groups = 5\n    animals_per_group = total_animals / number_of_groups\n    result = animals_per_group\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Student: Ava divided a herd of 42 cows and 56 sheep into 5 equal groups. How many cows and sheep are in each group?\n    \"\"\"\n    total_cows = 42\n    total_sheep = 56\n    total_animals = total_cows + total_sheep\n    number_of_groups = 5\n    animals_per_group = total_animals / number_of_groups\n    result = animals_per_group\n\n    return result\n\nprint(simple_math_problem())",
    "result": 19.6
  },
  {
    "index": 82,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    Mia, Noah, and Olivia have some coins. Mia has 4 more coins than Noah, and Noah has 8 fewer coins than Olivia. If Olivia has 25 coins, how many coins, in coins, do all 3 of them have in total?\n    \"\"\"\n    olivia_coins = 25\n    noah_coins = olivia_coins - 8\n    mia_coins = noah_coins + 4\n    total_coins = olivia_coins + noah_coins + mia_coins\n    result = total_coins\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    Mia, Noah, and Olivia have some coins. Mia has 4 more coins than Noah, and Noah has 8 fewer coins than Olivia. If Olivia has 25 coins, how many coins, in coins, do all 3 of them have in total?\n    \"\"\"\n    olivia_coins = 25\n    noah_coins = olivia_coins - 8\n    mia_coins = noah_coins + 4\n    total_coins = olivia_coins + noah_coins + mia_coins\n    result = total_coins\n\n    return result\n\nprint(simple_math_problem())",
    "result": 63
  },
  {
    "index": 83,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A package delivery service charges $3 for the first pound and $1.5 for each additional pound. John shipped a package that weighs 10 pounds. How much did John have to pay?\n    \"\"\"\n    weight_of_package = 10  # in pounds\n    cost_for_first_pound = 3  # in dollars\n    cost_per_additional_pound = 1.5  # in dollars\n    additional_pounds = weight_of_package - 1\n    cost_for_additional_pounds = additional_pounds * cost_per_additional_pound\n    result = cost_for_first_pound + cost_for_additional_pounds\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A package delivery service charges $3 for the first pound and $1.5 for each additional pound. John shipped a package that weighs 10 pounds. How much did John have to pay?\n    \"\"\"\n    weight_of_package = 10  # in pounds\n    cost_for_first_pound = 3  # in dollars\n    cost_per_additional_pound = 1.5  # in dollars\n    additional_pounds = weight_of_package - 1\n    cost_for_additional_pounds = additional_pounds * cost_per_additional_pound\n    result = cost_for_first_pound + cost_for_additional_pounds\n\n    return result\n\nprint(simple_math_problem())",
    "result": 16.5
  },
  {
    "index": 84,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Three friends shared a $60 dinner bill equally. Each friend left a $5 tip. How much did each person pay in total?\n    \"\"\"\n    total_dinner_bill = 60\n    total_tip = 5 * 3  # Since there are 3 friends\n    total_amount_paid = total_dinner_bill + total_tip\n    amount_each_person_paid_for_dinner = total_dinner_bill / 3\n    amount_each_person_paid_for_tip = total_tip / 3\n    result = amount_each_person_paid_for_dinner + amount_each_person_paid_for_tip\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Three friends shared a $60 dinner bill equally. Each friend left a $5 tip. How much did each person pay in total?\n    \"\"\"\n    total_dinner_bill = 60\n    total_tip = 5 * 3  # Since there are 3 friends\n    total_amount_paid = total_dinner_bill + total_tip\n    amount_each_person_paid_for_dinner = total_dinner_bill / 3\n    amount_each_person_paid_for_tip = total_tip / 3\n    result = amount_each_person_paid_for_dinner + amount_each_person_paid_for_tip\n\n    return result\n\nprint(simple_math_problem())",
    "result": 25.0
  },
  {
    "index": 85,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Sally wants to make 16 cookies. Each cookie requires 2 tablespoons of flour. If she has a 5-pound bag of flour that has about 20 cups of flour, how many tablespoons of flour does she have?\n    \"\"\"\n    cups_of_flour = 20\n    tablespoons_per_cup = 16\n    total_tablespoons_of_flour = cups_of_flour * tablespoons_per_cup\n    result = total_tablespoons_of_flour\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Sally wants to make 16 cookies. Each cookie requires 2 tablespoons of flour. If she has a 5-pound bag of flour that has about 20 cups of flour, how many tablespoons of flour does she have?\n    \"\"\"\n    cups_of_flour = 20\n    tablespoons_per_cup = 16\n    total_tablespoons_of_flour = cups_of_flour * tablespoons_per_cup\n    result = total_tablespoons_of_flour\n\n    return result\n\nprint(simple_math_problem())",
    "result": 320
  },
  {
    "index": 86,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Amanda harvested 42 apples from 8 trees. How many apples did she harvest from each tree?\n    \"\"\"\n    total_apples = 42\n    total_trees = 8\n    apples_per_tree = total_apples / total_trees\n    result = apples_per_tree\n\n    return result\n\n# Test the function\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Amanda harvested 42 apples from 8 trees. How many apples did she harvest from each tree?\n    \"\"\"\n    total_apples = 42\n    total_trees = 8\n    apples_per_tree = total_apples / total_trees\n    result = apples_per_tree\n\n    return result\n\n# Test the function\nprint(simple_math_problem())",
    "result": 5.25
  },
  {
    "index": 87,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    A recipe for spaghetti sauce calls for 2 cans of tomatoes, 1 onion, and 3 cloves of garlic. If John wants to make twice the amount of sauce, how many cans of tomatoes will he need?\n    \"\"\"\n    cans_of_tomatoes_per_recipe = 2\n    multiplier_for_sauce_amount = 2\n    total_cans_of_tomatoes_needed = cans_of_tomatoes_per_recipe * multiplier_for_sauce_amount\n    result = total_cans_of_tomatoes_needed\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    A recipe for spaghetti sauce calls for 2 cans of tomatoes, 1 onion, and 3 cloves of garlic. If John wants to make twice the amount of sauce, how many cans of tomatoes will he need?\n    \"\"\"\n    cans_of_tomatoes_per_recipe = 2\n    multiplier_for_sauce_amount = 2\n    total_cans_of_tomatoes_needed = cans_of_tomatoes_per_recipe * multiplier_for_sauce_amount\n    result = total_cans_of_tomatoes_needed\n\n    return result\n\nprint(simple_math_problem())",
    "result": 4
  },
  {
    "index": 88,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    If you have a 12 inch by 12 inch sheet of paper, and you want to cut out the largest possible square from it, what will be the area of the square you cut out?\n    \"\"\"\n    sheet_length = 12  # length of the sheet in inches\n    sheet_width = 12   # width of the sheet in inches\n    \n    # Since the sheet is a square, the largest possible square that can be cut out will have the same side length as the sheet\n    square_side_length = min(sheet_length, sheet_width)\n    \n    # Calculate the area of the square\n    result = square_side_length ** 2\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    If you have a 12 inch by 12 inch sheet of paper, and you want to cut out the largest possible square from it, what will be the area of the square you cut out?\n    \"\"\"\n    sheet_length = 12  # length of the sheet in inches\n    sheet_width = 12   # width of the sheet in inches\n    \n    # Since the sheet is a square, the largest possible square that can be cut out will have the same side length as the sheet\n    square_side_length = min(sheet_length, sheet_width)\n    \n    # Calculate the area of the square\n    result = square_side_length ** 2\n\n    return result\n\nprint(simple_math_problem())",
    "result": 144
  },
  {
    "index": 89,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    Ms. Lee has 210 rabbits in her farm where 35 are males and the rest are females. Fifteen females are too young to breed while the rest of the females can. How many breeding females does Ms. Lee have in her farm?\n    \"\"\"\n    total_rabbits = 210\n    male_rabbits = 35\n    female_rabbits = total_rabbits - male_rabbits\n    young_female_rabbits = 15\n    breeding_female_rabbits = female_rabbits - young_female_rabbits\n    result = breeding_female_rabbits\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    Ms. Lee has 210 rabbits in her farm where 35 are males and the rest are females. Fifteen females are too young to breed while the rest of the females can. How many breeding females does Ms. Lee have in her farm?\n    \"\"\"\n    total_rabbits = 210\n    male_rabbits = 35\n    female_rabbits = total_rabbits - male_rabbits\n    young_female_rabbits = 15\n    breeding_female_rabbits = female_rabbits - young_female_rabbits\n    result = breeding_female_rabbits\n\n    return result\n\nprint(simple_math_problem())",
    "result": 160
  },
  {
    "index": 90,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    It takes Alice 24 hours to bake 100 cupcakes. If Martha can bake at half the speed of Alice, how many cupcakes can she bake in 36 hours?\n    \"\"\"\n    alice_baking_time = 24  # hours\n    alice_cupcakes = 100\n    martha_baking_time = 36  # hours\n    alice_speed = alice_cupcakes / alice_baking_time\n    martha_speed = alice_speed / 2\n    martha_cupcakes = martha_speed * martha_baking_time\n    result = martha_cupcakes\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    It takes Alice 24 hours to bake 100 cupcakes. If Martha can bake at half the speed of Alice, how many cupcakes can she bake in 36 hours?\n    \"\"\"\n    alice_baking_time = 24  # hours\n    alice_cupcakes = 100\n    martha_baking_time = 36  # hours\n    alice_speed = alice_cupcakes / alice_baking_time\n    martha_speed = alice_speed / 2\n    martha_cupcakes = martha_speed * martha_baking_time\n    result = martha_cupcakes\n\n    return result\n\nprint(simple_math_problem())",
    "result": 75.0
  },
  {
    "index": 91,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Ruby wants to go on a road trip with her friend, Jasper. They have $400 to spend. They buy gas for $70, a cooler for $30, and a map for $10. They plan to spend the rest on food. The food costs $15 per meal. For every meal they buy, they can drive an additional 20 miles. How many miles can they travel?\n    \"\"\"\n    initial_budget = 400\n    gas_cost = 70\n    cooler_cost = 30\n    map_cost = 10\n    total_spent_on_items = gas_cost + cooler_cost + map_cost\n    remaining_budget = initial_budget - total_spent_on_items\n    cost_per_meal = 15\n    miles_per_meal = 20\n    meals_bought = remaining_budget / cost_per_meal\n    total_miles = meals_bought * miles_per_meal\n    result = total_miles\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Ruby wants to go on a road trip with her friend, Jasper. They have $400 to spend. They buy gas for $70, a cooler for $30, and a map for $10. They plan to spend the rest on food. The food costs $15 per meal. For every meal they buy, they can drive an additional 20 miles. How many miles can they travel?\n    \"\"\"\n    initial_budget = 400\n    gas_cost = 70\n    cooler_cost = 30\n    map_cost = 10\n    total_spent_on_items = gas_cost + cooler_cost + map_cost\n    remaining_budget = initial_budget - total_spent_on_items\n    cost_per_meal = 15\n    miles_per_meal = 20\n    meals_bought = remaining_budget / cost_per_meal\n    total_miles = meals_bought * miles_per_meal\n    result = total_miles\n\n    return result\n\nprint(simple_math_problem())",
    "result": 386.66666666666663
  },
  {
    "index": 92,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A group of 8 friends went to a restaurant and decided to split the bill equally. However, two of them only had enough money to pay for half of their portion. If the total bill was $240, how much does each friend have to pay?\n    \"\"\"\n    total_friends = 8\n    friends_paying_half = 2\n    total_bill = 240\n    \n    # Calculate the portion that each friend would pay if everyone paid equally\n    equal_portion = total_bill / total_friends\n    \n    # Calculate the amount that the friends paying half would pay\n    half_portion = equal_portion / 2\n    \n    # Calculate the total amount that the friends paying half would pay\n    total_half_portions = half_portion * friends_paying_half\n    \n    # Calculate the remaining amount to be paid by the friends paying full\n    remaining_amount = total_bill - total_half_portions\n    \n    # Calculate the number of friends paying full\n    friends_paying_full = total_friends - friends_paying_half\n    \n    # Calculate the amount that each friend paying full would pay\n    full_portion = remaining_amount / friends_paying_full\n    \n    # Since the problem asks for the amount each friend has to pay, \n    # we need to consider the friends paying half and full separately\n    # However, the question seems to imply that we should find the amount each friend has to pay \n    # if the bill was split equally among all friends initially, \n    # and then adjust for the friends who can only pay half.\n    # In this case, we can calculate the amount each friend has to pay as follows:\n    result = equal_portion\n    \n    return result\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A group of 8 friends went to a restaurant and decided to split the bill equally. However, two of them only had enough money to pay for half of their portion. If the total bill was $240, how much does each friend have to pay?\n    \"\"\"\n    total_friends = 8\n    friends_paying_half = 2\n    total_bill = 240\n    \n    # Calculate the portion that each friend would pay if everyone paid equally\n    equal_portion = total_bill / total_friends\n    \n    # Calculate the amount that the friends paying half would pay\n    half_portion = equal_portion / 2\n    \n    # Calculate the total amount that the friends paying half would pay\n    total_half_portions = half_portion * friends_paying_half\n    \n    # Calculate the remaining amount to be paid by the friends paying full\n    remaining_amount = total_bill - total_half_portions\n    \n    # Calculate the number of friends paying full\n    friends_paying_full = total_friends - friends_paying_half\n    \n    # Calculate the amount that each friend paying full would pay\n    full_portion = remaining_amount / friends_paying_full\n    \n    # Since the problem asks for the amount each friend has to pay, \n    # we need to consider the friends paying half and full separately\n    # However, the question seems to imply that we should find the amount each friend has to pay \n    # if the bill was split equally among all friends initially, \n    # and then adjust for the friends who can only pay half.\n    # In this case, we can calculate the amount each friend has to pay as follows:\n    result = equal_portion\n    \n    return result",
    "result": 30.0
  },
  {
    "index": 93,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Rachel is trying to master the art of calligraphy. She practices for 2.5 hours every weekday, on Saturdays she practices for 4 hours, and she takes Sundays off. How many hours will she practice from now until her friend's wedding in 3 weeks?\n    \"\"\"\n    hours_per_weekday = 2.5\n    hours_per_saturday = 4\n    weeks_until_wedding = 3\n    \n    total_weekdays = weeks_until_wedding * 5\n    total_saturdays = weeks_until_wedding\n    \n    total_hours_on_weekdays = total_weekdays * hours_per_weekday\n    total_hours_on_saturdays = total_saturdays * hours_per_saturday\n    \n    result = total_hours_on_weekdays + total_hours_on_saturdays\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Rachel is trying to master the art of calligraphy. She practices for 2.5 hours every weekday, on Saturdays she practices for 4 hours, and she takes Sundays off. How many hours will she practice from now until her friend's wedding in 3 weeks?\n    \"\"\"\n    hours_per_weekday = 2.5\n    hours_per_saturday = 4\n    weeks_until_wedding = 3\n    \n    total_weekdays = weeks_until_wedding * 5\n    total_saturdays = weeks_until_wedding\n    \n    total_hours_on_weekdays = total_weekdays * hours_per_weekday\n    total_hours_on_saturdays = total_saturdays * hours_per_saturday\n    \n    result = total_hours_on_weekdays + total_hours_on_saturdays\n\n    return result\n\nprint(simple_math_problem())",
    "result": 49.5
  },
  {
    "index": 94,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    There were 25 balloons at first. 5 more balloons were added every 10 minutes. If there were 65 balloons after 1 hour, how many balloons were there initially?\n    \"\"\"\n    balloons_initial = 25  # initial number of balloons\n    time_elapsed = 60  # minutes\n    balloons_added = 5  # every 10 minutes\n    intervals = time_elapsed // 10  # calculate the number of 10-minute intervals\n    total_balloons_added = intervals * balloons_added  # calculate the total number of balloons added\n    result = 65 - total_balloons_added  # calculate the initial number of balloons\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    There were 25 balloons at first. 5 more balloons were added every 10 minutes. If there were 65 balloons after 1 hour, how many balloons were there initially?\n    \"\"\"\n    balloons_initial = 25  # initial number of balloons\n    time_elapsed = 60  # minutes\n    balloons_added = 5  # every 10 minutes\n    intervals = time_elapsed // 10  # calculate the number of 10-minute intervals\n    total_balloons_added = intervals * balloons_added  # calculate the total number of balloons added\n    result = 65 - total_balloons_added  # calculate the initial number of balloons\n\n    return result\n\nprint(simple_math_problem())",
    "result": 35
  },
  {
    "index": 95,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    Kate sold 18 bracelets in a day. She sold 3 times as many bracelets as Amy in the same day. How many bracelets did they sell in total in 5 days?\n    \"\"\"\n    kate_bracelets_per_day = 18\n    amy_bracelets_per_day = kate_bracelets_per_day / 3\n    total_bracelets_per_day = kate_bracelets_per_day + amy_bracelets_per_day\n    total_bracelets_in_5_days = total_bracelets_per_day * 5\n    result = total_bracelets_in_5_days\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    Kate sold 18 bracelets in a day. She sold 3 times as many bracelets as Amy in the same day. How many bracelets did they sell in total in 5 days?\n    \"\"\"\n    kate_bracelets_per_day = 18\n    amy_bracelets_per_day = kate_bracelets_per_day / 3\n    total_bracelets_per_day = kate_bracelets_per_day + amy_bracelets_per_day\n    total_bracelets_in_5_days = total_bracelets_per_day * 5\n    result = total_bracelets_in_5_days\n\n    return result\n\nprint(simple_math_problem())",
    "result": 120.0
  },
  {
    "index": 96,
    "response": "```python\ndef simple_math_problem() -> int:\n    \"\"\"\n    She gives 50 pieces to her friend Ben, and then eats 6 pieces every day. How many pieces of candy will she have left after 12 days?\n    \"\"\"\n    initial_candy_pieces = 0  # The problem doesn't specify the initial amount of candy\n    candy_given_to_ben = 50\n    candy_eaten_per_day = 6\n    days = 12\n    total_candy_eaten = candy_eaten_per_day * days\n    \n    # Since the initial amount of candy is not specified, we'll assume it's x\n    # After giving 50 pieces to Ben, she has x - 50 pieces left\n    # After eating 6 pieces per day for 12 days, she has x - 50 - 72 pieces left\n    # The problem is asking for the number of pieces left after 12 days, but without the initial amount, we can't give a numerical answer\n    # However, we can express the solution in terms of the initial amount\n    # Let's assume the initial amount is x\n    # Then, the number of pieces left after 12 days is x - 50 - 72\n    \n    # To provide a numerical answer, we need to know the initial amount of candy\n    # For the sake of this example, let's assume the initial amount is 200\n    initial_candy_pieces = 200  # This value is assumed for demonstration purposes only\n    candy_left_after_giving_to_ben = initial_candy_pieces - candy_given_to_ben\n    result = candy_left_after_giving_to_ben - total_candy_eaten\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> int:\n    \"\"\"\n    She gives 50 pieces to her friend Ben, and then eats 6 pieces every day. How many pieces of candy will she have left after 12 days?\n    \"\"\"\n    initial_candy_pieces = 0  # The problem doesn't specify the initial amount of candy\n    candy_given_to_ben = 50\n    candy_eaten_per_day = 6\n    days = 12\n    total_candy_eaten = candy_eaten_per_day * days\n    \n    # Since the initial amount of candy is not specified, we'll assume it's x\n    # After giving 50 pieces to Ben, she has x - 50 pieces left\n    # After eating 6 pieces per day for 12 days, she has x - 50 - 72 pieces left\n    # The problem is asking for the number of pieces left after 12 days, but without the initial amount, we can't give a numerical answer\n    # However, we can express the solution in terms of the initial amount\n    # Let's assume the initial amount is x\n    # Then, the number of pieces left after 12 days is x - 50 - 72\n    \n    # To provide a numerical answer, we need to know the initial amount of candy\n    # For the sake of this example, let's assume the initial amount is 200\n    initial_candy_pieces = 200  # This value is assumed for demonstration purposes only\n    candy_left_after_giving_to_ben = initial_candy_pieces - candy_given_to_ben\n    result = candy_left_after_giving_to_ben - total_candy_eaten\n\n    return result\n\nprint(simple_math_problem())",
    "result": 78
  },
  {
    "index": 97,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    Mark has a credit card with an interest rate of 7% per annum. If he spends $1000 on the card and does not pay the balance for a year, how much interest will he have to pay?\n    \"\"\"\n    principal_amount = 1000  # Initial amount spent on the credit card\n    interest_rate = 0.07  # Interest rate per annum (7% = 0.07)\n    time_in_years = 1  # Time period for which the interest is calculated (1 year)\n\n    # Calculate the interest using the formula: Interest = Principal * Rate * Time\n    interest = principal_amount * interest_rate * time_in_years\n    result = interest\n\n    return result\n\n# Example usage:\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    Mark has a credit card with an interest rate of 7% per annum. If he spends $1000 on the card and does not pay the balance for a year, how much interest will he have to pay?\n    \"\"\"\n    principal_amount = 1000  # Initial amount spent on the credit card\n    interest_rate = 0.07  # Interest rate per annum (7% = 0.07)\n    time_in_years = 1  # Time period for which the interest is calculated (1 year)\n\n    # Calculate the interest using the formula: Interest = Principal * Rate * Time\n    interest = principal_amount * interest_rate * time_in_years\n    result = interest\n\n    return result\n\n# Example usage:\nprint(simple_math_problem())",
    "result": 70.0
  },
  {
    "index": 98,
    "response": "```python\ndef simple_math_problem() -> float:\n    \"\"\"\n    A rectangular garden has a length of 20 feet and a width of 15 feet. A gardener wants to plant flowers along the perimeter of the garden, leaving a gap of 1 foot between each flower. Each flower costs $0.5 and takes up 0.25 square feet of space. How many flowers can the gardener plant and how much will it cost?\n    \"\"\"\n    garden_length = 20  # feet\n    garden_width = 15   # feet\n    gap_between_flowers = 1  # feet\n    flower_cost = 0.5  # dollars\n    flower_space = 0.25  # square feet\n\n    # Calculate the perimeter of the garden\n    garden_perimeter = 2 * (garden_length + garden_width)\n\n    # Calculate the total space available for flowers along the perimeter\n    total_space_for_flowers = garden_perimeter\n\n    # Calculate the space taken up by each flower including the gap\n    space_per_flower = 1  # 1 foot for the flower and the gap\n\n    # Calculate the number of flowers that can be planted\n    number_of_flowers = int(total_space_for_flowers / space_per_flower)\n\n    # Calculate the total cost of the flowers\n    total_cost = number_of_flowers * flower_cost\n\n    result = total_cost\n\n    return result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    A rectangular garden has a length of 20 feet and a width of 15 feet. A gardener wants to plant flowers along the perimeter of the garden, leaving a gap of 1 foot between each flower. Each flower costs $0.5 and takes up 0.25 square feet of space. How many flowers can the gardener plant and how much will it cost?\n    \"\"\"\n    garden_length = 20  # feet\n    garden_width = 15   # feet\n    gap_between_flowers = 1  # feet\n    flower_cost = 0.5  # dollars\n    flower_space = 0.25  # square feet\n\n    # Calculate the perimeter of the garden\n    garden_perimeter = 2 * (garden_length + garden_width)\n\n    # Calculate the total space available for flowers along the perimeter\n    total_space_for_flowers = garden_perimeter\n\n    # Calculate the space taken up by each flower including the gap\n    space_per_flower = 1  # 1 foot for the flower and the gap\n\n    # Calculate the number of flowers that can be planted\n    number_of_flowers = int(total_space_for_flowers / space_per_flower)\n\n    # Calculate the total cost of the flowers\n    total_cost = number_of_flowers * flower_cost\n\n    result = total_cost\n\n    return result\n\nprint(simple_math_problem())",
    "result": 35.0
  },
  {
    "index": 99,
    "response": "```python\ndef simple_math_problem() -> float:\n\"\"\"\nAt a store, Logan spend $50 on two items. One of the items is at 10% off while the other is at 20% off. What is the total amount paid?\n\"\"\"\noriginal_total = 50\ndiscount_on_first_item = 0.1  # 10% off\ndiscount_on_second_item = 0.2  # 20% off\n\n# Assume x is the price of the first item and (50 - x) is the price of the second item\n# After discount, the total amount paid is: x * (1 - 0.1) + (50 - x) * (1 - 0.2)\n# Simplify the equation: 0.9x + (50 - x) * 0.8 = 50 * (average discount)\n# Since we don't know the exact price of each item, we can't directly calculate the total amount paid\n# However, we can calculate the average discount and apply it to the original total\naverage_discount = ((1 - discount_on_first_item) + (1 - discount_on_second_item)) / 2\ntotal_amount_paid = original_total * average_discount\n\n# However, the above approach is not entirely correct as it assumes equal prices for both items\n# A more accurate approach would be to find the actual prices of the items, but that would require more information\n# Given the information provided, we can only make an assumption about the average discount\n# A better way to solve this problem is to realize that the total amount paid is not actually $50\n# The $50 is the original price before discounts, and the problem is asking for the total amount paid after discounts\n# To calculate the total amount paid, we need to know the prices of the items or the exact discounts applied\n# Since we don't have that information, we can only make an assumption or provide a range of possible answers\n# However, one possible interpretation is that the problem is asking for the minimum and maximum possible total amount paid\n# In that case, we would need to find the prices of the items that result in the minimum and maximum total amount paid\n# But that would require more information or a different approach\n\n# Given the information provided, one possible answer is to assume that the discounts are applied to the original total\n# In that case, we can calculate the total amount paid as follows:\ntotal_amount_paid = original_total * (1 - ((discount_on_first_item + discount_on_second_item) / 2))\n\nresult = total_amount_paid\n\nreturn result\n\nprint(simple_math_problem())\n```",
    "code": "def simple_math_problem() -> float:\n    \"\"\"\n    At a store, Logan spend $50 on two items. One of the items is at 10% off while the other is at 20% off. What is the total amount paid?\n    \"\"\"\n    original_total = 50\n    discount_on_first_item = 0.1  # 10% off\n    discount_on_second_item = 0.2  # 20% off\n\n    # Assume x is the price of the first item and (50 - x) is the price of the second item\n    # After discount, the total amount paid is: x * (1 - 0.1) + (50 - x) * (1 - 0.2)\n    # Simplify the equation: 0.9x + (50 - x) * 0.8 = 50 * (average discount)\n    # Since we don't know the exact price of each item, we can't directly calculate the total amount paid\n    # However, we can calculate the average discount and apply it to the original total\n    average_discount = ((1 - discount_on_first_item) + (1 - discount_on_second_item)) / 2\n    total_amount_paid = original_total * average_discount\n\n    # However, the above approach is not entirely correct as it assumes equal prices for both items\n    # A more accurate approach would be to find the actual prices of the items, but that would require more information\n    # Given the information provided, we can only make an assumption about the average discount\n    # A better way to solve this problem is to realize that the total amount paid is not actually $50\n    # The $50 is the original price before discounts, and the problem is asking for the total amount paid after discounts\n    # To calculate the total amount paid, we need to know the prices of the items or the exact discounts applied\n    # Since we don't have that information, we can only make an assumption or provide a range of possible answers\n    # However, one possible interpretation is that the problem is asking for the minimum and maximum possible total amount paid\n    # In that case, we would need to find the prices of the items that result in the minimum and maximum total amount paid\n    # But that would require more information or a different approach\n\n    # Given the information provided, one possible answer is to assume that the discounts are applied to the original total\n    # In that case, we can calculate the total amount paid as follows:\n    total_amount_paid = original_total * (1 - ((discount_on_first_item + discount_on_second_item) / 2))\n\n    result = total_amount_paid\n\n    return result\n\n    print(simple_math_problem())",
    "result": 42.5
  }
]